import { LoadingState } from 'decentraland-dapps/dist/modules/loading/reducer';
import { Coords } from '../land/types';
import { FetchFilesRequestAction, FetchFilesSuccessAction, FetchFilesFailureAction, FetchInfoRequestAction, FetchInfoSuccessAction, FetchInfoFailureAction, FetchCatalystFailure, FetchCatalystRequest, FetchCatalystSuccess } from './actions';
export declare type Info = {
    rootCID: string;
    debug: boolean;
    estateRegistry?: string;
    landRegistry?: string;
    title?: string;
    description?: string;
    baseParcel: Coords;
    parcels: Coords[];
};
export declare type FileSize = {
    name: string;
    size: string;
};
export declare type CatalystResponse = {
    catalysts: {
        url: string;
        timestamp: number;
        entityId: string;
    }[];
    status: 'deploying' | 'success' | 'closed';
};
export declare type ApiState = {
    files: FileSize[];
    loading: LoadingState;
    error: string | null;
    catalyst: CatalystResponse | undefined;
    info: Info | undefined;
};
export declare const INITIAL_STATE: ApiState;
export declare type ApiReducerAction = FetchFilesRequestAction | FetchFilesSuccessAction | FetchFilesFailureAction | FetchInfoRequestAction | FetchInfoSuccessAction | FetchInfoFailureAction | FetchCatalystFailure | FetchCatalystRequest | FetchCatalystSuccess;
export declare const apiReducer: (state: ApiState | undefined, action: ApiReducerAction) => ApiState;
