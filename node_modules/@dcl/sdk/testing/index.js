import { engine } from '@dcl/ecs';
import { createTestRuntime } from './runtime';
export const test = DEBUG ? createTestFunction() : () => { };
function createTestFunction() {
    let testingModule;
    try {
        testingModule = require('~system/Testing');
    }
    catch (err) {
        console.error(err);
        console.error(`üî¥üö®‚ÄºÔ∏è WARNING: The test runner is not available. The test runner will be mocked. ‚ÄºÔ∏èüö®üî¥`);
        testingModule = {
            async logTestResult(data) {
                console.log(`üß™ mocked '~system/Testing'.logResult`, data);
                return {};
            },
            async plan(data) {
                console.log(`üß™ mocked '~system/Testing'.plan`, data);
                return {};
            },
            async setCameraTransform(transform) {
                console.log(`üß™ mocked '~system/Testing'.setCameraTransform`, transform);
                return {};
            }
        };
    }
    const runtime = createTestRuntime(testingModule, engine);
    return runtime.test;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdGVzdGluZy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBQ2pDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQVc3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQTJCLEtBQUssQ0FBQyxDQUFDLENBQWlCLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxDQUFpQixHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUE7QUFFbkgsU0FBUyxrQkFBa0I7SUFDekIsSUFBSSxhQUE0QixDQUFBO0lBQ2hDLElBQUk7UUFDRixhQUFhLEdBQW1CLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0tBQzNEO0lBQUMsT0FBTyxHQUFHLEVBQUU7UUFDWixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRWxCLE9BQU8sQ0FBQyxLQUFLLENBQUMsMEZBQTBGLENBQUMsQ0FBQTtRQUV6RyxhQUFhLEdBQUc7WUFDZCxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUk7Z0JBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLEVBQUUsSUFBSSxDQUFDLENBQUE7Z0JBQzFELE9BQU8sRUFBRSxDQUFBO1lBQ1gsQ0FBQztZQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSTtnQkFDYixPQUFPLENBQUMsR0FBRyxDQUFDLGtDQUFrQyxFQUFFLElBQUksQ0FBQyxDQUFBO2dCQUNyRCxPQUFPLEVBQUUsQ0FBQTtZQUNYLENBQUM7WUFDRCxLQUFLLENBQUMsa0JBQWtCLENBQUMsU0FBUztnQkFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnREFBZ0QsRUFBRSxTQUFTLENBQUMsQ0FBQTtnQkFDeEUsT0FBTyxFQUFFLENBQUE7WUFDWCxDQUFDO1NBQ0YsQ0FBQTtLQUNGO0lBRUQsTUFBTSxPQUFPLEdBQUcsaUJBQWlCLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0lBQ3hELE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQTtBQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5naW5lIH0gZnJvbSAnQGRjbC9lY3MnXG5pbXBvcnQgeyBjcmVhdGVUZXN0UnVudGltZSB9IGZyb20gJy4vcnVudGltZSdcbmltcG9ydCB7IFRlc3REZWZpbml0aW9uRnVuY3Rpb24sIFRlc3RpbmdNb2R1bGUgfSBmcm9tICcuL3R5cGVzJ1xuXG5kZWNsYXJlIGxldCByZXF1aXJlOiBhbnlcblxuLyoqXG4gKiBJbiBkZXZlbG9wbWVudCBidWlsZHMsIHRoaXMgZnVuY3Rpb24gc2VydmVzIGFzIHRlc3QgcnVubmVyIGZvciBhdXRvbWF0ZWQgdGVzdCBzY2VuYXJpb3NcbiAqIGlmIHRoZSBydW50aW1lIGFjY2VwdHMgdGhlIGB+c3lzdGVtL1Rlc3RpbmdgIG1vZHVsZVxuICogQHB1YmxpY1xuICovXG4vKiBAX19QVVJFX18gKi9cbmV4cG9ydCBjb25zdCB0ZXN0OiBUZXN0RGVmaW5pdGlvbkZ1bmN0aW9uID0gREVCVUcgPyAvKiBAX19QVVJFX18gKi8gY3JlYXRlVGVzdEZ1bmN0aW9uKCkgOiAvKiBAX19QVVJFX18gKi8gKCkgPT4ge31cblxuZnVuY3Rpb24gY3JlYXRlVGVzdEZ1bmN0aW9uKCkge1xuICBsZXQgdGVzdGluZ01vZHVsZTogVGVzdGluZ01vZHVsZVxuICB0cnkge1xuICAgIHRlc3RpbmdNb2R1bGUgPSAvKiBAX19QVVJFX18gKi8gcmVxdWlyZSgnfnN5c3RlbS9UZXN0aW5nJylcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpXG5cbiAgICBjb25zb2xlLmVycm9yKGDwn5S08J+aqOKAvO+4jyBXQVJOSU5HOiBUaGUgdGVzdCBydW5uZXIgaXMgbm90IGF2YWlsYWJsZS4gVGhlIHRlc3QgcnVubmVyIHdpbGwgYmUgbW9ja2VkLiDigLzvuI/wn5qo8J+UtGApXG5cbiAgICB0ZXN0aW5nTW9kdWxlID0ge1xuICAgICAgYXN5bmMgbG9nVGVzdFJlc3VsdChkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn6eqIG1vY2tlZCAnfnN5c3RlbS9UZXN0aW5nJy5sb2dSZXN1bHRgLCBkYXRhKVxuICAgICAgICByZXR1cm4ge31cbiAgICAgIH0sXG4gICAgICBhc3luYyBwbGFuKGRhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coYPCfp6ogbW9ja2VkICd+c3lzdGVtL1Rlc3RpbmcnLnBsYW5gLCBkYXRhKVxuICAgICAgICByZXR1cm4ge31cbiAgICAgIH0sXG4gICAgICBhc3luYyBzZXRDYW1lcmFUcmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn6eqIG1vY2tlZCAnfnN5c3RlbS9UZXN0aW5nJy5zZXRDYW1lcmFUcmFuc2Zvcm1gLCB0cmFuc2Zvcm0pXG4gICAgICAgIHJldHVybiB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHJ1bnRpbWUgPSBjcmVhdGVUZXN0UnVudGltZSh0ZXN0aW5nTW9kdWxlLCBlbmdpbmUpXG4gIHJldHVybiBydW50aW1lLnRlc3Rcbn1cbiJdfQ==