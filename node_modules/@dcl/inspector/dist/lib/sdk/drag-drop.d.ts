import { Identifier } from 'dnd-core';
import { IAsset } from '../../components/AssetsCatalog/types';
import { TreeNode } from '../../components/ProjectAssetExplorer/ProjectView';
interface Drop<T, K = object> {
    value: T;
    context: K;
}
export type ProjectAssetDrop = Drop<string, {
    tree: Map<string, TreeNode>;
}>;
export type BuilderAsset = Drop<IAsset>;
export type IDrop = ProjectAssetDrop | BuilderAsset;
export declare enum DropTypesEnum {
    ProjectAsset = "project-asset-gltf",
    BuilderAsset = "builder-asset"
}
export type DropTypes = `${DropTypesEnum}`;
export declare function isDropType<T extends IDrop>(_: IDrop, identifier: Identifier | null, type: DropTypes): _ is T;
export declare const DROP_TYPES: DropTypesEnum[];
export {};
