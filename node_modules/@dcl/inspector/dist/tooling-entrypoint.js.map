{
  "version": 3,
  "sources": ["../src/tooling-entrypoint.ts", "../src/lib/data-layer/proto/gen/data-layer.gen.ts", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/animator.gen.js", "../../ecs/dist/components/generated/Animator.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/audio_source.gen.js", "../../ecs/dist/components/generated/AudioSource.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/audio_stream.gen.js", "../../ecs/dist/components/generated/AudioStream.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/avatar_attach.gen.js", "../../ecs/dist/components/generated/AvatarAttach.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/avatar_modifier_area.gen.js", "../../ecs/dist/components/generated/pb/decentraland/common/vectors.gen.js", "../../ecs/dist/components/generated/AvatarModifierArea.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/avatar_shape.gen.js", "../../ecs/dist/components/generated/pb/decentraland/common/colors.gen.js", "../../ecs/dist/components/generated/AvatarShape.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/billboard.gen.js", "../../ecs/dist/components/generated/Billboard.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/camera_mode.gen.js", "../../ecs/dist/components/generated/CameraMode.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/camera_mode_area.gen.js", "../../ecs/dist/components/generated/CameraModeArea.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/engine_info.gen.js", "../../ecs/dist/components/generated/EngineInfo.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/gltf_container.gen.js", "../../ecs/dist/components/generated/GltfContainer.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/gltf_container_loading_state.gen.js", "../../ecs/dist/components/generated/GltfContainerLoadingState.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/material.gen.js", "../../ecs/dist/components/generated/pb/decentraland/common/texture.gen.js", "../../ecs/dist/components/generated/Material.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/mesh_collider.gen.js", "../../ecs/dist/components/generated/MeshCollider.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/mesh_renderer.gen.js", "../../ecs/dist/components/generated/MeshRenderer.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/nft_shape.gen.js", "../../ecs/dist/components/generated/NftShape.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/pointer_events.gen.js", "../../ecs/dist/components/generated/PointerEvents.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/pointer_events_result.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/common/raycast_hit.gen.js", "../../ecs/dist/components/generated/PointerEventsResult.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/pointer_lock.gen.js", "../../ecs/dist/components/generated/PointerLock.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/raycast.gen.js", "../../ecs/dist/components/generated/Raycast.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/raycast_result.gen.js", "../../ecs/dist/components/generated/RaycastResult.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/text_shape.gen.js", "../../ecs/dist/components/generated/TextShape.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_background.gen.js", "../../ecs/dist/components/generated/pb/decentraland/common/border_rect.gen.js", "../../ecs/dist/components/generated/UiBackground.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_canvas_information.gen.js", "../../ecs/dist/components/generated/UiCanvasInformation.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_dropdown.gen.js", "../../ecs/dist/components/generated/UiDropdown.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_dropdown_result.gen.js", "../../ecs/dist/components/generated/UiDropdownResult.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_input.gen.js", "../../ecs/dist/components/generated/UiInput.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_input_result.gen.js", "../../ecs/dist/components/generated/UiInputResult.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_text.gen.js", "../../ecs/dist/components/generated/UiText.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/ui_transform.gen.js", "../../ecs/dist/components/generated/UiTransform.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/video_event.gen.js", "../../ecs/dist/components/generated/VideoEvent.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/video_player.gen.js", "../../ecs/dist/components/generated/VideoPlayer.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/visibility_component.gen.js", "../../ecs/dist/components/generated/VisibilityComponent.gen.js", "../../ecs/dist/components/generated/index.gen.js", "../../ecs/dist/components/extended/Material.js", "../../ecs/dist/components/extended/MeshRenderer.js", "../../ecs/dist/schemas/Array.js", "../../ecs/dist/schemas/basic/Boolean.js", "../../ecs/dist/schemas/basic/Integer.js", "../../ecs/dist/schemas/basic/String.js", "../../ecs/dist/schemas/basic/Enum.js", "../../ecs/dist/schemas/basic/Float.js", "../../ecs/dist/schemas/custom/Color3.js", "../../ecs/dist/schemas/custom/Color4.js", "../../ecs/dist/schemas/custom/Entity.js", "../../ecs/dist/schemas/custom/Quaternion.js", "../../ecs/dist/schemas/custom/Vector3.js", "../../ecs/dist/schemas/Map.js", "../../ecs/dist/schemas/Optional.js", "../../ecs/dist/schemas/OneOf.js", "../../ecs/dist/schemas/buildSchema/utils.js", "../../ecs/dist/schemas/buildSchema/index.js", "../../ecs/dist/schemas/index.js", "../../ecs/dist/components/manual/Name.js", "../../ecs/dist/components/manual/Transform.js", "../../ecs/dist/components/index.js", "../../ecs/dist/components/generated/component-names.gen.js", "../../ecs/dist/components/component-number.js", "../../ecs/dist/runtime/crc.js", "../../ecs/dist/runtime/invariant.js", "../../ecs/dist/systems/crdt/gset.js", "../../ecs/dist/engine/entity.js", "../../ecs/dist/serialization/ByteBuffer/index.js", "../../ecs/dist/serialization/crdt/types.js", "../../ecs/dist/serialization/crdt/crdtMessageProtocol.js", "../../ecs/dist/serialization/crdt/deleteComponent.js", "../../ecs/dist/serialization/crdt/appendValue.js", "../../ecs/dist/serialization/crdt/deleteEntity.js", "../../ecs/dist/serialization/crdt/putComponent.js", "../../ecs/dist/systems/crdt/index.js", "../../ecs/dist/systems/crdt/utils.js", "../../ecs/dist/engine/readonly.js", "../../ecs/dist/engine/lww-element-set-component-definition.js", "../../ecs/dist/engine/systems.js", "../../ecs/dist/engine/grow-only-value-set-component-definition.js", "../../ecs/dist/runtime/helpers/tree.js", "../../ecs/dist/engine/input.js", "../../ecs/dist/engine/component.js", "../../ecs/dist/engine/index.js", "../../ecs/dist/runtime/initialization/index.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/common/camera_type.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/common/input_action.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/common/loading_state.gen.js", "../../ecs/dist/components/generated/pb/decentraland/sdk/components/common/texts.gen.js", "../../ecs/dist/composite/components.js", "../../ecs/dist/composite/path.js", "../../ecs/dist/composite/instance.js", "../../ecs/dist/composite/proto/gen/composite.gen.js", "../../ecs/dist/composite/proto/gen/google/protobuf/struct.gen.js", "../../ecs/dist/composite/index.js", "../../ecs/dist/index.js", "../src/lib/sdk/components.ts", "../src/lib/data-layer/host/utils/engine.ts", "../src/lib/data-layer/host/fs-utils.ts", "../src/lib/data-layer/host/stream.ts", "../src/lib/logic/consume-stream.ts", "../src/lib/data-layer/host/upsert-asset.ts", "../src/lib/data-layer/host/utils/component.ts", "../src/lib/data-layer/host/utils/undo-redo-array.ts", "../src/lib/data-layer/host/undo-redo.ts", "../src/lib/data-layer/host/scene.ts", "../src/lib/logic/preferences/io.ts", "../src/lib/logic/preferences/types.ts", "../src/lib/data-layer/host/utils/legacy-entity-node.ts", "../src/lib/data-layer/host/utils/engine-to-composite.ts", "../src/lib/data-layer/host/utils/fs-composite-provider.ts", "../src/lib/data-layer/client/feeded-local-fs.ts", "../src/lib/data-layer/host/utils/composite-dirty.ts", "../src/lib/data-layer/host/rpc-methods.ts", "../src/lib/data-layer/host/index.ts"],
  "sourcesContent": ["export * from './lib/data-layer/remote-data-layer'\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\n\nconst protobufPackageSarasa = \"\";\n\n/**\n * @public\n */\nexport interface Empty {\n}\n\n/** TODO: Maybe when we implement the list of undo/redo available we dont need this. */\n/**\n * @public\n */\nexport interface UndoRedoResponse {\n  type: string;\n}\n\n/**\n * @public\n */\nexport interface CrdtStreamMessage {\n  data: Uint8Array;\n}\n\n/**\n * @public\n */\nexport interface AssetData {\n  data: Uint8Array;\n}\n\n/**\n * @public\n */\nexport interface Asset {\n  path: string;\n}\n\n/**\n * @public\n */\nexport interface AssetCatalogResponse {\n  basePath: string;\n  assets: Asset[];\n}\n\n/**\n * @public\n */\nexport interface ImportAssetRequest {\n  basePath: string;\n  assetPackageName: string;\n  content: Map<string, Uint8Array>;\n}\n\n/**\n * @public\n */\nexport interface ImportAssetRequest_ContentEntry {\n  key: string;\n  value: Uint8Array;\n}\n\n/**\n * @public\n */\nexport interface InspectorPreferencesMessage {\n  freeCameraInvertRotation: boolean;\n  autosaveEnabled: boolean;\n}\n\nfunction createBaseEmpty(): Empty {\n  return {};\n}\n\n/**\n * @public\n */\nexport namespace Empty {\n  export function encode(_: Empty, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): Empty {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEmpty();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(_: any): Empty {\n    return {};\n  }\n\n  export function toJSON(_: Empty): unknown {\n    const obj: any = {};\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<Empty>, I>>(base?: I): Empty {\n    return Empty.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<Empty>, I>>(_: I): Empty {\n    const message = createBaseEmpty();\n    return message;\n  }\n}\n\nfunction createBaseUndoRedoResponse(): UndoRedoResponse {\n  return { type: \"\" };\n}\n\n/**\n * @public\n */\nexport namespace UndoRedoResponse {\n  export function encode(message: UndoRedoResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): UndoRedoResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUndoRedoResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.type = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): UndoRedoResponse {\n    return { type: isSet(object.type) ? String(object.type) : \"\" };\n  }\n\n  export function toJSON(message: UndoRedoResponse): unknown {\n    const obj: any = {};\n    message.type !== undefined && (obj.type = message.type);\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<UndoRedoResponse>, I>>(base?: I): UndoRedoResponse {\n    return UndoRedoResponse.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<UndoRedoResponse>, I>>(object: I): UndoRedoResponse {\n    const message = createBaseUndoRedoResponse();\n    message.type = object.type ?? \"\";\n    return message;\n  }\n}\n\nfunction createBaseCrdtStreamMessage(): CrdtStreamMessage {\n  return { data: new Uint8Array() };\n}\n\n/**\n * @public\n */\nexport namespace CrdtStreamMessage {\n  export function encode(message: CrdtStreamMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): CrdtStreamMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCrdtStreamMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): CrdtStreamMessage {\n    return { data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array() };\n  }\n\n  export function toJSON(message: CrdtStreamMessage): unknown {\n    const obj: any = {};\n    message.data !== undefined &&\n      (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<CrdtStreamMessage>, I>>(base?: I): CrdtStreamMessage {\n    return CrdtStreamMessage.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<CrdtStreamMessage>, I>>(object: I): CrdtStreamMessage {\n    const message = createBaseCrdtStreamMessage();\n    message.data = object.data ?? new Uint8Array();\n    return message;\n  }\n}\n\nfunction createBaseAssetData(): AssetData {\n  return { data: new Uint8Array() };\n}\n\n/**\n * @public\n */\nexport namespace AssetData {\n  export function encode(message: AssetData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): AssetData {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAssetData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.data = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): AssetData {\n    return { data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array() };\n  }\n\n  export function toJSON(message: AssetData): unknown {\n    const obj: any = {};\n    message.data !== undefined &&\n      (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<AssetData>, I>>(base?: I): AssetData {\n    return AssetData.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<AssetData>, I>>(object: I): AssetData {\n    const message = createBaseAssetData();\n    message.data = object.data ?? new Uint8Array();\n    return message;\n  }\n}\n\nfunction createBaseAsset(): Asset {\n  return { path: \"\" };\n}\n\n/**\n * @public\n */\nexport namespace Asset {\n  export function encode(message: Asset, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.path !== \"\") {\n      writer.uint32(10).string(message.path);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): Asset {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAsset();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.path = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): Asset {\n    return { path: isSet(object.path) ? String(object.path) : \"\" };\n  }\n\n  export function toJSON(message: Asset): unknown {\n    const obj: any = {};\n    message.path !== undefined && (obj.path = message.path);\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<Asset>, I>>(base?: I): Asset {\n    return Asset.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<Asset>, I>>(object: I): Asset {\n    const message = createBaseAsset();\n    message.path = object.path ?? \"\";\n    return message;\n  }\n}\n\nfunction createBaseAssetCatalogResponse(): AssetCatalogResponse {\n  return { basePath: \"\", assets: [] };\n}\n\n/**\n * @public\n */\nexport namespace AssetCatalogResponse {\n  export function encode(message: AssetCatalogResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.basePath !== \"\") {\n      writer.uint32(10).string(message.basePath);\n    }\n    for (const v of message.assets) {\n      Asset.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): AssetCatalogResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAssetCatalogResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.basePath = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.assets.push(Asset.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): AssetCatalogResponse {\n    return {\n      basePath: isSet(object.basePath) ? String(object.basePath) : \"\",\n      assets: Array.isArray(object?.assets) ? object.assets.map((e: any) => Asset.fromJSON(e)) : [],\n    };\n  }\n\n  export function toJSON(message: AssetCatalogResponse): unknown {\n    const obj: any = {};\n    message.basePath !== undefined && (obj.basePath = message.basePath);\n    if (message.assets) {\n      obj.assets = message.assets.map((e) => e ? Asset.toJSON(e) : undefined);\n    } else {\n      obj.assets = [];\n    }\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<AssetCatalogResponse>, I>>(base?: I): AssetCatalogResponse {\n    return AssetCatalogResponse.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<AssetCatalogResponse>, I>>(object: I): AssetCatalogResponse {\n    const message = createBaseAssetCatalogResponse();\n    message.basePath = object.basePath ?? \"\";\n    message.assets = object.assets?.map((e) => Asset.fromPartial(e)) || [];\n    return message;\n  }\n}\n\nfunction createBaseImportAssetRequest(): ImportAssetRequest {\n  return { basePath: \"\", assetPackageName: \"\", content: new Map() };\n}\n\n/**\n * @public\n */\nexport namespace ImportAssetRequest {\n  export function encode(message: ImportAssetRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.basePath !== \"\") {\n      writer.uint32(10).string(message.basePath);\n    }\n    if (message.assetPackageName !== \"\") {\n      writer.uint32(18).string(message.assetPackageName);\n    }\n    (message.content).forEach((value, key) => {\n      ImportAssetRequest_ContentEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n    });\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): ImportAssetRequest {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseImportAssetRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.basePath = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.assetPackageName = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          const entry3 = ImportAssetRequest_ContentEntry.decode(reader, reader.uint32());\n          if (entry3.value !== undefined) {\n            message.content.set(entry3.key, entry3.value);\n          }\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): ImportAssetRequest {\n    return {\n      basePath: isSet(object.basePath) ? String(object.basePath) : \"\",\n      assetPackageName: isSet(object.assetPackageName) ? String(object.assetPackageName) : \"\",\n      content: isObject(object.content)\n        ? Object.entries(object.content).reduce<Map<string, Uint8Array>>((acc, [key, value]) => {\n          acc.set(key, bytesFromBase64(value as string));\n          return acc;\n        }, new Map())\n        : new Map(),\n    };\n  }\n\n  export function toJSON(message: ImportAssetRequest): unknown {\n    const obj: any = {};\n    message.basePath !== undefined && (obj.basePath = message.basePath);\n    message.assetPackageName !== undefined && (obj.assetPackageName = message.assetPackageName);\n    obj.content = {};\n    if (message.content) {\n      message.content.forEach((v, k) => {\n        obj.content[k] = base64FromBytes(v);\n      });\n    }\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<ImportAssetRequest>, I>>(base?: I): ImportAssetRequest {\n    return ImportAssetRequest.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<ImportAssetRequest>, I>>(object: I): ImportAssetRequest {\n    const message = createBaseImportAssetRequest();\n    message.basePath = object.basePath ?? \"\";\n    message.assetPackageName = object.assetPackageName ?? \"\";\n    message.content = (() => {\n      const m = new Map();\n      (object.content as Map<string, Uint8Array> ?? new Map()).forEach((value, key) => {\n        if (value !== undefined) {\n          m.set(key, value);\n        }\n      });\n      return m;\n    })();\n    return message;\n  }\n}\n\nfunction createBaseImportAssetRequest_ContentEntry(): ImportAssetRequest_ContentEntry {\n  return { key: \"\", value: new Uint8Array() };\n}\n\n/**\n * @public\n */\nexport namespace ImportAssetRequest_ContentEntry {\n  export function encode(\n    message: ImportAssetRequest_ContentEntry,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): ImportAssetRequest_ContentEntry {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseImportAssetRequest_ContentEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): ImportAssetRequest_ContentEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n    };\n  }\n\n  export function toJSON(message: ImportAssetRequest_ContentEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined &&\n      (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<ImportAssetRequest_ContentEntry>, I>>(\n    base?: I,\n  ): ImportAssetRequest_ContentEntry {\n    return ImportAssetRequest_ContentEntry.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<ImportAssetRequest_ContentEntry>, I>>(\n    object: I,\n  ): ImportAssetRequest_ContentEntry {\n    const message = createBaseImportAssetRequest_ContentEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  }\n}\n\nfunction createBaseInspectorPreferencesMessage(): InspectorPreferencesMessage {\n  return { freeCameraInvertRotation: false, autosaveEnabled: false };\n}\n\n/**\n * @public\n */\nexport namespace InspectorPreferencesMessage {\n  export function encode(message: InspectorPreferencesMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.freeCameraInvertRotation === true) {\n      writer.uint32(8).bool(message.freeCameraInvertRotation);\n    }\n    if (message.autosaveEnabled === true) {\n      writer.uint32(16).bool(message.autosaveEnabled);\n    }\n    return writer;\n  }\n\n  export function decode(input: _m0.Reader | Uint8Array, length?: number): InspectorPreferencesMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInspectorPreferencesMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.freeCameraInvertRotation = reader.bool();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.autosaveEnabled = reader.bool();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  }\n\n  export function fromJSON(object: any): InspectorPreferencesMessage {\n    return {\n      freeCameraInvertRotation: isSet(object.freeCameraInvertRotation)\n        ? Boolean(object.freeCameraInvertRotation)\n        : false,\n      autosaveEnabled: isSet(object.autosaveEnabled) ? Boolean(object.autosaveEnabled) : false,\n    };\n  }\n\n  export function toJSON(message: InspectorPreferencesMessage): unknown {\n    const obj: any = {};\n    message.freeCameraInvertRotation !== undefined && (obj.freeCameraInvertRotation = message.freeCameraInvertRotation);\n    message.autosaveEnabled !== undefined && (obj.autosaveEnabled = message.autosaveEnabled);\n    return obj;\n  }\n\n  export function create<I extends Exact<DeepPartial<InspectorPreferencesMessage>, I>>(\n    base?: I,\n  ): InspectorPreferencesMessage {\n    return InspectorPreferencesMessage.fromPartial(base ?? {});\n  }\n\n  export function fromPartial<I extends Exact<DeepPartial<InspectorPreferencesMessage>, I>>(\n    object: I,\n  ): InspectorPreferencesMessage {\n    const message = createBaseInspectorPreferencesMessage();\n    message.freeCameraInvertRotation = object.freeCameraInvertRotation ?? false;\n    message.autosaveEnabled = object.autosaveEnabled ?? false;\n    return message;\n  }\n}\n\n/**\n * @public\n */\nexport type DataServiceDefinition = typeof DataServiceDefinition;\n/**\n * @public\n */\n\n/**\n * @internal\n */\nexport const DataServiceDefinition = {\n  name: \"DataService\",\n  fullName: \"DataService\",\n  methods: {\n    crdtStream: {\n      name: \"CrdtStream\",\n      requestType: CrdtStreamMessage,\n      requestStream: true,\n      responseType: CrdtStreamMessage,\n      responseStream: true,\n      options: {},\n    },\n    undo: {\n      name: \"Undo\",\n      requestType: Empty,\n      requestStream: false,\n      responseType: UndoRedoResponse,\n      responseStream: false,\n      options: {},\n    },\n    redo: {\n      name: \"Redo\",\n      requestType: Empty,\n      requestStream: false,\n      responseType: UndoRedoResponse,\n      responseStream: false,\n      options: {},\n    },\n    getAssetCatalog: {\n      name: \"GetAssetCatalog\",\n      requestType: Empty,\n      requestStream: false,\n      responseType: AssetCatalogResponse,\n      responseStream: false,\n      options: {},\n    },\n    getAssetData: {\n      name: \"GetAssetData\",\n      requestType: Asset,\n      requestStream: false,\n      responseType: AssetData,\n      responseStream: false,\n      options: {},\n    },\n    importAsset: {\n      name: \"ImportAsset\",\n      requestType: ImportAssetRequest,\n      requestStream: false,\n      responseType: Empty,\n      responseStream: false,\n      options: {},\n    },\n    removeAsset: {\n      name: \"RemoveAsset\",\n      requestType: Asset,\n      requestStream: false,\n      responseType: Empty,\n      responseStream: false,\n      options: {},\n    },\n    save: {\n      name: \"Save\",\n      requestType: Empty,\n      requestStream: false,\n      responseType: Empty,\n      responseStream: false,\n      options: {},\n    },\n    getInspectorPreferences: {\n      name: \"GetInspectorPreferences\",\n      requestType: Empty,\n      requestStream: false,\n      responseType: InspectorPreferencesMessage,\n      responseStream: false,\n      options: {},\n    },\n    setInspectorPreferences: {\n      name: \"SetInspectorPreferences\",\n      requestType: InspectorPreferencesMessage,\n      requestStream: false,\n      responseType: Empty,\n      responseStream: false,\n      options: {},\n    },\n  },\n} as const;\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar tsProtoGlobalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if (tsProtoGlobalThis.Buffer) {\n    return Uint8Array.from(tsProtoGlobalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = tsProtoGlobalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if (tsProtoGlobalThis.Buffer) {\n    return tsProtoGlobalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return tsProtoGlobalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\n/**\n * @public\n */\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string } ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n/**\n * @public\n */\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBAnimator() {\n    return { states: [] };\n}\n/**\n * @public\n */\nexport var PBAnimator;\n(function (PBAnimator) {\n    function encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.states) {\n            PBAnimationState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBAnimator.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAnimator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.states.push(PBAnimationState.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAnimator.decode = decode;\n})(PBAnimator || (PBAnimator = {}));\nfunction createBasePBAnimationState() {\n    return {\n        name: \"\",\n        clip: \"\",\n        playing: undefined,\n        weight: undefined,\n        speed: undefined,\n        loop: undefined,\n        shouldReset: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBAnimationState;\n(function (PBAnimationState) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.clip !== \"\") {\n            writer.uint32(18).string(message.clip);\n        }\n        if (message.playing !== undefined) {\n            writer.uint32(24).bool(message.playing);\n        }\n        if (message.weight !== undefined) {\n            writer.uint32(37).float(message.weight);\n        }\n        if (message.speed !== undefined) {\n            writer.uint32(45).float(message.speed);\n        }\n        if (message.loop !== undefined) {\n            writer.uint32(48).bool(message.loop);\n        }\n        if (message.shouldReset !== undefined) {\n            writer.uint32(56).bool(message.shouldReset);\n        }\n        return writer;\n    }\n    PBAnimationState.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAnimationState();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.name = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.clip = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.playing = reader.bool();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.weight = reader.float();\n                    continue;\n                case 5:\n                    if (tag !== 45) {\n                        break;\n                    }\n                    message.speed = reader.float();\n                    continue;\n                case 6:\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.loop = reader.bool();\n                    continue;\n                case 7:\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.shouldReset = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAnimationState.decode = decode;\n})(PBAnimationState || (PBAnimationState = {}));\n", "import { PBAnimator } from './pb/decentraland/sdk/components/animator.gen';\n/**\n * @internal\n */\nexport const AnimatorSchema = {\n    COMPONENT_ID: 1042,\n    serialize(value, builder) {\n        const writer = PBAnimator.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAnimator.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAnimator.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAnimator\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBAudioSource() {\n    return { playing: undefined, volume: undefined, loop: undefined, pitch: undefined, audioClipUrl: \"\" };\n}\n/**\n * @public\n */\nexport var PBAudioSource;\n(function (PBAudioSource) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.playing !== undefined) {\n            writer.uint32(8).bool(message.playing);\n        }\n        if (message.volume !== undefined) {\n            writer.uint32(21).float(message.volume);\n        }\n        if (message.loop !== undefined) {\n            writer.uint32(24).bool(message.loop);\n        }\n        if (message.pitch !== undefined) {\n            writer.uint32(37).float(message.pitch);\n        }\n        if (message.audioClipUrl !== \"\") {\n            writer.uint32(42).string(message.audioClipUrl);\n        }\n        return writer;\n    }\n    PBAudioSource.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAudioSource();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.playing = reader.bool();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.volume = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.loop = reader.bool();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.pitch = reader.float();\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.audioClipUrl = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAudioSource.decode = decode;\n})(PBAudioSource || (PBAudioSource = {}));\n", "import { PBAudioSource } from './pb/decentraland/sdk/components/audio_source.gen';\n/**\n * @internal\n */\nexport const AudioSourceSchema = {\n    COMPONENT_ID: 1020,\n    serialize(value, builder) {\n        const writer = PBAudioSource.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAudioSource.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAudioSource.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAudioSource\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBAudioStream() {\n    return { playing: undefined, volume: undefined, url: \"\" };\n}\n/**\n * @public\n */\nexport var PBAudioStream;\n(function (PBAudioStream) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.playing !== undefined) {\n            writer.uint32(8).bool(message.playing);\n        }\n        if (message.volume !== undefined) {\n            writer.uint32(21).float(message.volume);\n        }\n        if (message.url !== \"\") {\n            writer.uint32(26).string(message.url);\n        }\n        return writer;\n    }\n    PBAudioStream.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAudioStream();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.playing = reader.bool();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.volume = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.url = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAudioStream.decode = decode;\n})(PBAudioStream || (PBAudioStream = {}));\n", "import { PBAudioStream } from './pb/decentraland/sdk/components/audio_stream.gen';\n/**\n * @internal\n */\nexport const AudioStreamSchema = {\n    COMPONENT_ID: 1021,\n    serialize(value, builder) {\n        const writer = PBAudioStream.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAudioStream.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAudioStream.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAudioStream\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/** AvatarAnchorPointType determines the part of the avatar's body that anchors the Entity. */\n/**\n * @public\n */\nexport var AvatarAnchorPointType;\n(function (AvatarAnchorPointType) {\n    AvatarAnchorPointType[AvatarAnchorPointType[\"AAPT_POSITION\"] = 0] = \"AAPT_POSITION\";\n    AvatarAnchorPointType[AvatarAnchorPointType[\"AAPT_NAME_TAG\"] = 1] = \"AAPT_NAME_TAG\";\n    AvatarAnchorPointType[AvatarAnchorPointType[\"AAPT_LEFT_HAND\"] = 2] = \"AAPT_LEFT_HAND\";\n    AvatarAnchorPointType[AvatarAnchorPointType[\"AAPT_RIGHT_HAND\"] = 3] = \"AAPT_RIGHT_HAND\";\n})(AvatarAnchorPointType || (AvatarAnchorPointType = {}));\nfunction createBasePBAvatarAttach() {\n    return { avatarId: undefined, anchorPointId: 0 };\n}\n/**\n * @public\n */\nexport var PBAvatarAttach;\n(function (PBAvatarAttach) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.avatarId !== undefined) {\n            writer.uint32(10).string(message.avatarId);\n        }\n        if (message.anchorPointId !== 0) {\n            writer.uint32(16).int32(message.anchorPointId);\n        }\n        return writer;\n    }\n    PBAvatarAttach.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAvatarAttach();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.avatarId = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.anchorPointId = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAvatarAttach.decode = decode;\n})(PBAvatarAttach || (PBAvatarAttach = {}));\n", "import { PBAvatarAttach } from './pb/decentraland/sdk/components/avatar_attach.gen';\n/**\n * @internal\n */\nexport const AvatarAttachSchema = {\n    COMPONENT_ID: 1073,\n    serialize(value, builder) {\n        const writer = PBAvatarAttach.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAvatarAttach.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAvatarAttach.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAvatarAttach\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Vector3 } from \"../../common/vectors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/** AvatarModifierType is an effect that should be applied to avatars inside the region. */\n/**\n * @public\n */\nexport var AvatarModifierType;\n(function (AvatarModifierType) {\n    /** AMT_HIDE_AVATARS - avatars are invisible */\n    AvatarModifierType[AvatarModifierType[\"AMT_HIDE_AVATARS\"] = 0] = \"AMT_HIDE_AVATARS\";\n    /** AMT_DISABLE_PASSPORTS - selecting (e.g. clicking) an avatar will not bring up their profile. */\n    AvatarModifierType[AvatarModifierType[\"AMT_DISABLE_PASSPORTS\"] = 1] = \"AMT_DISABLE_PASSPORTS\";\n})(AvatarModifierType || (AvatarModifierType = {}));\nfunction createBasePBAvatarModifierArea() {\n    return { area: undefined, excludeIds: [], modifiers: [] };\n}\n/**\n * @public\n */\nexport var PBAvatarModifierArea;\n(function (PBAvatarModifierArea) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.area !== undefined) {\n            Vector3.encode(message.area, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.excludeIds) {\n            writer.uint32(18).string(v);\n        }\n        writer.uint32(26).fork();\n        for (const v of message.modifiers) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    }\n    PBAvatarModifierArea.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAvatarModifierArea();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.area = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.excludeIds.push(reader.string());\n                    continue;\n                case 3:\n                    if (tag === 24) {\n                        message.modifiers.push(reader.int32());\n                        continue;\n                    }\n                    if (tag === 26) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.modifiers.push(reader.int32());\n                        }\n                        continue;\n                    }\n                    break;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAvatarModifierArea.decode = decode;\n})(PBAvatarModifierArea || (PBAvatarModifierArea = {}));\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.common\";\nfunction createBasePosition() {\n    return { x: 0, y: 0, z: 0 };\n}\n/**\n * @public\n */\nexport var Position;\n(function (Position) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(13).float(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(21).float(message.y);\n        }\n        if (message.z !== 0) {\n            writer.uint32(29).float(message.z);\n        }\n        return writer;\n    }\n    Position.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePosition();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.x = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.y = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.z = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Position.decode = decode;\n})(Position || (Position = {}));\nfunction createBaseVector3() {\n    return { x: 0, y: 0, z: 0 };\n}\n/**\n * @public\n */\nexport var Vector3;\n(function (Vector3) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(13).float(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(21).float(message.y);\n        }\n        if (message.z !== 0) {\n            writer.uint32(29).float(message.z);\n        }\n        return writer;\n    }\n    Vector3.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVector3();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.x = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.y = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.z = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Vector3.decode = decode;\n})(Vector3 || (Vector3 = {}));\nfunction createBaseVector2() {\n    return { x: 0, y: 0 };\n}\n/**\n * @public\n */\nexport var Vector2;\n(function (Vector2) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(13).float(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(21).float(message.y);\n        }\n        return writer;\n    }\n    Vector2.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVector2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.x = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.y = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Vector2.decode = decode;\n})(Vector2 || (Vector2 = {}));\nfunction createBaseQuaternion() {\n    return { x: 0, y: 0, z: 0, w: 0 };\n}\n/**\n * @public\n */\nexport var Quaternion;\n(function (Quaternion) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(13).float(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(21).float(message.y);\n        }\n        if (message.z !== 0) {\n            writer.uint32(29).float(message.z);\n        }\n        if (message.w !== 0) {\n            writer.uint32(37).float(message.w);\n        }\n        return writer;\n    }\n    Quaternion.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseQuaternion();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.x = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.y = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.z = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.w = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Quaternion.decode = decode;\n})(Quaternion || (Quaternion = {}));\n", "import { PBAvatarModifierArea } from './pb/decentraland/sdk/components/avatar_modifier_area.gen';\n/**\n * @internal\n */\nexport const AvatarModifierAreaSchema = {\n    COMPONENT_ID: 1070,\n    serialize(value, builder) {\n        const writer = PBAvatarModifierArea.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAvatarModifierArea.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAvatarModifierArea.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAvatarModifierArea\"\n    }\n};\n", "/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Color3 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBAvatarShape() {\n    return {\n        id: \"\",\n        name: undefined,\n        bodyShape: undefined,\n        skinColor: undefined,\n        hairColor: undefined,\n        eyeColor: undefined,\n        expressionTriggerId: undefined,\n        expressionTriggerTimestamp: undefined,\n        talking: undefined,\n        wearables: [],\n        emotes: [],\n    };\n}\n/**\n * @public\n */\nexport var PBAvatarShape;\n(function (PBAvatarShape) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== undefined) {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.bodyShape !== undefined) {\n            writer.uint32(26).string(message.bodyShape);\n        }\n        if (message.skinColor !== undefined) {\n            Color3.encode(message.skinColor, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.hairColor !== undefined) {\n            Color3.encode(message.hairColor, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.eyeColor !== undefined) {\n            Color3.encode(message.eyeColor, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.expressionTriggerId !== undefined) {\n            writer.uint32(58).string(message.expressionTriggerId);\n        }\n        if (message.expressionTriggerTimestamp !== undefined) {\n            writer.uint32(64).int64(message.expressionTriggerTimestamp);\n        }\n        if (message.talking !== undefined) {\n            writer.uint32(72).bool(message.talking);\n        }\n        for (const v of message.wearables) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.emotes) {\n            writer.uint32(90).string(v);\n        }\n        return writer;\n    }\n    PBAvatarShape.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBAvatarShape();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.name = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.bodyShape = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.skinColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.hairColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.eyeColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.expressionTriggerId = reader.string();\n                    continue;\n                case 8:\n                    if (tag !== 64) {\n                        break;\n                    }\n                    message.expressionTriggerTimestamp = longToNumber(reader.int64());\n                    continue;\n                case 9:\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.talking = reader.bool();\n                    continue;\n                case 10:\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.wearables.push(reader.string());\n                    continue;\n                case 11:\n                    if (tag !== 90) {\n                        break;\n                    }\n                    message.emotes.push(reader.string());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBAvatarShape.decode = decode;\n})(PBAvatarShape || (PBAvatarShape = {}));\nvar tsProtoGlobalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new tsProtoGlobalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.common\";\nfunction createBaseColor3() {\n    return { r: 0, g: 0, b: 0 };\n}\n/**\n * @public\n */\nexport var Color3;\n(function (Color3) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.r !== 0) {\n            writer.uint32(13).float(message.r);\n        }\n        if (message.g !== 0) {\n            writer.uint32(21).float(message.g);\n        }\n        if (message.b !== 0) {\n            writer.uint32(29).float(message.b);\n        }\n        return writer;\n    }\n    Color3.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseColor3();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.r = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.g = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.b = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Color3.decode = decode;\n})(Color3 || (Color3 = {}));\nfunction createBaseColor4() {\n    return { r: 0, g: 0, b: 0, a: 0 };\n}\n/**\n * @public\n */\nexport var Color4;\n(function (Color4) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.r !== 0) {\n            writer.uint32(13).float(message.r);\n        }\n        if (message.g !== 0) {\n            writer.uint32(21).float(message.g);\n        }\n        if (message.b !== 0) {\n            writer.uint32(29).float(message.b);\n        }\n        if (message.a !== 0) {\n            writer.uint32(37).float(message.a);\n        }\n        return writer;\n    }\n    Color4.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseColor4();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.r = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.g = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.b = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.a = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Color4.decode = decode;\n})(Color4 || (Color4 = {}));\n", "import { PBAvatarShape } from './pb/decentraland/sdk/components/avatar_shape.gen';\n/**\n * @internal\n */\nexport const AvatarShapeSchema = {\n    COMPONENT_ID: 1080,\n    serialize(value, builder) {\n        const writer = PBAvatarShape.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBAvatarShape.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBAvatarShape.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBAvatarShape\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/**\n * BillboardMode indicates one or more axis for automatic rotation, in OR-able bit flag form.\n * Only the values below and the (BM_X | BM_Y) combination are valid.\n */\n/**\n * @public\n */\nexport var BillboardMode;\n(function (BillboardMode) {\n    BillboardMode[BillboardMode[\"BM_NONE\"] = 0] = \"BM_NONE\";\n    BillboardMode[BillboardMode[\"BM_X\"] = 1] = \"BM_X\";\n    BillboardMode[BillboardMode[\"BM_Y\"] = 2] = \"BM_Y\";\n    BillboardMode[BillboardMode[\"BM_Z\"] = 4] = \"BM_Z\";\n    /** BM_ALL - bitwise combination BM_X | BM_Y | BM_Z */\n    BillboardMode[BillboardMode[\"BM_ALL\"] = 7] = \"BM_ALL\";\n})(BillboardMode || (BillboardMode = {}));\nfunction createBasePBBillboard() {\n    return { billboardMode: undefined };\n}\n/**\n * @public\n */\nexport var PBBillboard;\n(function (PBBillboard) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.billboardMode !== undefined) {\n            writer.uint32(8).int32(message.billboardMode);\n        }\n        return writer;\n    }\n    PBBillboard.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBBillboard();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.billboardMode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBBillboard.decode = decode;\n})(PBBillboard || (PBBillboard = {}));\n", "import { PBBillboard } from './pb/decentraland/sdk/components/billboard.gen';\n/**\n * @internal\n */\nexport const BillboardSchema = {\n    COMPONENT_ID: 1090,\n    serialize(value, builder) {\n        const writer = PBBillboard.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBBillboard.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBBillboard.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBBillboard\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBCameraMode() {\n    return { mode: 0 };\n}\n/**\n * @public\n */\nexport var PBCameraMode;\n(function (PBCameraMode) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.mode !== 0) {\n            writer.uint32(8).int32(message.mode);\n        }\n        return writer;\n    }\n    PBCameraMode.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBCameraMode();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.mode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBCameraMode.decode = decode;\n})(PBCameraMode || (PBCameraMode = {}));\n", "import { PBCameraMode } from './pb/decentraland/sdk/components/camera_mode.gen';\n/**\n * @internal\n */\nexport const CameraModeSchema = {\n    COMPONENT_ID: 1072,\n    serialize(value, builder) {\n        const writer = PBCameraMode.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBCameraMode.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBCameraMode.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBCameraMode\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Vector3 } from \"../../common/vectors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBCameraModeArea() {\n    return { area: undefined, mode: 0 };\n}\n/**\n * @public\n */\nexport var PBCameraModeArea;\n(function (PBCameraModeArea) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.area !== undefined) {\n            Vector3.encode(message.area, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.mode !== 0) {\n            writer.uint32(16).int32(message.mode);\n        }\n        return writer;\n    }\n    PBCameraModeArea.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBCameraModeArea();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.area = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.mode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBCameraModeArea.decode = decode;\n})(PBCameraModeArea || (PBCameraModeArea = {}));\n", "import { PBCameraModeArea } from './pb/decentraland/sdk/components/camera_mode_area.gen';\n/**\n * @internal\n */\nexport const CameraModeAreaSchema = {\n    COMPONENT_ID: 1071,\n    serialize(value, builder) {\n        const writer = PBCameraModeArea.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBCameraModeArea.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBCameraModeArea.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBCameraModeArea\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBEngineInfo() {\n    return { frameNumber: 0, totalRuntime: 0, tickNumber: 0 };\n}\n/**\n * @public\n */\nexport var PBEngineInfo;\n(function (PBEngineInfo) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.frameNumber !== 0) {\n            writer.uint32(8).uint32(message.frameNumber);\n        }\n        if (message.totalRuntime !== 0) {\n            writer.uint32(21).float(message.totalRuntime);\n        }\n        if (message.tickNumber !== 0) {\n            writer.uint32(24).uint32(message.tickNumber);\n        }\n        return writer;\n    }\n    PBEngineInfo.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBEngineInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.frameNumber = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.totalRuntime = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.tickNumber = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBEngineInfo.decode = decode;\n})(PBEngineInfo || (PBEngineInfo = {}));\n", "import { PBEngineInfo } from './pb/decentraland/sdk/components/engine_info.gen';\n/**\n * @internal\n */\nexport const EngineInfoSchema = {\n    COMPONENT_ID: 1048,\n    serialize(value, builder) {\n        const writer = PBEngineInfo.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBEngineInfo.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBEngineInfo.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBEngineInfo\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBGltfContainer() {\n    return { src: \"\", visibleMeshesCollisionMask: undefined, invisibleMeshesCollisionMask: undefined };\n}\n/**\n * @public\n */\nexport var PBGltfContainer;\n(function (PBGltfContainer) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.src !== \"\") {\n            writer.uint32(10).string(message.src);\n        }\n        if (message.visibleMeshesCollisionMask !== undefined) {\n            writer.uint32(32).uint32(message.visibleMeshesCollisionMask);\n        }\n        if (message.invisibleMeshesCollisionMask !== undefined) {\n            writer.uint32(40).uint32(message.invisibleMeshesCollisionMask);\n        }\n        return writer;\n    }\n    PBGltfContainer.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBGltfContainer();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.src = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.visibleMeshesCollisionMask = reader.uint32();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.invisibleMeshesCollisionMask = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBGltfContainer.decode = decode;\n})(PBGltfContainer || (PBGltfContainer = {}));\n", "import { PBGltfContainer } from './pb/decentraland/sdk/components/gltf_container.gen';\n/**\n * @internal\n */\nexport const GltfContainerSchema = {\n    COMPONENT_ID: 1041,\n    serialize(value, builder) {\n        const writer = PBGltfContainer.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBGltfContainer.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBGltfContainer.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBGltfContainer\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBGltfContainerLoadingState() {\n    return { currentState: 0 };\n}\n/**\n * @public\n */\nexport var PBGltfContainerLoadingState;\n(function (PBGltfContainerLoadingState) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.currentState !== 0) {\n            writer.uint32(8).int32(message.currentState);\n        }\n        return writer;\n    }\n    PBGltfContainerLoadingState.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBGltfContainerLoadingState();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.currentState = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBGltfContainerLoadingState.decode = decode;\n})(PBGltfContainerLoadingState || (PBGltfContainerLoadingState = {}));\n", "import { PBGltfContainerLoadingState } from './pb/decentraland/sdk/components/gltf_container_loading_state.gen';\n/**\n * @internal\n */\nexport const GltfContainerLoadingStateSchema = {\n    COMPONENT_ID: 1049,\n    serialize(value, builder) {\n        const writer = PBGltfContainerLoadingState.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBGltfContainerLoadingState.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBGltfContainerLoadingState.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBGltfContainerLoadingState\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color3, Color4 } from \"../../common/colors.gen\";\nimport { TextureUnion } from \"../../common/texture.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/**\n * @public\n */\nexport var MaterialTransparencyMode;\n(function (MaterialTransparencyMode) {\n    MaterialTransparencyMode[MaterialTransparencyMode[\"MTM_OPAQUE\"] = 0] = \"MTM_OPAQUE\";\n    MaterialTransparencyMode[MaterialTransparencyMode[\"MTM_ALPHA_TEST\"] = 1] = \"MTM_ALPHA_TEST\";\n    MaterialTransparencyMode[MaterialTransparencyMode[\"MTM_ALPHA_BLEND\"] = 2] = \"MTM_ALPHA_BLEND\";\n    MaterialTransparencyMode[MaterialTransparencyMode[\"MTM_ALPHA_TEST_AND_ALPHA_BLEND\"] = 3] = \"MTM_ALPHA_TEST_AND_ALPHA_BLEND\";\n    MaterialTransparencyMode[MaterialTransparencyMode[\"MTM_AUTO\"] = 4] = \"MTM_AUTO\";\n})(MaterialTransparencyMode || (MaterialTransparencyMode = {}));\nfunction createBasePBMaterial() {\n    return { material: undefined };\n}\n/**\n * @public\n */\nexport var PBMaterial;\n(function (PBMaterial) {\n    function encode(message, writer = _m0.Writer.create()) {\n        switch (message.material?.$case) {\n            case \"unlit\":\n                PBMaterial_UnlitMaterial.encode(message.material.unlit, writer.uint32(10).fork()).ldelim();\n                break;\n            case \"pbr\":\n                PBMaterial_PbrMaterial.encode(message.material.pbr, writer.uint32(18).fork()).ldelim();\n                break;\n        }\n        return writer;\n    }\n    PBMaterial.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMaterial();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.material = { $case: \"unlit\", unlit: PBMaterial_UnlitMaterial.decode(reader, reader.uint32()) };\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.material = { $case: \"pbr\", pbr: PBMaterial_PbrMaterial.decode(reader, reader.uint32()) };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMaterial.decode = decode;\n})(PBMaterial || (PBMaterial = {}));\nfunction createBasePBMaterial_UnlitMaterial() {\n    return { texture: undefined, alphaTest: undefined, castShadows: undefined, diffuseColor: undefined };\n}\n/**\n * @public\n */\nexport var PBMaterial_UnlitMaterial;\n(function (PBMaterial_UnlitMaterial) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.texture !== undefined) {\n            TextureUnion.encode(message.texture, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.alphaTest !== undefined) {\n            writer.uint32(21).float(message.alphaTest);\n        }\n        if (message.castShadows !== undefined) {\n            writer.uint32(24).bool(message.castShadows);\n        }\n        if (message.diffuseColor !== undefined) {\n            Color4.encode(message.diffuseColor, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBMaterial_UnlitMaterial.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMaterial_UnlitMaterial();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.texture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.alphaTest = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.castShadows = reader.bool();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.diffuseColor = Color4.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMaterial_UnlitMaterial.decode = decode;\n})(PBMaterial_UnlitMaterial || (PBMaterial_UnlitMaterial = {}));\nfunction createBasePBMaterial_PbrMaterial() {\n    return {\n        texture: undefined,\n        alphaTest: undefined,\n        castShadows: undefined,\n        alphaTexture: undefined,\n        emissiveTexture: undefined,\n        bumpTexture: undefined,\n        albedoColor: undefined,\n        emissiveColor: undefined,\n        reflectivityColor: undefined,\n        transparencyMode: undefined,\n        metallic: undefined,\n        roughness: undefined,\n        glossiness: undefined,\n        specularIntensity: undefined,\n        emissiveIntensity: undefined,\n        directIntensity: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBMaterial_PbrMaterial;\n(function (PBMaterial_PbrMaterial) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.texture !== undefined) {\n            TextureUnion.encode(message.texture, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.alphaTest !== undefined) {\n            writer.uint32(21).float(message.alphaTest);\n        }\n        if (message.castShadows !== undefined) {\n            writer.uint32(24).bool(message.castShadows);\n        }\n        if (message.alphaTexture !== undefined) {\n            TextureUnion.encode(message.alphaTexture, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.emissiveTexture !== undefined) {\n            TextureUnion.encode(message.emissiveTexture, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.bumpTexture !== undefined) {\n            TextureUnion.encode(message.bumpTexture, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.albedoColor !== undefined) {\n            Color4.encode(message.albedoColor, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.emissiveColor !== undefined) {\n            Color3.encode(message.emissiveColor, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.reflectivityColor !== undefined) {\n            Color3.encode(message.reflectivityColor, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.transparencyMode !== undefined) {\n            writer.uint32(80).int32(message.transparencyMode);\n        }\n        if (message.metallic !== undefined) {\n            writer.uint32(93).float(message.metallic);\n        }\n        if (message.roughness !== undefined) {\n            writer.uint32(101).float(message.roughness);\n        }\n        if (message.glossiness !== undefined) {\n            writer.uint32(109).float(message.glossiness);\n        }\n        if (message.specularIntensity !== undefined) {\n            writer.uint32(117).float(message.specularIntensity);\n        }\n        if (message.emissiveIntensity !== undefined) {\n            writer.uint32(125).float(message.emissiveIntensity);\n        }\n        if (message.directIntensity !== undefined) {\n            writer.uint32(133).float(message.directIntensity);\n        }\n        return writer;\n    }\n    PBMaterial_PbrMaterial.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMaterial_PbrMaterial();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.texture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.alphaTest = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.castShadows = reader.bool();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.alphaTexture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.emissiveTexture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.bumpTexture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.albedoColor = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.emissiveColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 9:\n                    if (tag !== 74) {\n                        break;\n                    }\n                    message.reflectivityColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.transparencyMode = reader.int32();\n                    continue;\n                case 11:\n                    if (tag !== 93) {\n                        break;\n                    }\n                    message.metallic = reader.float();\n                    continue;\n                case 12:\n                    if (tag !== 101) {\n                        break;\n                    }\n                    message.roughness = reader.float();\n                    continue;\n                case 13:\n                    if (tag !== 109) {\n                        break;\n                    }\n                    message.glossiness = reader.float();\n                    continue;\n                case 14:\n                    if (tag !== 117) {\n                        break;\n                    }\n                    message.specularIntensity = reader.float();\n                    continue;\n                case 15:\n                    if (tag !== 125) {\n                        break;\n                    }\n                    message.emissiveIntensity = reader.float();\n                    continue;\n                case 16:\n                    if (tag !== 133) {\n                        break;\n                    }\n                    message.directIntensity = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMaterial_PbrMaterial.decode = decode;\n})(PBMaterial_PbrMaterial || (PBMaterial_PbrMaterial = {}));\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.common\";\n/**\n * @public\n */\nexport var TextureWrapMode;\n(function (TextureWrapMode) {\n    TextureWrapMode[TextureWrapMode[\"TWM_REPEAT\"] = 0] = \"TWM_REPEAT\";\n    TextureWrapMode[TextureWrapMode[\"TWM_CLAMP\"] = 1] = \"TWM_CLAMP\";\n    TextureWrapMode[TextureWrapMode[\"TWM_MIRROR\"] = 2] = \"TWM_MIRROR\";\n})(TextureWrapMode || (TextureWrapMode = {}));\n/**\n * @public\n */\nexport var TextureFilterMode;\n(function (TextureFilterMode) {\n    TextureFilterMode[TextureFilterMode[\"TFM_POINT\"] = 0] = \"TFM_POINT\";\n    TextureFilterMode[TextureFilterMode[\"TFM_BILINEAR\"] = 1] = \"TFM_BILINEAR\";\n    TextureFilterMode[TextureFilterMode[\"TFM_TRILINEAR\"] = 2] = \"TFM_TRILINEAR\";\n})(TextureFilterMode || (TextureFilterMode = {}));\nfunction createBaseTexture() {\n    return { src: \"\", wrapMode: undefined, filterMode: undefined };\n}\n/**\n * @public\n */\nexport var Texture;\n(function (Texture) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.src !== \"\") {\n            writer.uint32(10).string(message.src);\n        }\n        if (message.wrapMode !== undefined) {\n            writer.uint32(16).int32(message.wrapMode);\n        }\n        if (message.filterMode !== undefined) {\n            writer.uint32(24).int32(message.filterMode);\n        }\n        return writer;\n    }\n    Texture.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTexture();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.src = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.wrapMode = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.filterMode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Texture.decode = decode;\n})(Texture || (Texture = {}));\nfunction createBaseAvatarTexture() {\n    return { userId: \"\", wrapMode: undefined, filterMode: undefined };\n}\n/**\n * @public\n */\nexport var AvatarTexture;\n(function (AvatarTexture) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.userId !== \"\") {\n            writer.uint32(10).string(message.userId);\n        }\n        if (message.wrapMode !== undefined) {\n            writer.uint32(16).int32(message.wrapMode);\n        }\n        if (message.filterMode !== undefined) {\n            writer.uint32(24).int32(message.filterMode);\n        }\n        return writer;\n    }\n    AvatarTexture.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAvatarTexture();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.userId = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.wrapMode = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.filterMode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    AvatarTexture.decode = decode;\n})(AvatarTexture || (AvatarTexture = {}));\nfunction createBaseVideoTexture() {\n    return { videoPlayerEntity: 0, wrapMode: undefined, filterMode: undefined };\n}\n/**\n * @public\n */\nexport var VideoTexture;\n(function (VideoTexture) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.videoPlayerEntity !== 0) {\n            writer.uint32(8).uint32(message.videoPlayerEntity);\n        }\n        if (message.wrapMode !== undefined) {\n            writer.uint32(16).int32(message.wrapMode);\n        }\n        if (message.filterMode !== undefined) {\n            writer.uint32(24).int32(message.filterMode);\n        }\n        return writer;\n    }\n    VideoTexture.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVideoTexture();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.videoPlayerEntity = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.wrapMode = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.filterMode = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    VideoTexture.decode = decode;\n})(VideoTexture || (VideoTexture = {}));\nfunction createBaseTextureUnion() {\n    return { tex: undefined };\n}\n/**\n * @public\n */\nexport var TextureUnion;\n(function (TextureUnion) {\n    function encode(message, writer = _m0.Writer.create()) {\n        switch (message.tex?.$case) {\n            case \"texture\":\n                Texture.encode(message.tex.texture, writer.uint32(10).fork()).ldelim();\n                break;\n            case \"avatarTexture\":\n                AvatarTexture.encode(message.tex.avatarTexture, writer.uint32(18).fork()).ldelim();\n                break;\n            case \"videoTexture\":\n                VideoTexture.encode(message.tex.videoTexture, writer.uint32(26).fork()).ldelim();\n                break;\n        }\n        return writer;\n    }\n    TextureUnion.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTextureUnion();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.tex = { $case: \"texture\", texture: Texture.decode(reader, reader.uint32()) };\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.tex = { $case: \"avatarTexture\", avatarTexture: AvatarTexture.decode(reader, reader.uint32()) };\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.tex = { $case: \"videoTexture\", videoTexture: VideoTexture.decode(reader, reader.uint32()) };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    TextureUnion.decode = decode;\n})(TextureUnion || (TextureUnion = {}));\n", "import { PBMaterial } from './pb/decentraland/sdk/components/material.gen';\n/**\n * @internal\n */\nexport const MaterialSchema = {\n    COMPONENT_ID: 1017,\n    serialize(value, builder) {\n        const writer = PBMaterial.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBMaterial.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBMaterial.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBMaterial\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/** ColliderLayer determines the kind of collision to detect, in OR-able bit flag form. */\n/**\n * @public\n */\nexport var ColliderLayer;\n(function (ColliderLayer) {\n    /** CL_NONE - no collisions */\n    ColliderLayer[ColliderLayer[\"CL_NONE\"] = 0] = \"CL_NONE\";\n    /** CL_POINTER - collisions with the player's pointer ray (e.g. mouse cursor hovering) */\n    ColliderLayer[ColliderLayer[\"CL_POINTER\"] = 1] = \"CL_POINTER\";\n    /** CL_PHYSICS - collision affecting your player's physics i.e. walls, floor, moving platfroms */\n    ColliderLayer[ColliderLayer[\"CL_PHYSICS\"] = 2] = \"CL_PHYSICS\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED1\"] = 4] = \"CL_RESERVED1\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED2\"] = 8] = \"CL_RESERVED2\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED3\"] = 16] = \"CL_RESERVED3\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED4\"] = 32] = \"CL_RESERVED4\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED5\"] = 64] = \"CL_RESERVED5\";\n    ColliderLayer[ColliderLayer[\"CL_RESERVED6\"] = 128] = \"CL_RESERVED6\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM1\"] = 256] = \"CL_CUSTOM1\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM2\"] = 512] = \"CL_CUSTOM2\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM3\"] = 1024] = \"CL_CUSTOM3\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM4\"] = 2048] = \"CL_CUSTOM4\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM5\"] = 4096] = \"CL_CUSTOM5\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM6\"] = 8192] = \"CL_CUSTOM6\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM7\"] = 16384] = \"CL_CUSTOM7\";\n    ColliderLayer[ColliderLayer[\"CL_CUSTOM8\"] = 32768] = \"CL_CUSTOM8\";\n})(ColliderLayer || (ColliderLayer = {}));\nfunction createBasePBMeshCollider() {\n    return { collisionMask: undefined, mesh: undefined };\n}\n/**\n * @public\n */\nexport var PBMeshCollider;\n(function (PBMeshCollider) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.collisionMask !== undefined) {\n            writer.uint32(8).uint32(message.collisionMask);\n        }\n        switch (message.mesh?.$case) {\n            case \"box\":\n                PBMeshCollider_BoxMesh.encode(message.mesh.box, writer.uint32(18).fork()).ldelim();\n                break;\n            case \"sphere\":\n                PBMeshCollider_SphereMesh.encode(message.mesh.sphere, writer.uint32(26).fork()).ldelim();\n                break;\n            case \"cylinder\":\n                PBMeshCollider_CylinderMesh.encode(message.mesh.cylinder, writer.uint32(34).fork()).ldelim();\n                break;\n            case \"plane\":\n                PBMeshCollider_PlaneMesh.encode(message.mesh.plane, writer.uint32(42).fork()).ldelim();\n                break;\n        }\n        return writer;\n    }\n    PBMeshCollider.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshCollider();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.collisionMask = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.mesh = { $case: \"box\", box: PBMeshCollider_BoxMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.mesh = { $case: \"sphere\", sphere: PBMeshCollider_SphereMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.mesh = { $case: \"cylinder\", cylinder: PBMeshCollider_CylinderMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.mesh = { $case: \"plane\", plane: PBMeshCollider_PlaneMesh.decode(reader, reader.uint32()) };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshCollider.decode = decode;\n})(PBMeshCollider || (PBMeshCollider = {}));\nfunction createBasePBMeshCollider_BoxMesh() {\n    return {};\n}\n/**\n * @public\n */\nexport var PBMeshCollider_BoxMesh;\n(function (PBMeshCollider_BoxMesh) {\n    function encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    }\n    PBMeshCollider_BoxMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshCollider_BoxMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshCollider_BoxMesh.decode = decode;\n})(PBMeshCollider_BoxMesh || (PBMeshCollider_BoxMesh = {}));\nfunction createBasePBMeshCollider_CylinderMesh() {\n    return { radiusTop: undefined, radiusBottom: undefined };\n}\n/**\n * @public\n */\nexport var PBMeshCollider_CylinderMesh;\n(function (PBMeshCollider_CylinderMesh) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.radiusTop !== undefined) {\n            writer.uint32(13).float(message.radiusTop);\n        }\n        if (message.radiusBottom !== undefined) {\n            writer.uint32(21).float(message.radiusBottom);\n        }\n        return writer;\n    }\n    PBMeshCollider_CylinderMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshCollider_CylinderMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.radiusTop = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.radiusBottom = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshCollider_CylinderMesh.decode = decode;\n})(PBMeshCollider_CylinderMesh || (PBMeshCollider_CylinderMesh = {}));\nfunction createBasePBMeshCollider_PlaneMesh() {\n    return {};\n}\n/**\n * @public\n */\nexport var PBMeshCollider_PlaneMesh;\n(function (PBMeshCollider_PlaneMesh) {\n    function encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    }\n    PBMeshCollider_PlaneMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshCollider_PlaneMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshCollider_PlaneMesh.decode = decode;\n})(PBMeshCollider_PlaneMesh || (PBMeshCollider_PlaneMesh = {}));\nfunction createBasePBMeshCollider_SphereMesh() {\n    return {};\n}\n/**\n * @public\n */\nexport var PBMeshCollider_SphereMesh;\n(function (PBMeshCollider_SphereMesh) {\n    function encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    }\n    PBMeshCollider_SphereMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshCollider_SphereMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshCollider_SphereMesh.decode = decode;\n})(PBMeshCollider_SphereMesh || (PBMeshCollider_SphereMesh = {}));\n", "import { PBMeshCollider } from './pb/decentraland/sdk/components/mesh_collider.gen';\n/**\n * @internal\n */\nexport const MeshColliderSchema = {\n    COMPONENT_ID: 1019,\n    serialize(value, builder) {\n        const writer = PBMeshCollider.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBMeshCollider.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBMeshCollider.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBMeshCollider\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBMeshRenderer() {\n    return { mesh: undefined };\n}\n/**\n * @public\n */\nexport var PBMeshRenderer;\n(function (PBMeshRenderer) {\n    function encode(message, writer = _m0.Writer.create()) {\n        switch (message.mesh?.$case) {\n            case \"box\":\n                PBMeshRenderer_BoxMesh.encode(message.mesh.box, writer.uint32(10).fork()).ldelim();\n                break;\n            case \"sphere\":\n                PBMeshRenderer_SphereMesh.encode(message.mesh.sphere, writer.uint32(18).fork()).ldelim();\n                break;\n            case \"cylinder\":\n                PBMeshRenderer_CylinderMesh.encode(message.mesh.cylinder, writer.uint32(26).fork()).ldelim();\n                break;\n            case \"plane\":\n                PBMeshRenderer_PlaneMesh.encode(message.mesh.plane, writer.uint32(34).fork()).ldelim();\n                break;\n        }\n        return writer;\n    }\n    PBMeshRenderer.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshRenderer();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.mesh = { $case: \"box\", box: PBMeshRenderer_BoxMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.mesh = { $case: \"sphere\", sphere: PBMeshRenderer_SphereMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.mesh = { $case: \"cylinder\", cylinder: PBMeshRenderer_CylinderMesh.decode(reader, reader.uint32()) };\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.mesh = { $case: \"plane\", plane: PBMeshRenderer_PlaneMesh.decode(reader, reader.uint32()) };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshRenderer.decode = decode;\n})(PBMeshRenderer || (PBMeshRenderer = {}));\nfunction createBasePBMeshRenderer_BoxMesh() {\n    return { uvs: [] };\n}\n/**\n * @public\n */\nexport var PBMeshRenderer_BoxMesh;\n(function (PBMeshRenderer_BoxMesh) {\n    function encode(message, writer = _m0.Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.uvs) {\n            writer.float(v);\n        }\n        writer.ldelim();\n        return writer;\n    }\n    PBMeshRenderer_BoxMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshRenderer_BoxMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag === 13) {\n                        message.uvs.push(reader.float());\n                        continue;\n                    }\n                    if (tag === 10) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.uvs.push(reader.float());\n                        }\n                        continue;\n                    }\n                    break;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshRenderer_BoxMesh.decode = decode;\n})(PBMeshRenderer_BoxMesh || (PBMeshRenderer_BoxMesh = {}));\nfunction createBasePBMeshRenderer_CylinderMesh() {\n    return { radiusTop: undefined, radiusBottom: undefined };\n}\n/**\n * @public\n */\nexport var PBMeshRenderer_CylinderMesh;\n(function (PBMeshRenderer_CylinderMesh) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.radiusTop !== undefined) {\n            writer.uint32(13).float(message.radiusTop);\n        }\n        if (message.radiusBottom !== undefined) {\n            writer.uint32(21).float(message.radiusBottom);\n        }\n        return writer;\n    }\n    PBMeshRenderer_CylinderMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshRenderer_CylinderMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.radiusTop = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.radiusBottom = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshRenderer_CylinderMesh.decode = decode;\n})(PBMeshRenderer_CylinderMesh || (PBMeshRenderer_CylinderMesh = {}));\nfunction createBasePBMeshRenderer_PlaneMesh() {\n    return { uvs: [] };\n}\n/**\n * @public\n */\nexport var PBMeshRenderer_PlaneMesh;\n(function (PBMeshRenderer_PlaneMesh) {\n    function encode(message, writer = _m0.Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.uvs) {\n            writer.float(v);\n        }\n        writer.ldelim();\n        return writer;\n    }\n    PBMeshRenderer_PlaneMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshRenderer_PlaneMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag === 13) {\n                        message.uvs.push(reader.float());\n                        continue;\n                    }\n                    if (tag === 10) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.uvs.push(reader.float());\n                        }\n                        continue;\n                    }\n                    break;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshRenderer_PlaneMesh.decode = decode;\n})(PBMeshRenderer_PlaneMesh || (PBMeshRenderer_PlaneMesh = {}));\nfunction createBasePBMeshRenderer_SphereMesh() {\n    return {};\n}\n/**\n * @public\n */\nexport var PBMeshRenderer_SphereMesh;\n(function (PBMeshRenderer_SphereMesh) {\n    function encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    }\n    PBMeshRenderer_SphereMesh.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBMeshRenderer_SphereMesh();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBMeshRenderer_SphereMesh.decode = decode;\n})(PBMeshRenderer_SphereMesh || (PBMeshRenderer_SphereMesh = {}));\n", "import { PBMeshRenderer } from './pb/decentraland/sdk/components/mesh_renderer.gen';\n/**\n * @internal\n */\nexport const MeshRendererSchema = {\n    COMPONENT_ID: 1018,\n    serialize(value, builder) {\n        const writer = PBMeshRenderer.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBMeshRenderer.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBMeshRenderer.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBMeshRenderer\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color3 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/** NftFrameType is a predefined framing style for the image. */\n/**\n * @public\n */\nexport var NftFrameType;\n(function (NftFrameType) {\n    NftFrameType[NftFrameType[\"NFT_CLASSIC\"] = 0] = \"NFT_CLASSIC\";\n    NftFrameType[NftFrameType[\"NFT_BAROQUE_ORNAMENT\"] = 1] = \"NFT_BAROQUE_ORNAMENT\";\n    NftFrameType[NftFrameType[\"NFT_DIAMOND_ORNAMENT\"] = 2] = \"NFT_DIAMOND_ORNAMENT\";\n    NftFrameType[NftFrameType[\"NFT_MINIMAL_WIDE\"] = 3] = \"NFT_MINIMAL_WIDE\";\n    NftFrameType[NftFrameType[\"NFT_MINIMAL_GREY\"] = 4] = \"NFT_MINIMAL_GREY\";\n    NftFrameType[NftFrameType[\"NFT_BLOCKY\"] = 5] = \"NFT_BLOCKY\";\n    NftFrameType[NftFrameType[\"NFT_GOLD_EDGES\"] = 6] = \"NFT_GOLD_EDGES\";\n    NftFrameType[NftFrameType[\"NFT_GOLD_CARVED\"] = 7] = \"NFT_GOLD_CARVED\";\n    NftFrameType[NftFrameType[\"NFT_GOLD_WIDE\"] = 8] = \"NFT_GOLD_WIDE\";\n    NftFrameType[NftFrameType[\"NFT_GOLD_ROUNDED\"] = 9] = \"NFT_GOLD_ROUNDED\";\n    NftFrameType[NftFrameType[\"NFT_METAL_MEDIUM\"] = 10] = \"NFT_METAL_MEDIUM\";\n    NftFrameType[NftFrameType[\"NFT_METAL_WIDE\"] = 11] = \"NFT_METAL_WIDE\";\n    NftFrameType[NftFrameType[\"NFT_METAL_SLIM\"] = 12] = \"NFT_METAL_SLIM\";\n    NftFrameType[NftFrameType[\"NFT_METAL_ROUNDED\"] = 13] = \"NFT_METAL_ROUNDED\";\n    NftFrameType[NftFrameType[\"NFT_PINS\"] = 14] = \"NFT_PINS\";\n    NftFrameType[NftFrameType[\"NFT_MINIMAL_BLACK\"] = 15] = \"NFT_MINIMAL_BLACK\";\n    NftFrameType[NftFrameType[\"NFT_MINIMAL_WHITE\"] = 16] = \"NFT_MINIMAL_WHITE\";\n    NftFrameType[NftFrameType[\"NFT_TAPE\"] = 17] = \"NFT_TAPE\";\n    NftFrameType[NftFrameType[\"NFT_WOOD_SLIM\"] = 18] = \"NFT_WOOD_SLIM\";\n    NftFrameType[NftFrameType[\"NFT_WOOD_WIDE\"] = 19] = \"NFT_WOOD_WIDE\";\n    NftFrameType[NftFrameType[\"NFT_WOOD_TWIGS\"] = 20] = \"NFT_WOOD_TWIGS\";\n    NftFrameType[NftFrameType[\"NFT_CANVAS\"] = 21] = \"NFT_CANVAS\";\n    NftFrameType[NftFrameType[\"NFT_NONE\"] = 22] = \"NFT_NONE\";\n})(NftFrameType || (NftFrameType = {}));\nfunction createBasePBNftShape() {\n    return { urn: \"\", style: undefined, color: undefined };\n}\n/**\n * @public\n */\nexport var PBNftShape;\n(function (PBNftShape) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.urn !== \"\") {\n            writer.uint32(10).string(message.urn);\n        }\n        if (message.style !== undefined) {\n            writer.uint32(16).int32(message.style);\n        }\n        if (message.color !== undefined) {\n            Color3.encode(message.color, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBNftShape.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBNftShape();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.urn = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.style = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.color = Color3.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBNftShape.decode = decode;\n})(PBNftShape || (PBNftShape = {}));\n", "import { PBNftShape } from './pb/decentraland/sdk/components/nft_shape.gen';\n/**\n * @internal\n */\nexport const NftShapeSchema = {\n    COMPONENT_ID: 1040,\n    serialize(value, builder) {\n        const writer = PBNftShape.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBNftShape.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBNftShape.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBNftShape\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBPointerEvents() {\n    return { pointerEvents: [] };\n}\n/**\n * @public\n */\nexport var PBPointerEvents;\n(function (PBPointerEvents) {\n    function encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.pointerEvents) {\n            PBPointerEvents_Entry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBPointerEvents.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBPointerEvents();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.pointerEvents.push(PBPointerEvents_Entry.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBPointerEvents.decode = decode;\n})(PBPointerEvents || (PBPointerEvents = {}));\nfunction createBasePBPointerEvents_Info() {\n    return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined };\n}\n/**\n * @public\n */\nexport var PBPointerEvents_Info;\n(function (PBPointerEvents_Info) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.button !== undefined) {\n            writer.uint32(8).int32(message.button);\n        }\n        if (message.hoverText !== undefined) {\n            writer.uint32(18).string(message.hoverText);\n        }\n        if (message.maxDistance !== undefined) {\n            writer.uint32(29).float(message.maxDistance);\n        }\n        if (message.showFeedback !== undefined) {\n            writer.uint32(32).bool(message.showFeedback);\n        }\n        return writer;\n    }\n    PBPointerEvents_Info.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBPointerEvents_Info();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.button = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.hoverText = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.maxDistance = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.showFeedback = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBPointerEvents_Info.decode = decode;\n})(PBPointerEvents_Info || (PBPointerEvents_Info = {}));\nfunction createBasePBPointerEvents_Entry() {\n    return { eventType: 0, eventInfo: undefined };\n}\n/**\n * @public\n */\nexport var PBPointerEvents_Entry;\n(function (PBPointerEvents_Entry) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.eventType !== 0) {\n            writer.uint32(8).int32(message.eventType);\n        }\n        if (message.eventInfo !== undefined) {\n            PBPointerEvents_Info.encode(message.eventInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBPointerEvents_Entry.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBPointerEvents_Entry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.eventType = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.eventInfo = PBPointerEvents_Info.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBPointerEvents_Entry.decode = decode;\n})(PBPointerEvents_Entry || (PBPointerEvents_Entry = {}));\n", "import { PBPointerEvents } from './pb/decentraland/sdk/components/pointer_events.gen';\n/**\n * @internal\n */\nexport const PointerEventsSchema = {\n    COMPONENT_ID: 1062,\n    serialize(value, builder) {\n        const writer = PBPointerEvents.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBPointerEvents.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBPointerEvents.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBPointerEvents\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { RaycastHit } from \"./common/raycast_hit.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBPointerEventsResult() {\n    return { button: 0, hit: undefined, state: 0, timestamp: 0, analog: undefined, tickNumber: 0 };\n}\n/**\n * @public\n */\nexport var PBPointerEventsResult;\n(function (PBPointerEventsResult) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.button !== 0) {\n            writer.uint32(8).int32(message.button);\n        }\n        if (message.hit !== undefined) {\n            RaycastHit.encode(message.hit, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.timestamp !== 0) {\n            writer.uint32(40).uint32(message.timestamp);\n        }\n        if (message.analog !== undefined) {\n            writer.uint32(53).float(message.analog);\n        }\n        if (message.tickNumber !== 0) {\n            writer.uint32(56).uint32(message.tickNumber);\n        }\n        return writer;\n    }\n    PBPointerEventsResult.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBPointerEventsResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.button = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.hit = RaycastHit.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.state = reader.int32();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.timestamp = reader.uint32();\n                    continue;\n                case 6:\n                    if (tag !== 53) {\n                        break;\n                    }\n                    message.analog = reader.float();\n                    continue;\n                case 7:\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.tickNumber = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBPointerEventsResult.decode = decode;\n})(PBPointerEventsResult || (PBPointerEventsResult = {}));\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Vector3 } from \"../../../common/vectors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components.common\";\nfunction createBaseRaycastHit() {\n    return {\n        position: undefined,\n        globalOrigin: undefined,\n        direction: undefined,\n        normalHit: undefined,\n        length: 0,\n        meshName: undefined,\n        entityId: undefined,\n    };\n}\n/**\n * @public\n */\nexport var RaycastHit;\n(function (RaycastHit) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.position !== undefined) {\n            Vector3.encode(message.position, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.globalOrigin !== undefined) {\n            Vector3.encode(message.globalOrigin, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.direction !== undefined) {\n            Vector3.encode(message.direction, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.normalHit !== undefined) {\n            Vector3.encode(message.normalHit, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.length !== 0) {\n            writer.uint32(45).float(message.length);\n        }\n        if (message.meshName !== undefined) {\n            writer.uint32(50).string(message.meshName);\n        }\n        if (message.entityId !== undefined) {\n            writer.uint32(56).uint32(message.entityId);\n        }\n        return writer;\n    }\n    RaycastHit.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRaycastHit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.position = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.globalOrigin = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.direction = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.normalHit = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag !== 45) {\n                        break;\n                    }\n                    message.length = reader.float();\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.meshName = reader.string();\n                    continue;\n                case 7:\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.entityId = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    RaycastHit.decode = decode;\n})(RaycastHit || (RaycastHit = {}));\n", "import { PBPointerEventsResult } from './pb/decentraland/sdk/components/pointer_events_result.gen';\n/**\n * @internal\n */\nexport const PointerEventsResultSchema = {\n    COMPONENT_ID: 1063,\n    serialize(value, builder) {\n        const writer = PBPointerEventsResult.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBPointerEventsResult.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBPointerEventsResult.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBPointerEventsResult\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBPointerLock() {\n    return { isPointerLocked: false };\n}\n/**\n * @public\n */\nexport var PBPointerLock;\n(function (PBPointerLock) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.isPointerLocked === true) {\n            writer.uint32(8).bool(message.isPointerLocked);\n        }\n        return writer;\n    }\n    PBPointerLock.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBPointerLock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.isPointerLocked = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBPointerLock.decode = decode;\n})(PBPointerLock || (PBPointerLock = {}));\n", "import { PBPointerLock } from './pb/decentraland/sdk/components/pointer_lock.gen';\n/**\n * @internal\n */\nexport const PointerLockSchema = {\n    COMPONENT_ID: 1074,\n    serialize(value, builder) {\n        const writer = PBPointerLock.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBPointerLock.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBPointerLock.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBPointerLock\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Vector3 } from \"../../common/vectors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/** RaycastQueryType indicates whether the ray should stop on the first collition, or continue. */\n/**\n * @public\n */\nexport var RaycastQueryType;\n(function (RaycastQueryType) {\n    /** RQT_HIT_FIRST - Pick the first (not necessarily the closest) hit within the range */\n    RaycastQueryType[RaycastQueryType[\"RQT_HIT_FIRST\"] = 0] = \"RQT_HIT_FIRST\";\n    /** RQT_QUERY_ALL - Pick all hits within the range */\n    RaycastQueryType[RaycastQueryType[\"RQT_QUERY_ALL\"] = 1] = \"RQT_QUERY_ALL\";\n    /** RQT_NONE - Do not perform the raycast, only set the raycast result with empty hits */\n    RaycastQueryType[RaycastQueryType[\"RQT_NONE\"] = 2] = \"RQT_NONE\";\n})(RaycastQueryType || (RaycastQueryType = {}));\nfunction createBasePBRaycast() {\n    return {\n        timestamp: undefined,\n        originOffset: undefined,\n        direction: undefined,\n        maxDistance: 0,\n        queryType: 0,\n        continuous: undefined,\n        collisionMask: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBRaycast;\n(function (PBRaycast) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.timestamp !== undefined) {\n            writer.uint32(8).uint32(message.timestamp);\n        }\n        if (message.originOffset !== undefined) {\n            Vector3.encode(message.originOffset, writer.uint32(18).fork()).ldelim();\n        }\n        switch (message.direction?.$case) {\n            case \"localDirection\":\n                Vector3.encode(message.direction.localDirection, writer.uint32(50).fork()).ldelim();\n                break;\n            case \"globalDirection\":\n                Vector3.encode(message.direction.globalDirection, writer.uint32(26).fork()).ldelim();\n                break;\n            case \"globalTarget\":\n                Vector3.encode(message.direction.globalTarget, writer.uint32(58).fork()).ldelim();\n                break;\n            case \"targetEntity\":\n                writer.uint32(80).uint32(message.direction.targetEntity);\n                break;\n        }\n        if (message.maxDistance !== 0) {\n            writer.uint32(37).float(message.maxDistance);\n        }\n        if (message.queryType !== 0) {\n            writer.uint32(40).int32(message.queryType);\n        }\n        if (message.continuous !== undefined) {\n            writer.uint32(64).bool(message.continuous);\n        }\n        if (message.collisionMask !== undefined) {\n            writer.uint32(72).uint32(message.collisionMask);\n        }\n        return writer;\n    }\n    PBRaycast.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBRaycast();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.timestamp = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.originOffset = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.direction = { $case: \"localDirection\", localDirection: Vector3.decode(reader, reader.uint32()) };\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.direction = { $case: \"globalDirection\", globalDirection: Vector3.decode(reader, reader.uint32()) };\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.direction = { $case: \"globalTarget\", globalTarget: Vector3.decode(reader, reader.uint32()) };\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.direction = { $case: \"targetEntity\", targetEntity: reader.uint32() };\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.maxDistance = reader.float();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.queryType = reader.int32();\n                    continue;\n                case 8:\n                    if (tag !== 64) {\n                        break;\n                    }\n                    message.continuous = reader.bool();\n                    continue;\n                case 9:\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.collisionMask = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBRaycast.decode = decode;\n})(PBRaycast || (PBRaycast = {}));\n", "import { PBRaycast } from './pb/decentraland/sdk/components/raycast.gen';\n/**\n * @internal\n */\nexport const RaycastSchema = {\n    COMPONENT_ID: 1067,\n    serialize(value, builder) {\n        const writer = PBRaycast.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBRaycast.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBRaycast.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBRaycast\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Vector3 } from \"../../common/vectors.gen\";\nimport { RaycastHit } from \"./common/raycast_hit.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBRaycastResult() {\n    return { timestamp: undefined, globalOrigin: undefined, direction: undefined, hits: [], tickNumber: 0 };\n}\n/**\n * @public\n */\nexport var PBRaycastResult;\n(function (PBRaycastResult) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.timestamp !== undefined) {\n            writer.uint32(8).uint32(message.timestamp);\n        }\n        if (message.globalOrigin !== undefined) {\n            Vector3.encode(message.globalOrigin, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.direction !== undefined) {\n            Vector3.encode(message.direction, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.hits) {\n            RaycastHit.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tickNumber !== 0) {\n            writer.uint32(40).uint32(message.tickNumber);\n        }\n        return writer;\n    }\n    PBRaycastResult.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBRaycastResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.timestamp = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.globalOrigin = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.direction = Vector3.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.hits.push(RaycastHit.decode(reader, reader.uint32()));\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.tickNumber = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBRaycastResult.decode = decode;\n})(PBRaycastResult || (PBRaycastResult = {}));\n", "import { PBRaycastResult } from './pb/decentraland/sdk/components/raycast_result.gen';\n/**\n * @internal\n */\nexport const RaycastResultSchema = {\n    COMPONENT_ID: 1068,\n    serialize(value, builder) {\n        const writer = PBRaycastResult.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBRaycastResult.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBRaycastResult.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBRaycastResult\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color3, Color4 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBTextShape() {\n    return {\n        text: \"\",\n        font: undefined,\n        fontSize: undefined,\n        fontAutoSize: undefined,\n        textAlign: undefined,\n        width: undefined,\n        height: undefined,\n        paddingTop: undefined,\n        paddingRight: undefined,\n        paddingBottom: undefined,\n        paddingLeft: undefined,\n        lineSpacing: undefined,\n        lineCount: undefined,\n        textWrapping: undefined,\n        shadowBlur: undefined,\n        shadowOffsetX: undefined,\n        shadowOffsetY: undefined,\n        outlineWidth: undefined,\n        shadowColor: undefined,\n        outlineColor: undefined,\n        textColor: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBTextShape;\n(function (PBTextShape) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.text !== \"\") {\n            writer.uint32(10).string(message.text);\n        }\n        if (message.font !== undefined) {\n            writer.uint32(16).int32(message.font);\n        }\n        if (message.fontSize !== undefined) {\n            writer.uint32(29).float(message.fontSize);\n        }\n        if (message.fontAutoSize !== undefined) {\n            writer.uint32(32).bool(message.fontAutoSize);\n        }\n        if (message.textAlign !== undefined) {\n            writer.uint32(40).int32(message.textAlign);\n        }\n        if (message.width !== undefined) {\n            writer.uint32(53).float(message.width);\n        }\n        if (message.height !== undefined) {\n            writer.uint32(61).float(message.height);\n        }\n        if (message.paddingTop !== undefined) {\n            writer.uint32(69).float(message.paddingTop);\n        }\n        if (message.paddingRight !== undefined) {\n            writer.uint32(77).float(message.paddingRight);\n        }\n        if (message.paddingBottom !== undefined) {\n            writer.uint32(85).float(message.paddingBottom);\n        }\n        if (message.paddingLeft !== undefined) {\n            writer.uint32(93).float(message.paddingLeft);\n        }\n        if (message.lineSpacing !== undefined) {\n            writer.uint32(101).float(message.lineSpacing);\n        }\n        if (message.lineCount !== undefined) {\n            writer.uint32(104).int32(message.lineCount);\n        }\n        if (message.textWrapping !== undefined) {\n            writer.uint32(112).bool(message.textWrapping);\n        }\n        if (message.shadowBlur !== undefined) {\n            writer.uint32(125).float(message.shadowBlur);\n        }\n        if (message.shadowOffsetX !== undefined) {\n            writer.uint32(133).float(message.shadowOffsetX);\n        }\n        if (message.shadowOffsetY !== undefined) {\n            writer.uint32(141).float(message.shadowOffsetY);\n        }\n        if (message.outlineWidth !== undefined) {\n            writer.uint32(149).float(message.outlineWidth);\n        }\n        if (message.shadowColor !== undefined) {\n            Color3.encode(message.shadowColor, writer.uint32(154).fork()).ldelim();\n        }\n        if (message.outlineColor !== undefined) {\n            Color3.encode(message.outlineColor, writer.uint32(162).fork()).ldelim();\n        }\n        if (message.textColor !== undefined) {\n            Color4.encode(message.textColor, writer.uint32(170).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBTextShape.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBTextShape();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.text = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.font = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.fontSize = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.fontAutoSize = reader.bool();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.textAlign = reader.int32();\n                    continue;\n                case 6:\n                    if (tag !== 53) {\n                        break;\n                    }\n                    message.width = reader.float();\n                    continue;\n                case 7:\n                    if (tag !== 61) {\n                        break;\n                    }\n                    message.height = reader.float();\n                    continue;\n                case 8:\n                    if (tag !== 69) {\n                        break;\n                    }\n                    message.paddingTop = reader.float();\n                    continue;\n                case 9:\n                    if (tag !== 77) {\n                        break;\n                    }\n                    message.paddingRight = reader.float();\n                    continue;\n                case 10:\n                    if (tag !== 85) {\n                        break;\n                    }\n                    message.paddingBottom = reader.float();\n                    continue;\n                case 11:\n                    if (tag !== 93) {\n                        break;\n                    }\n                    message.paddingLeft = reader.float();\n                    continue;\n                case 12:\n                    if (tag !== 101) {\n                        break;\n                    }\n                    message.lineSpacing = reader.float();\n                    continue;\n                case 13:\n                    if (tag !== 104) {\n                        break;\n                    }\n                    message.lineCount = reader.int32();\n                    continue;\n                case 14:\n                    if (tag !== 112) {\n                        break;\n                    }\n                    message.textWrapping = reader.bool();\n                    continue;\n                case 15:\n                    if (tag !== 125) {\n                        break;\n                    }\n                    message.shadowBlur = reader.float();\n                    continue;\n                case 16:\n                    if (tag !== 133) {\n                        break;\n                    }\n                    message.shadowOffsetX = reader.float();\n                    continue;\n                case 17:\n                    if (tag !== 141) {\n                        break;\n                    }\n                    message.shadowOffsetY = reader.float();\n                    continue;\n                case 18:\n                    if (tag !== 149) {\n                        break;\n                    }\n                    message.outlineWidth = reader.float();\n                    continue;\n                case 19:\n                    if (tag !== 154) {\n                        break;\n                    }\n                    message.shadowColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 20:\n                    if (tag !== 162) {\n                        break;\n                    }\n                    message.outlineColor = Color3.decode(reader, reader.uint32());\n                    continue;\n                case 21:\n                    if (tag !== 170) {\n                        break;\n                    }\n                    message.textColor = Color4.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBTextShape.decode = decode;\n})(PBTextShape || (PBTextShape = {}));\n", "import { PBTextShape } from './pb/decentraland/sdk/components/text_shape.gen';\n/**\n * @internal\n */\nexport const TextShapeSchema = {\n    COMPONENT_ID: 1030,\n    serialize(value, builder) {\n        const writer = PBTextShape.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBTextShape.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBTextShape.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBTextShape\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { BorderRect } from \"../../common/border_rect.gen\";\nimport { Color4 } from \"../../common/colors.gen\";\nimport { TextureUnion } from \"../../common/texture.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/**\n * @public\n */\nexport var BackgroundTextureMode;\n(function (BackgroundTextureMode) {\n    /**\n     * NINE_SLICES - https://docs.unity3d.com/Manual/UIE-USS-SupportedProperties.html (Slicing section)\n     * https://forum.unity.com/threads/how-does-slicing-in-ui-tookkit-works.1235863/\n     * https://docs.unity3d.com/Manual/9SliceSprites.html\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-slice\n     */\n    BackgroundTextureMode[BackgroundTextureMode[\"NINE_SLICES\"] = 0] = \"NINE_SLICES\";\n    /**\n     * CENTER - CENTER enables the texture to be rendered centered in relation to the\n     * element. If the element is smaller than the texture then the background\n     * should use the element as stencil to cut off the out-of-bounds area\n     */\n    BackgroundTextureMode[BackgroundTextureMode[\"CENTER\"] = 1] = \"CENTER\";\n    /**\n     * STRETCH - STRETCH enables the texture to cover all the area of the container,\n     * adopting its aspect ratio.\n     */\n    BackgroundTextureMode[BackgroundTextureMode[\"STRETCH\"] = 2] = \"STRETCH\";\n})(BackgroundTextureMode || (BackgroundTextureMode = {}));\nfunction createBasePBUiBackground() {\n    return { color: undefined, texture: undefined, textureMode: 0, textureSlices: undefined, uvs: [] };\n}\n/**\n * @public\n */\nexport var PBUiBackground;\n(function (PBUiBackground) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.color !== undefined) {\n            Color4.encode(message.color, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.texture !== undefined) {\n            TextureUnion.encode(message.texture, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.textureMode !== 0) {\n            writer.uint32(24).int32(message.textureMode);\n        }\n        if (message.textureSlices !== undefined) {\n            BorderRect.encode(message.textureSlices, writer.uint32(34).fork()).ldelim();\n        }\n        writer.uint32(42).fork();\n        for (const v of message.uvs) {\n            writer.float(v);\n        }\n        writer.ldelim();\n        return writer;\n    }\n    PBUiBackground.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiBackground();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.color = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.texture = TextureUnion.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.textureMode = reader.int32();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.textureSlices = BorderRect.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag === 45) {\n                        message.uvs.push(reader.float());\n                        continue;\n                    }\n                    if (tag === 42) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.uvs.push(reader.float());\n                        }\n                        continue;\n                    }\n                    break;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiBackground.decode = decode;\n})(PBUiBackground || (PBUiBackground = {}));\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.common\";\nfunction createBaseBorderRect() {\n    return { top: 0, left: 0, right: 0, bottom: 0 };\n}\n/**\n * @public\n */\nexport var BorderRect;\n(function (BorderRect) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.top !== 0) {\n            writer.uint32(13).float(message.top);\n        }\n        if (message.left !== 0) {\n            writer.uint32(21).float(message.left);\n        }\n        if (message.right !== 0) {\n            writer.uint32(29).float(message.right);\n        }\n        if (message.bottom !== 0) {\n            writer.uint32(37).float(message.bottom);\n        }\n        return writer;\n    }\n    BorderRect.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBorderRect();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.top = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.left = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.right = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.bottom = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    BorderRect.decode = decode;\n})(BorderRect || (BorderRect = {}));\nfunction createBaseRect() {\n    return { x: 0, y: 0, width: 0, height: 0 };\n}\n/**\n * @public\n */\nexport var Rect;\n(function (Rect) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(13).float(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(21).float(message.y);\n        }\n        if (message.width !== 0) {\n            writer.uint32(29).float(message.width);\n        }\n        if (message.height !== 0) {\n            writer.uint32(37).float(message.height);\n        }\n        return writer;\n    }\n    Rect.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRect();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.x = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 21) {\n                        break;\n                    }\n                    message.y = reader.float();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.width = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.height = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Rect.decode = decode;\n})(Rect || (Rect = {}));\n", "import { PBUiBackground } from './pb/decentraland/sdk/components/ui_background.gen';\n/**\n * @internal\n */\nexport const UiBackgroundSchema = {\n    COMPONENT_ID: 1053,\n    serialize(value, builder) {\n        const writer = PBUiBackground.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiBackground.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiBackground.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiBackground\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { BorderRect } from \"../../common/border_rect.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiCanvasInformation() {\n    return { devicePixelRatio: 0, width: 0, height: 0, interactableArea: undefined };\n}\n/**\n * @public\n */\nexport var PBUiCanvasInformation;\n(function (PBUiCanvasInformation) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.devicePixelRatio !== 0) {\n            writer.uint32(13).float(message.devicePixelRatio);\n        }\n        if (message.width !== 0) {\n            writer.uint32(16).int32(message.width);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int32(message.height);\n        }\n        if (message.interactableArea !== undefined) {\n            BorderRect.encode(message.interactableArea, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    }\n    PBUiCanvasInformation.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiCanvasInformation();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 13) {\n                        break;\n                    }\n                    message.devicePixelRatio = reader.float();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.width = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.height = reader.int32();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.interactableArea = BorderRect.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiCanvasInformation.decode = decode;\n})(PBUiCanvasInformation || (PBUiCanvasInformation = {}));\n", "import { PBUiCanvasInformation } from './pb/decentraland/sdk/components/ui_canvas_information.gen';\n/**\n * @internal\n */\nexport const UiCanvasInformationSchema = {\n    COMPONENT_ID: 1054,\n    serialize(value, builder) {\n        const writer = PBUiCanvasInformation.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiCanvasInformation.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiCanvasInformation.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiCanvasInformation\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color4 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiDropdown() {\n    return {\n        acceptEmpty: false,\n        emptyLabel: undefined,\n        options: [],\n        selectedIndex: undefined,\n        disabled: false,\n        color: undefined,\n        textAlign: undefined,\n        font: undefined,\n        fontSize: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBUiDropdown;\n(function (PBUiDropdown) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.acceptEmpty === true) {\n            writer.uint32(8).bool(message.acceptEmpty);\n        }\n        if (message.emptyLabel !== undefined) {\n            writer.uint32(18).string(message.emptyLabel);\n        }\n        for (const v of message.options) {\n            writer.uint32(26).string(v);\n        }\n        if (message.selectedIndex !== undefined) {\n            writer.uint32(32).int32(message.selectedIndex);\n        }\n        if (message.disabled === true) {\n            writer.uint32(40).bool(message.disabled);\n        }\n        if (message.color !== undefined) {\n            Color4.encode(message.color, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.textAlign !== undefined) {\n            writer.uint32(80).int32(message.textAlign);\n        }\n        if (message.font !== undefined) {\n            writer.uint32(88).int32(message.font);\n        }\n        if (message.fontSize !== undefined) {\n            writer.uint32(96).int32(message.fontSize);\n        }\n        return writer;\n    }\n    PBUiDropdown.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiDropdown();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.acceptEmpty = reader.bool();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.emptyLabel = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.options.push(reader.string());\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.selectedIndex = reader.int32();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.disabled = reader.bool();\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.color = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.textAlign = reader.int32();\n                    continue;\n                case 11:\n                    if (tag !== 88) {\n                        break;\n                    }\n                    message.font = reader.int32();\n                    continue;\n                case 12:\n                    if (tag !== 96) {\n                        break;\n                    }\n                    message.fontSize = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiDropdown.decode = decode;\n})(PBUiDropdown || (PBUiDropdown = {}));\n", "import { PBUiDropdown } from './pb/decentraland/sdk/components/ui_dropdown.gen';\n/**\n * @internal\n */\nexport const UiDropdownSchema = {\n    COMPONENT_ID: 1094,\n    serialize(value, builder) {\n        const writer = PBUiDropdown.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiDropdown.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiDropdown.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiDropdown\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiDropdownResult() {\n    return { value: 0 };\n}\n/**\n * @public\n */\nexport var PBUiDropdownResult;\n(function (PBUiDropdownResult) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.value !== 0) {\n            writer.uint32(8).int32(message.value);\n        }\n        return writer;\n    }\n    PBUiDropdownResult.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiDropdownResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.value = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiDropdownResult.decode = decode;\n})(PBUiDropdownResult || (PBUiDropdownResult = {}));\n", "import { PBUiDropdownResult } from './pb/decentraland/sdk/components/ui_dropdown_result.gen';\n/**\n * @internal\n */\nexport const UiDropdownResultSchema = {\n    COMPONENT_ID: 1096,\n    serialize(value, builder) {\n        const writer = PBUiDropdownResult.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiDropdownResult.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiDropdownResult.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiDropdownResult\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color4 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiInput() {\n    return {\n        placeholder: \"\",\n        color: undefined,\n        placeholderColor: undefined,\n        disabled: false,\n        textAlign: undefined,\n        font: undefined,\n        fontSize: undefined,\n        value: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBUiInput;\n(function (PBUiInput) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.placeholder !== \"\") {\n            writer.uint32(10).string(message.placeholder);\n        }\n        if (message.color !== undefined) {\n            Color4.encode(message.color, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.placeholderColor !== undefined) {\n            Color4.encode(message.placeholderColor, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.disabled === true) {\n            writer.uint32(32).bool(message.disabled);\n        }\n        if (message.textAlign !== undefined) {\n            writer.uint32(80).int32(message.textAlign);\n        }\n        if (message.font !== undefined) {\n            writer.uint32(88).int32(message.font);\n        }\n        if (message.fontSize !== undefined) {\n            writer.uint32(96).int32(message.fontSize);\n        }\n        if (message.value !== undefined) {\n            writer.uint32(106).string(message.value);\n        }\n        return writer;\n    }\n    PBUiInput.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiInput();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.placeholder = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.color = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.placeholderColor = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.disabled = reader.bool();\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.textAlign = reader.int32();\n                    continue;\n                case 11:\n                    if (tag !== 88) {\n                        break;\n                    }\n                    message.font = reader.int32();\n                    continue;\n                case 12:\n                    if (tag !== 96) {\n                        break;\n                    }\n                    message.fontSize = reader.int32();\n                    continue;\n                case 13:\n                    if (tag !== 106) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiInput.decode = decode;\n})(PBUiInput || (PBUiInput = {}));\n", "import { PBUiInput } from './pb/decentraland/sdk/components/ui_input.gen';\n/**\n * @internal\n */\nexport const UiInputSchema = {\n    COMPONENT_ID: 1093,\n    serialize(value, builder) {\n        const writer = PBUiInput.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiInput.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiInput.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiInput\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiInputResult() {\n    return { value: \"\" };\n}\n/**\n * @public\n */\nexport var PBUiInputResult;\n(function (PBUiInputResult) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.value !== \"\") {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    }\n    PBUiInputResult.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiInputResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiInputResult.decode = decode;\n})(PBUiInputResult || (PBUiInputResult = {}));\n", "import { PBUiInputResult } from './pb/decentraland/sdk/components/ui_input_result.gen';\n/**\n * @internal\n */\nexport const UiInputResultSchema = {\n    COMPONENT_ID: 1095,\n    serialize(value, builder) {\n        const writer = PBUiInputResult.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiInputResult.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiInputResult.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiInputResult\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Color4 } from \"../../common/colors.gen\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBUiText() {\n    return { value: \"\", color: undefined, textAlign: undefined, font: undefined, fontSize: undefined };\n}\n/**\n * @public\n */\nexport var PBUiText;\n(function (PBUiText) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.value !== \"\") {\n            writer.uint32(10).string(message.value);\n        }\n        if (message.color !== undefined) {\n            Color4.encode(message.color, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.textAlign !== undefined) {\n            writer.uint32(24).int32(message.textAlign);\n        }\n        if (message.font !== undefined) {\n            writer.uint32(32).int32(message.font);\n        }\n        if (message.fontSize !== undefined) {\n            writer.uint32(40).int32(message.fontSize);\n        }\n        return writer;\n    }\n    PBUiText.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiText();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.color = Color4.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.textAlign = reader.int32();\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.font = reader.int32();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.fontSize = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiText.decode = decode;\n})(PBUiText || (PBUiText = {}));\n", "import { PBUiText } from './pb/decentraland/sdk/components/ui_text.gen';\n/**\n * @internal\n */\nexport const UiTextSchema = {\n    COMPONENT_ID: 1052,\n    serialize(value, builder) {\n        const writer = PBUiText.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiText.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiText.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiText\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/**\n * @public\n */\nexport var YGPositionType;\n(function (YGPositionType) {\n    YGPositionType[YGPositionType[\"YGPT_RELATIVE\"] = 0] = \"YGPT_RELATIVE\";\n    YGPositionType[YGPositionType[\"YGPT_ABSOLUTE\"] = 1] = \"YGPT_ABSOLUTE\";\n})(YGPositionType || (YGPositionType = {}));\n/**\n * @public\n */\nexport var YGAlign;\n(function (YGAlign) {\n    YGAlign[YGAlign[\"YGA_AUTO\"] = 0] = \"YGA_AUTO\";\n    YGAlign[YGAlign[\"YGA_FLEX_START\"] = 1] = \"YGA_FLEX_START\";\n    YGAlign[YGAlign[\"YGA_CENTER\"] = 2] = \"YGA_CENTER\";\n    YGAlign[YGAlign[\"YGA_FLEX_END\"] = 3] = \"YGA_FLEX_END\";\n    YGAlign[YGAlign[\"YGA_STRETCH\"] = 4] = \"YGA_STRETCH\";\n    YGAlign[YGAlign[\"YGA_BASELINE\"] = 5] = \"YGA_BASELINE\";\n    YGAlign[YGAlign[\"YGA_SPACE_BETWEEN\"] = 6] = \"YGA_SPACE_BETWEEN\";\n    YGAlign[YGAlign[\"YGA_SPACE_AROUND\"] = 7] = \"YGA_SPACE_AROUND\";\n})(YGAlign || (YGAlign = {}));\n/**\n * @public\n */\nexport var YGUnit;\n(function (YGUnit) {\n    YGUnit[YGUnit[\"YGU_UNDEFINED\"] = 0] = \"YGU_UNDEFINED\";\n    YGUnit[YGUnit[\"YGU_POINT\"] = 1] = \"YGU_POINT\";\n    YGUnit[YGUnit[\"YGU_PERCENT\"] = 2] = \"YGU_PERCENT\";\n    YGUnit[YGUnit[\"YGU_AUTO\"] = 3] = \"YGU_AUTO\";\n})(YGUnit || (YGUnit = {}));\n/**\n * @public\n */\nexport var YGFlexDirection;\n(function (YGFlexDirection) {\n    YGFlexDirection[YGFlexDirection[\"YGFD_ROW\"] = 0] = \"YGFD_ROW\";\n    YGFlexDirection[YGFlexDirection[\"YGFD_COLUMN\"] = 1] = \"YGFD_COLUMN\";\n    YGFlexDirection[YGFlexDirection[\"YGFD_COLUMN_REVERSE\"] = 2] = \"YGFD_COLUMN_REVERSE\";\n    YGFlexDirection[YGFlexDirection[\"YGFD_ROW_REVERSE\"] = 3] = \"YGFD_ROW_REVERSE\";\n})(YGFlexDirection || (YGFlexDirection = {}));\n/**\n * @public\n */\nexport var YGWrap;\n(function (YGWrap) {\n    YGWrap[YGWrap[\"YGW_NO_WRAP\"] = 0] = \"YGW_NO_WRAP\";\n    YGWrap[YGWrap[\"YGW_WRAP\"] = 1] = \"YGW_WRAP\";\n    YGWrap[YGWrap[\"YGW_WRAP_REVERSE\"] = 2] = \"YGW_WRAP_REVERSE\";\n})(YGWrap || (YGWrap = {}));\n/**\n * @public\n */\nexport var YGJustify;\n(function (YGJustify) {\n    YGJustify[YGJustify[\"YGJ_FLEX_START\"] = 0] = \"YGJ_FLEX_START\";\n    YGJustify[YGJustify[\"YGJ_CENTER\"] = 1] = \"YGJ_CENTER\";\n    YGJustify[YGJustify[\"YGJ_FLEX_END\"] = 2] = \"YGJ_FLEX_END\";\n    YGJustify[YGJustify[\"YGJ_SPACE_BETWEEN\"] = 3] = \"YGJ_SPACE_BETWEEN\";\n    YGJustify[YGJustify[\"YGJ_SPACE_AROUND\"] = 4] = \"YGJ_SPACE_AROUND\";\n    YGJustify[YGJustify[\"YGJ_SPACE_EVENLY\"] = 5] = \"YGJ_SPACE_EVENLY\";\n})(YGJustify || (YGJustify = {}));\n/**\n * @public\n */\nexport var YGOverflow;\n(function (YGOverflow) {\n    YGOverflow[YGOverflow[\"YGO_VISIBLE\"] = 0] = \"YGO_VISIBLE\";\n    YGOverflow[YGOverflow[\"YGO_HIDDEN\"] = 1] = \"YGO_HIDDEN\";\n    YGOverflow[YGOverflow[\"YGO_SCROLL\"] = 2] = \"YGO_SCROLL\";\n})(YGOverflow || (YGOverflow = {}));\n/**\n * @public\n */\nexport var YGDisplay;\n(function (YGDisplay) {\n    YGDisplay[YGDisplay[\"YGD_FLEX\"] = 0] = \"YGD_FLEX\";\n    YGDisplay[YGDisplay[\"YGD_NONE\"] = 1] = \"YGD_NONE\";\n})(YGDisplay || (YGDisplay = {}));\n/**\n * @public\n */\nexport var YGEdge;\n(function (YGEdge) {\n    YGEdge[YGEdge[\"YGE_LEFT\"] = 0] = \"YGE_LEFT\";\n    YGEdge[YGEdge[\"YGE_TOP\"] = 1] = \"YGE_TOP\";\n    YGEdge[YGEdge[\"YGE_RIGHT\"] = 2] = \"YGE_RIGHT\";\n    YGEdge[YGEdge[\"YGE_BOTTOM\"] = 3] = \"YGE_BOTTOM\";\n    YGEdge[YGEdge[\"YGE_START\"] = 4] = \"YGE_START\";\n    YGEdge[YGEdge[\"YGE_END\"] = 5] = \"YGE_END\";\n    YGEdge[YGEdge[\"YGE_HORIZONTAL\"] = 6] = \"YGE_HORIZONTAL\";\n    YGEdge[YGEdge[\"YGE_VERTICAL\"] = 7] = \"YGE_VERTICAL\";\n    YGEdge[YGEdge[\"YGE_ALL\"] = 8] = \"YGE_ALL\";\n})(YGEdge || (YGEdge = {}));\nfunction createBasePBUiTransform() {\n    return {\n        parent: 0,\n        rightOf: 0,\n        alignContent: undefined,\n        alignItems: undefined,\n        flexWrap: undefined,\n        flexShrink: undefined,\n        positionType: 0,\n        alignSelf: 0,\n        flexDirection: 0,\n        justifyContent: 0,\n        overflow: 0,\n        display: 0,\n        flexBasisUnit: 0,\n        flexBasis: 0,\n        flexGrow: 0,\n        widthUnit: 0,\n        width: 0,\n        heightUnit: 0,\n        height: 0,\n        minWidthUnit: 0,\n        minWidth: 0,\n        minHeightUnit: 0,\n        minHeight: 0,\n        maxWidthUnit: 0,\n        maxWidth: 0,\n        maxHeightUnit: 0,\n        maxHeight: 0,\n        positionLeftUnit: 0,\n        positionLeft: 0,\n        positionTopUnit: 0,\n        positionTop: 0,\n        positionRightUnit: 0,\n        positionRight: 0,\n        positionBottomUnit: 0,\n        positionBottom: 0,\n        marginLeftUnit: 0,\n        marginLeft: 0,\n        marginTopUnit: 0,\n        marginTop: 0,\n        marginRightUnit: 0,\n        marginRight: 0,\n        marginBottomUnit: 0,\n        marginBottom: 0,\n        paddingLeftUnit: 0,\n        paddingLeft: 0,\n        paddingTopUnit: 0,\n        paddingTop: 0,\n        paddingRightUnit: 0,\n        paddingRight: 0,\n        paddingBottomUnit: 0,\n        paddingBottom: 0,\n    };\n}\n/**\n * @public\n */\nexport var PBUiTransform;\n(function (PBUiTransform) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.parent !== 0) {\n            writer.uint32(8).int32(message.parent);\n        }\n        if (message.rightOf !== 0) {\n            writer.uint32(16).int32(message.rightOf);\n        }\n        if (message.alignContent !== undefined) {\n            writer.uint32(24).int32(message.alignContent);\n        }\n        if (message.alignItems !== undefined) {\n            writer.uint32(32).int32(message.alignItems);\n        }\n        if (message.flexWrap !== undefined) {\n            writer.uint32(40).int32(message.flexWrap);\n        }\n        if (message.flexShrink !== undefined) {\n            writer.uint32(53).float(message.flexShrink);\n        }\n        if (message.positionType !== 0) {\n            writer.uint32(56).int32(message.positionType);\n        }\n        if (message.alignSelf !== 0) {\n            writer.uint32(64).int32(message.alignSelf);\n        }\n        if (message.flexDirection !== 0) {\n            writer.uint32(72).int32(message.flexDirection);\n        }\n        if (message.justifyContent !== 0) {\n            writer.uint32(80).int32(message.justifyContent);\n        }\n        if (message.overflow !== 0) {\n            writer.uint32(88).int32(message.overflow);\n        }\n        if (message.display !== 0) {\n            writer.uint32(96).int32(message.display);\n        }\n        if (message.flexBasisUnit !== 0) {\n            writer.uint32(104).int32(message.flexBasisUnit);\n        }\n        if (message.flexBasis !== 0) {\n            writer.uint32(117).float(message.flexBasis);\n        }\n        if (message.flexGrow !== 0) {\n            writer.uint32(125).float(message.flexGrow);\n        }\n        if (message.widthUnit !== 0) {\n            writer.uint32(128).int32(message.widthUnit);\n        }\n        if (message.width !== 0) {\n            writer.uint32(141).float(message.width);\n        }\n        if (message.heightUnit !== 0) {\n            writer.uint32(144).int32(message.heightUnit);\n        }\n        if (message.height !== 0) {\n            writer.uint32(157).float(message.height);\n        }\n        if (message.minWidthUnit !== 0) {\n            writer.uint32(160).int32(message.minWidthUnit);\n        }\n        if (message.minWidth !== 0) {\n            writer.uint32(173).float(message.minWidth);\n        }\n        if (message.minHeightUnit !== 0) {\n            writer.uint32(176).int32(message.minHeightUnit);\n        }\n        if (message.minHeight !== 0) {\n            writer.uint32(189).float(message.minHeight);\n        }\n        if (message.maxWidthUnit !== 0) {\n            writer.uint32(192).int32(message.maxWidthUnit);\n        }\n        if (message.maxWidth !== 0) {\n            writer.uint32(205).float(message.maxWidth);\n        }\n        if (message.maxHeightUnit !== 0) {\n            writer.uint32(208).int32(message.maxHeightUnit);\n        }\n        if (message.maxHeight !== 0) {\n            writer.uint32(221).float(message.maxHeight);\n        }\n        if (message.positionLeftUnit !== 0) {\n            writer.uint32(224).int32(message.positionLeftUnit);\n        }\n        if (message.positionLeft !== 0) {\n            writer.uint32(237).float(message.positionLeft);\n        }\n        if (message.positionTopUnit !== 0) {\n            writer.uint32(240).int32(message.positionTopUnit);\n        }\n        if (message.positionTop !== 0) {\n            writer.uint32(253).float(message.positionTop);\n        }\n        if (message.positionRightUnit !== 0) {\n            writer.uint32(256).int32(message.positionRightUnit);\n        }\n        if (message.positionRight !== 0) {\n            writer.uint32(269).float(message.positionRight);\n        }\n        if (message.positionBottomUnit !== 0) {\n            writer.uint32(272).int32(message.positionBottomUnit);\n        }\n        if (message.positionBottom !== 0) {\n            writer.uint32(285).float(message.positionBottom);\n        }\n        if (message.marginLeftUnit !== 0) {\n            writer.uint32(288).int32(message.marginLeftUnit);\n        }\n        if (message.marginLeft !== 0) {\n            writer.uint32(301).float(message.marginLeft);\n        }\n        if (message.marginTopUnit !== 0) {\n            writer.uint32(304).int32(message.marginTopUnit);\n        }\n        if (message.marginTop !== 0) {\n            writer.uint32(317).float(message.marginTop);\n        }\n        if (message.marginRightUnit !== 0) {\n            writer.uint32(320).int32(message.marginRightUnit);\n        }\n        if (message.marginRight !== 0) {\n            writer.uint32(333).float(message.marginRight);\n        }\n        if (message.marginBottomUnit !== 0) {\n            writer.uint32(336).int32(message.marginBottomUnit);\n        }\n        if (message.marginBottom !== 0) {\n            writer.uint32(349).float(message.marginBottom);\n        }\n        if (message.paddingLeftUnit !== 0) {\n            writer.uint32(352).int32(message.paddingLeftUnit);\n        }\n        if (message.paddingLeft !== 0) {\n            writer.uint32(365).float(message.paddingLeft);\n        }\n        if (message.paddingTopUnit !== 0) {\n            writer.uint32(368).int32(message.paddingTopUnit);\n        }\n        if (message.paddingTop !== 0) {\n            writer.uint32(381).float(message.paddingTop);\n        }\n        if (message.paddingRightUnit !== 0) {\n            writer.uint32(384).int32(message.paddingRightUnit);\n        }\n        if (message.paddingRight !== 0) {\n            writer.uint32(397).float(message.paddingRight);\n        }\n        if (message.paddingBottomUnit !== 0) {\n            writer.uint32(400).int32(message.paddingBottomUnit);\n        }\n        if (message.paddingBottom !== 0) {\n            writer.uint32(413).float(message.paddingBottom);\n        }\n        return writer;\n    }\n    PBUiTransform.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBUiTransform();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.parent = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.rightOf = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.alignContent = reader.int32();\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.alignItems = reader.int32();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.flexWrap = reader.int32();\n                    continue;\n                case 6:\n                    if (tag !== 53) {\n                        break;\n                    }\n                    message.flexShrink = reader.float();\n                    continue;\n                case 7:\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.positionType = reader.int32();\n                    continue;\n                case 8:\n                    if (tag !== 64) {\n                        break;\n                    }\n                    message.alignSelf = reader.int32();\n                    continue;\n                case 9:\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.flexDirection = reader.int32();\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.justifyContent = reader.int32();\n                    continue;\n                case 11:\n                    if (tag !== 88) {\n                        break;\n                    }\n                    message.overflow = reader.int32();\n                    continue;\n                case 12:\n                    if (tag !== 96) {\n                        break;\n                    }\n                    message.display = reader.int32();\n                    continue;\n                case 13:\n                    if (tag !== 104) {\n                        break;\n                    }\n                    message.flexBasisUnit = reader.int32();\n                    continue;\n                case 14:\n                    if (tag !== 117) {\n                        break;\n                    }\n                    message.flexBasis = reader.float();\n                    continue;\n                case 15:\n                    if (tag !== 125) {\n                        break;\n                    }\n                    message.flexGrow = reader.float();\n                    continue;\n                case 16:\n                    if (tag !== 128) {\n                        break;\n                    }\n                    message.widthUnit = reader.int32();\n                    continue;\n                case 17:\n                    if (tag !== 141) {\n                        break;\n                    }\n                    message.width = reader.float();\n                    continue;\n                case 18:\n                    if (tag !== 144) {\n                        break;\n                    }\n                    message.heightUnit = reader.int32();\n                    continue;\n                case 19:\n                    if (tag !== 157) {\n                        break;\n                    }\n                    message.height = reader.float();\n                    continue;\n                case 20:\n                    if (tag !== 160) {\n                        break;\n                    }\n                    message.minWidthUnit = reader.int32();\n                    continue;\n                case 21:\n                    if (tag !== 173) {\n                        break;\n                    }\n                    message.minWidth = reader.float();\n                    continue;\n                case 22:\n                    if (tag !== 176) {\n                        break;\n                    }\n                    message.minHeightUnit = reader.int32();\n                    continue;\n                case 23:\n                    if (tag !== 189) {\n                        break;\n                    }\n                    message.minHeight = reader.float();\n                    continue;\n                case 24:\n                    if (tag !== 192) {\n                        break;\n                    }\n                    message.maxWidthUnit = reader.int32();\n                    continue;\n                case 25:\n                    if (tag !== 205) {\n                        break;\n                    }\n                    message.maxWidth = reader.float();\n                    continue;\n                case 26:\n                    if (tag !== 208) {\n                        break;\n                    }\n                    message.maxHeightUnit = reader.int32();\n                    continue;\n                case 27:\n                    if (tag !== 221) {\n                        break;\n                    }\n                    message.maxHeight = reader.float();\n                    continue;\n                case 28:\n                    if (tag !== 224) {\n                        break;\n                    }\n                    message.positionLeftUnit = reader.int32();\n                    continue;\n                case 29:\n                    if (tag !== 237) {\n                        break;\n                    }\n                    message.positionLeft = reader.float();\n                    continue;\n                case 30:\n                    if (tag !== 240) {\n                        break;\n                    }\n                    message.positionTopUnit = reader.int32();\n                    continue;\n                case 31:\n                    if (tag !== 253) {\n                        break;\n                    }\n                    message.positionTop = reader.float();\n                    continue;\n                case 32:\n                    if (tag !== 256) {\n                        break;\n                    }\n                    message.positionRightUnit = reader.int32();\n                    continue;\n                case 33:\n                    if (tag !== 269) {\n                        break;\n                    }\n                    message.positionRight = reader.float();\n                    continue;\n                case 34:\n                    if (tag !== 272) {\n                        break;\n                    }\n                    message.positionBottomUnit = reader.int32();\n                    continue;\n                case 35:\n                    if (tag !== 285) {\n                        break;\n                    }\n                    message.positionBottom = reader.float();\n                    continue;\n                case 36:\n                    if (tag !== 288) {\n                        break;\n                    }\n                    message.marginLeftUnit = reader.int32();\n                    continue;\n                case 37:\n                    if (tag !== 301) {\n                        break;\n                    }\n                    message.marginLeft = reader.float();\n                    continue;\n                case 38:\n                    if (tag !== 304) {\n                        break;\n                    }\n                    message.marginTopUnit = reader.int32();\n                    continue;\n                case 39:\n                    if (tag !== 317) {\n                        break;\n                    }\n                    message.marginTop = reader.float();\n                    continue;\n                case 40:\n                    if (tag !== 320) {\n                        break;\n                    }\n                    message.marginRightUnit = reader.int32();\n                    continue;\n                case 41:\n                    if (tag !== 333) {\n                        break;\n                    }\n                    message.marginRight = reader.float();\n                    continue;\n                case 42:\n                    if (tag !== 336) {\n                        break;\n                    }\n                    message.marginBottomUnit = reader.int32();\n                    continue;\n                case 43:\n                    if (tag !== 349) {\n                        break;\n                    }\n                    message.marginBottom = reader.float();\n                    continue;\n                case 44:\n                    if (tag !== 352) {\n                        break;\n                    }\n                    message.paddingLeftUnit = reader.int32();\n                    continue;\n                case 45:\n                    if (tag !== 365) {\n                        break;\n                    }\n                    message.paddingLeft = reader.float();\n                    continue;\n                case 46:\n                    if (tag !== 368) {\n                        break;\n                    }\n                    message.paddingTopUnit = reader.int32();\n                    continue;\n                case 47:\n                    if (tag !== 381) {\n                        break;\n                    }\n                    message.paddingTop = reader.float();\n                    continue;\n                case 48:\n                    if (tag !== 384) {\n                        break;\n                    }\n                    message.paddingRightUnit = reader.int32();\n                    continue;\n                case 49:\n                    if (tag !== 397) {\n                        break;\n                    }\n                    message.paddingRight = reader.float();\n                    continue;\n                case 50:\n                    if (tag !== 400) {\n                        break;\n                    }\n                    message.paddingBottomUnit = reader.int32();\n                    continue;\n                case 51:\n                    if (tag !== 413) {\n                        break;\n                    }\n                    message.paddingBottom = reader.float();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBUiTransform.decode = decode;\n})(PBUiTransform || (PBUiTransform = {}));\n", "import { PBUiTransform } from './pb/decentraland/sdk/components/ui_transform.gen';\n/**\n * @internal\n */\nexport const UiTransformSchema = {\n    COMPONENT_ID: 1050,\n    serialize(value, builder) {\n        const writer = PBUiTransform.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBUiTransform.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBUiTransform.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBUiTransform\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\n/**\n * @public\n */\nexport var VideoState;\n(function (VideoState) {\n    VideoState[VideoState[\"VS_NONE\"] = 0] = \"VS_NONE\";\n    VideoState[VideoState[\"VS_ERROR\"] = 1] = \"VS_ERROR\";\n    VideoState[VideoState[\"VS_LOADING\"] = 2] = \"VS_LOADING\";\n    VideoState[VideoState[\"VS_READY\"] = 3] = \"VS_READY\";\n    VideoState[VideoState[\"VS_PLAYING\"] = 4] = \"VS_PLAYING\";\n    VideoState[VideoState[\"VS_BUFFERING\"] = 5] = \"VS_BUFFERING\";\n    VideoState[VideoState[\"VS_SEEKING\"] = 6] = \"VS_SEEKING\";\n    VideoState[VideoState[\"VS_PAUSED\"] = 7] = \"VS_PAUSED\";\n})(VideoState || (VideoState = {}));\nfunction createBasePBVideoEvent() {\n    return { timestamp: 0, tickNumber: 0, currentOffset: 0, videoLength: 0, state: 0 };\n}\n/**\n * @public\n */\nexport var PBVideoEvent;\n(function (PBVideoEvent) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.timestamp !== 0) {\n            writer.uint32(8).uint32(message.timestamp);\n        }\n        if (message.tickNumber !== 0) {\n            writer.uint32(16).uint32(message.tickNumber);\n        }\n        if (message.currentOffset !== 0) {\n            writer.uint32(29).float(message.currentOffset);\n        }\n        if (message.videoLength !== 0) {\n            writer.uint32(37).float(message.videoLength);\n        }\n        if (message.state !== 0) {\n            writer.uint32(40).int32(message.state);\n        }\n        return writer;\n    }\n    PBVideoEvent.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBVideoEvent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.timestamp = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.tickNumber = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.currentOffset = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.videoLength = reader.float();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.state = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBVideoEvent.decode = decode;\n})(PBVideoEvent || (PBVideoEvent = {}));\n", "import { PBVideoEvent } from './pb/decentraland/sdk/components/video_event.gen';\n/**\n * @internal\n */\nexport const VideoEventSchema = {\n    COMPONENT_ID: 1044,\n    serialize(value, builder) {\n        const writer = PBVideoEvent.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBVideoEvent.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBVideoEvent.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBVideoEvent\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBVideoPlayer() {\n    return {\n        src: \"\",\n        playing: undefined,\n        position: undefined,\n        volume: undefined,\n        playbackRate: undefined,\n        loop: undefined,\n    };\n}\n/**\n * @public\n */\nexport var PBVideoPlayer;\n(function (PBVideoPlayer) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.src !== \"\") {\n            writer.uint32(10).string(message.src);\n        }\n        if (message.playing !== undefined) {\n            writer.uint32(16).bool(message.playing);\n        }\n        if (message.position !== undefined) {\n            writer.uint32(29).float(message.position);\n        }\n        if (message.volume !== undefined) {\n            writer.uint32(37).float(message.volume);\n        }\n        if (message.playbackRate !== undefined) {\n            writer.uint32(45).float(message.playbackRate);\n        }\n        if (message.loop !== undefined) {\n            writer.uint32(48).bool(message.loop);\n        }\n        return writer;\n    }\n    PBVideoPlayer.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBVideoPlayer();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.src = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.playing = reader.bool();\n                    continue;\n                case 3:\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.position = reader.float();\n                    continue;\n                case 4:\n                    if (tag !== 37) {\n                        break;\n                    }\n                    message.volume = reader.float();\n                    continue;\n                case 5:\n                    if (tag !== 45) {\n                        break;\n                    }\n                    message.playbackRate = reader.float();\n                    continue;\n                case 6:\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.loop = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBVideoPlayer.decode = decode;\n})(PBVideoPlayer || (PBVideoPlayer = {}));\n", "import { PBVideoPlayer } from './pb/decentraland/sdk/components/video_player.gen';\n/**\n * @internal\n */\nexport const VideoPlayerSchema = {\n    COMPONENT_ID: 1043,\n    serialize(value, builder) {\n        const writer = PBVideoPlayer.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBVideoPlayer.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBVideoPlayer.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBVideoPlayer\"\n    }\n};\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"decentraland.sdk.components\";\nfunction createBasePBVisibilityComponent() {\n    return { visible: undefined };\n}\n/**\n * @public\n */\nexport var PBVisibilityComponent;\n(function (PBVisibilityComponent) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.visible !== undefined) {\n            writer.uint32(8).bool(message.visible);\n        }\n        return writer;\n    }\n    PBVisibilityComponent.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePBVisibilityComponent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.visible = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    PBVisibilityComponent.decode = decode;\n})(PBVisibilityComponent || (PBVisibilityComponent = {}));\n", "import { PBVisibilityComponent } from './pb/decentraland/sdk/components/visibility_component.gen';\n/**\n * @internal\n */\nexport const VisibilityComponentSchema = {\n    COMPONENT_ID: 1081,\n    serialize(value, builder) {\n        const writer = PBVisibilityComponent.encode(value);\n        const buffer = new Uint8Array(writer.finish(), 0, writer.len);\n        builder.writeBuffer(buffer, false);\n    },\n    deserialize(reader) {\n        return PBVisibilityComponent.decode(reader.buffer(), reader.remainingBytes());\n    },\n    create() {\n        // TODO: this is a hack.\n        return PBVisibilityComponent.decode(new Uint8Array());\n    },\n    jsonSchema: {\n        type: \"object\",\n        properties: {},\n        serializationType: \"protocol-buffer\",\n        protocolBuffer: \"PBVisibilityComponent\"\n    }\n};\n", "import { AnimatorSchema } from './Animator.gen';\nimport { AudioSourceSchema } from './AudioSource.gen';\nimport { AudioStreamSchema } from './AudioStream.gen';\nimport { AvatarAttachSchema } from './AvatarAttach.gen';\nimport { AvatarModifierAreaSchema } from './AvatarModifierArea.gen';\nimport { AvatarShapeSchema } from './AvatarShape.gen';\nimport { BillboardSchema } from './Billboard.gen';\nimport { CameraModeSchema } from './CameraMode.gen';\nimport { CameraModeAreaSchema } from './CameraModeArea.gen';\nimport { EngineInfoSchema } from './EngineInfo.gen';\nimport { GltfContainerSchema } from './GltfContainer.gen';\nimport { GltfContainerLoadingStateSchema } from './GltfContainerLoadingState.gen';\nimport { MaterialSchema } from './Material.gen';\nimport { MeshColliderSchema } from './MeshCollider.gen';\nimport { MeshRendererSchema } from './MeshRenderer.gen';\nimport { NftShapeSchema } from './NftShape.gen';\nimport { PointerEventsSchema } from './PointerEvents.gen';\nimport { PointerEventsResultSchema } from './PointerEventsResult.gen';\nimport { PointerLockSchema } from './PointerLock.gen';\nimport { RaycastSchema } from './Raycast.gen';\nimport { RaycastResultSchema } from './RaycastResult.gen';\nimport { TextShapeSchema } from './TextShape.gen';\nimport { UiBackgroundSchema } from './UiBackground.gen';\nimport { UiCanvasInformationSchema } from './UiCanvasInformation.gen';\nimport { UiDropdownSchema } from './UiDropdown.gen';\nimport { UiDropdownResultSchema } from './UiDropdownResult.gen';\nimport { UiInputSchema } from './UiInput.gen';\nimport { UiInputResultSchema } from './UiInputResult.gen';\nimport { UiTextSchema } from './UiText.gen';\nimport { UiTransformSchema } from './UiTransform.gen';\nimport { VideoEventSchema } from './VideoEvent.gen';\nimport { VideoPlayerSchema } from './VideoPlayer.gen';\nimport { VisibilityComponentSchema } from './VisibilityComponent.gen';\nexport * from './pb/decentraland/sdk/components/animator.gen';\nexport * from './pb/decentraland/sdk/components/audio_source.gen';\nexport * from './pb/decentraland/sdk/components/audio_stream.gen';\nexport * from './pb/decentraland/sdk/components/avatar_attach.gen';\nexport * from './pb/decentraland/sdk/components/avatar_modifier_area.gen';\nexport * from './pb/decentraland/sdk/components/avatar_shape.gen';\nexport * from './pb/decentraland/sdk/components/billboard.gen';\nexport * from './pb/decentraland/sdk/components/camera_mode.gen';\nexport * from './pb/decentraland/sdk/components/camera_mode_area.gen';\nexport * from './pb/decentraland/sdk/components/engine_info.gen';\nexport * from './pb/decentraland/sdk/components/gltf_container.gen';\nexport * from './pb/decentraland/sdk/components/gltf_container_loading_state.gen';\nexport * from './pb/decentraland/sdk/components/material.gen';\nexport * from './pb/decentraland/sdk/components/mesh_collider.gen';\nexport * from './pb/decentraland/sdk/components/mesh_renderer.gen';\nexport * from './pb/decentraland/sdk/components/nft_shape.gen';\nexport * from './pb/decentraland/sdk/components/pointer_events.gen';\nexport * from './pb/decentraland/sdk/components/pointer_events_result.gen';\nexport * from './pb/decentraland/sdk/components/pointer_lock.gen';\nexport * from './pb/decentraland/sdk/components/raycast.gen';\nexport * from './pb/decentraland/sdk/components/raycast_result.gen';\nexport * from './pb/decentraland/sdk/components/text_shape.gen';\nexport * from './pb/decentraland/sdk/components/ui_background.gen';\nexport * from './pb/decentraland/sdk/components/ui_canvas_information.gen';\nexport * from './pb/decentraland/sdk/components/ui_dropdown.gen';\nexport * from './pb/decentraland/sdk/components/ui_dropdown_result.gen';\nexport * from './pb/decentraland/sdk/components/ui_input.gen';\nexport * from './pb/decentraland/sdk/components/ui_input_result.gen';\nexport * from './pb/decentraland/sdk/components/ui_text.gen';\nexport * from './pb/decentraland/sdk/components/ui_transform.gen';\nexport * from './pb/decentraland/sdk/components/video_event.gen';\nexport * from './pb/decentraland/sdk/components/video_player.gen';\nexport * from './pb/decentraland/sdk/components/visibility_component.gen';\n/** @public */ export const Animator = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::Animator\", AnimatorSchema);\n/** @public */ export const AudioSource = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::AudioSource\", AudioSourceSchema);\n/** @public */ export const AudioStream = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::AudioStream\", AudioStreamSchema);\n/** @public */ export const AvatarAttach = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::AvatarAttach\", AvatarAttachSchema);\n/** @public */ export const AvatarModifierArea = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::AvatarModifierArea\", AvatarModifierAreaSchema);\n/** @public */ export const AvatarShape = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::AvatarShape\", AvatarShapeSchema);\n/** @public */ export const Billboard = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::Billboard\", BillboardSchema);\n/** @public */ export const CameraMode = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::CameraMode\", CameraModeSchema);\n/** @public */ export const CameraModeArea = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::CameraModeArea\", CameraModeAreaSchema);\n/** @public */ export const EngineInfo = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::EngineInfo\", EngineInfoSchema);\n/** @public */ export const GltfContainer = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::GltfContainer\", GltfContainerSchema);\n/** @public */ export const GltfContainerLoadingState = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::GltfContainerLoadingState\", GltfContainerLoadingStateSchema);\n/** @public */ export const Material = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::Material\", MaterialSchema);\n/** @public */ export const MeshCollider = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::MeshCollider\", MeshColliderSchema);\n/** @public */ export const MeshRenderer = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::MeshRenderer\", MeshRendererSchema);\n/** @public */ export const NftShape = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::NftShape\", NftShapeSchema);\n/** @public */ export const PointerEvents = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::PointerEvents\", PointerEventsSchema);\n/** @public */ export const PointerEventsResult = (engine) => /* @__PURE__ */ engine.defineValueSetComponentFromSchema(\"core::PointerEventsResult\", PointerEventsResultSchema, {\n    timestampFunction: (t) => t.timestamp,\n    maxElements: 100\n});\n/** @public */ export const PointerLock = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::PointerLock\", PointerLockSchema);\n/** @public */ export const Raycast = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::Raycast\", RaycastSchema);\n/** @public */ export const RaycastResult = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::RaycastResult\", RaycastResultSchema);\n/** @public */ export const TextShape = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::TextShape\", TextShapeSchema);\n/** @public */ export const UiBackground = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiBackground\", UiBackgroundSchema);\n/** @public */ export const UiCanvasInformation = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiCanvasInformation\", UiCanvasInformationSchema);\n/** @public */ export const UiDropdown = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiDropdown\", UiDropdownSchema);\n/** @public */ export const UiDropdownResult = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiDropdownResult\", UiDropdownResultSchema);\n/** @public */ export const UiInput = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiInput\", UiInputSchema);\n/** @public */ export const UiInputResult = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiInputResult\", UiInputResultSchema);\n/** @public */ export const UiText = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiText\", UiTextSchema);\n/** @public */ export const UiTransform = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::UiTransform\", UiTransformSchema);\n/** @public */ export const VideoEvent = (engine) => /* @__PURE__ */ engine.defineValueSetComponentFromSchema(\"core::VideoEvent\", VideoEventSchema, {\n    timestampFunction: (t) => t.timestamp,\n    maxElements: 100\n});\n/** @public */ export const VideoPlayer = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::VideoPlayer\", VideoPlayerSchema);\n/** @public */ export const VisibilityComponent = engine => \n/* @__PURE__ */ engine.defineComponentFromSchema(\"core::VisibilityComponent\", VisibilityComponentSchema);\n/** public */\nexport const componentDefinitionByName = /* @__PURE__ */ {\n    \"core::Animator\": Animator,\n    \"core::AudioSource\": AudioSource,\n    \"core::AudioStream\": AudioStream,\n    \"core::AvatarAttach\": AvatarAttach,\n    \"core::AvatarModifierArea\": AvatarModifierArea,\n    \"core::AvatarShape\": AvatarShape,\n    \"core::Billboard\": Billboard,\n    \"core::CameraMode\": CameraMode,\n    \"core::CameraModeArea\": CameraModeArea,\n    \"core::EngineInfo\": EngineInfo,\n    \"core::GltfContainer\": GltfContainer,\n    \"core::GltfContainerLoadingState\": GltfContainerLoadingState,\n    \"core::Material\": Material,\n    \"core::MeshCollider\": MeshCollider,\n    \"core::MeshRenderer\": MeshRenderer,\n    \"core::NftShape\": NftShape,\n    \"core::PointerEvents\": PointerEvents,\n    \"core::PointerEventsResult\": PointerEventsResult,\n    \"core::PointerLock\": PointerLock,\n    \"core::Raycast\": Raycast,\n    \"core::RaycastResult\": RaycastResult,\n    \"core::TextShape\": TextShape,\n    \"core::UiBackground\": UiBackground,\n    \"core::UiCanvasInformation\": UiCanvasInformation,\n    \"core::UiDropdown\": UiDropdown,\n    \"core::UiDropdownResult\": UiDropdownResult,\n    \"core::UiInput\": UiInput,\n    \"core::UiInputResult\": UiInputResult,\n    \"core::UiText\": UiText,\n    \"core::UiTransform\": UiTransform,\n    \"core::VideoEvent\": VideoEvent,\n    \"core::VideoPlayer\": VideoPlayer,\n    \"core::VisibilityComponent\": VisibilityComponent,\n};\n", "import { Material } from '../generated/index.gen';\nconst TextureHelper = {\n    Common(texture) {\n        return {\n            tex: {\n                $case: 'texture',\n                texture\n            }\n        };\n    },\n    Avatar(avatarTexture) {\n        return {\n            tex: {\n                $case: 'avatarTexture',\n                avatarTexture\n            }\n        };\n    },\n    Video(videoTexture) {\n        return {\n            tex: {\n                $case: 'videoTexture',\n                videoTexture\n            }\n        };\n    }\n};\nexport function defineMaterialComponent(engine) {\n    const theComponent = Material(engine);\n    return {\n        ...theComponent,\n        Texture: TextureHelper,\n        setBasicMaterial(entity, material) {\n            theComponent.createOrReplace(entity, {\n                material: {\n                    $case: 'unlit',\n                    unlit: material\n                }\n            });\n        },\n        setPbrMaterial(entity, material) {\n            theComponent.createOrReplace(entity, {\n                material: {\n                    $case: 'pbr',\n                    pbr: material\n                }\n            });\n        }\n    };\n}\n", "import { MeshRenderer } from '../generated/index.gen';\nexport function defineMeshRendererComponent(engine) {\n    const theComponent = MeshRenderer(engine);\n    return {\n        ...theComponent,\n        setBox(entity, uvs) {\n            theComponent.createOrReplace(entity, {\n                mesh: { $case: 'box', box: { uvs: uvs || [] } }\n            });\n        },\n        setPlane(entity, uvs) {\n            theComponent.createOrReplace(entity, {\n                mesh: { $case: 'plane', plane: { uvs: uvs || [] } }\n            });\n        },\n        setCylinder(entity, radiusBottom, radiusTop) {\n            theComponent.createOrReplace(entity, {\n                mesh: { $case: 'cylinder', cylinder: { radiusBottom, radiusTop } }\n            });\n        },\n        setSphere(entity) {\n            theComponent.createOrReplace(entity, {\n                mesh: { $case: 'sphere', sphere: {} }\n            });\n        }\n    };\n}\n", "/**\n * @internal\n */\nexport const IArray = (type) => {\n    return {\n        serialize(value, builder) {\n            builder.writeUint32(value.length);\n            for (const item of value) {\n                type.serialize(item, builder);\n            }\n        },\n        deserialize(reader) {\n            const newArray = [];\n            const length = reader.readUint32();\n            for (let index = 0; index < length; index++) {\n                newArray.push(type.deserialize(reader));\n            }\n            return newArray;\n        },\n        create() {\n            return [];\n        },\n        jsonSchema: {\n            type: 'array',\n            items: type.jsonSchema,\n            serializationType: 'array'\n        }\n    };\n};\n", "/**\n * @internal\n */\nexport const Bool = {\n    serialize(value, builder) {\n        builder.writeInt8(value ? 1 : 0);\n    },\n    deserialize(reader) {\n        return reader.readInt8() === 1;\n    },\n    create() {\n        return false;\n    },\n    jsonSchema: {\n        type: 'boolean',\n        serializationType: 'boolean'\n    }\n};\n", "/**\n * @internal\n */\nexport const Int64 = {\n    serialize(value, builder) {\n        builder.writeInt64(BigInt(value));\n    },\n    deserialize(reader) {\n        return Number(reader.readInt64());\n    },\n    create() {\n        return 0;\n    },\n    jsonSchema: {\n        type: 'integer',\n        serializationType: 'int64'\n    }\n};\n/**\n * @internal\n */\nexport const Int32 = {\n    serialize(value, builder) {\n        builder.writeInt32(value);\n    },\n    deserialize(reader) {\n        return reader.readInt32();\n    },\n    create() {\n        return 0;\n    },\n    jsonSchema: {\n        type: 'integer',\n        serializationType: 'int32'\n    }\n};\n/**\n * @public\n */\nexport const Int16 = {\n    serialize(value, builder) {\n        builder.writeInt16(value);\n    },\n    deserialize(reader) {\n        return reader.readInt16();\n    },\n    create() {\n        return 0;\n    },\n    jsonSchema: {\n        type: 'integer',\n        serializationType: 'int16'\n    }\n};\n/**\n * @public\n */\nexport const Int8 = {\n    serialize(value, builder) {\n        builder.writeInt8(value);\n    },\n    deserialize(reader) {\n        return reader.readInt8();\n    },\n    create() {\n        return 0;\n    },\n    jsonSchema: {\n        type: 'integer',\n        serializationType: 'int8'\n    }\n};\n", "/**\n * @internal\n */\nexport const FlatString = {\n    serialize(value, builder) {\n        builder.writeUtf8String(value);\n    },\n    deserialize(reader) {\n        return reader.readUtf8String();\n    },\n    create() {\n        return '';\n    },\n    jsonSchema: {\n        type: 'string',\n        serializationType: 'utf8-string'\n    }\n};\n/**\n * @internal\n */\nexport const EcsString = FlatString;\n", "import { Int32 } from './Integer';\nimport { FlatString } from './String';\n/**\n * Validates the enum to ensure all member values are numbers and within the range of Int32.\n * @param enumValue The enum to be checked.\n * @throws If any member value is not a number or is outside the range of Int32.\n */\nfunction validateMemberValuesAreNumbersAndInRangeInt32(enumValue) {\n    const MIN_VALUE = -(2 ** 31), MAX_VALUE = 2 ** 31 - 1;\n    let valueCount = 0, totalCount = 0;\n    for (const key in enumValue) {\n        if (typeof enumValue[key] === 'number') {\n            if (enumValue[key] > MAX_VALUE || enumValue[key] < MIN_VALUE) {\n                throw new Error(`Enum member values must be numbers within the range of ${MIN_VALUE} to ${MAX_VALUE}.`);\n            }\n            valueCount++;\n        }\n        totalCount++;\n    }\n    if (totalCount !== valueCount * 2) {\n        throw new Error('All enum member values must be of numeric type.');\n    }\n}\n/**\n * Validates the enum to ensure all member values are of string type.\n * @param enumValue The enum to be checked.\n * @throws If any member value is not of string type.\n */\nfunction validateMemberValuesAreStrings(enumValue) {\n    for (const key in enumValue) {\n        if (typeof enumValue[key] !== 'string') {\n            throw new Error('All enum member values must be of string type.');\n        }\n    }\n}\n/**\n * @internal\n */\nexport const IntEnumReflectionType = 'enum-int';\n/**\n * @internal\n */\nexport const IntEnum = (enumObject, defaultValue) => {\n    validateMemberValuesAreNumbersAndInRangeInt32(enumObject);\n    return {\n        serialize(value, builder) {\n            Int32.serialize(value, builder);\n        },\n        deserialize(reader) {\n            return Int32.deserialize(reader);\n        },\n        create() {\n            return defaultValue;\n        },\n        jsonSchema: {\n            // JSON-schema\n            type: 'integer',\n            enum: Object.values(enumObject).filter((item) => Number.isInteger(item)),\n            default: defaultValue,\n            // @dcl/ecs Schema Spec\n            serializationType: IntEnumReflectionType,\n            enumObject\n        }\n    };\n};\n/**\n * @internal\n */\nexport const StringEnumReflectionType = 'enum-string';\n/**\n * @internal\n */\nexport const StringEnum = (enumObject, defaultValue) => {\n    validateMemberValuesAreStrings(enumObject);\n    // String enum has the exact mapping from key (our reference in code) to values\n    return {\n        serialize(value, builder) {\n            FlatString.serialize(value, builder);\n        },\n        deserialize(reader) {\n            return FlatString.deserialize(reader);\n        },\n        create() {\n            return defaultValue;\n        },\n        jsonSchema: {\n            // JSON-schema\n            type: 'string',\n            enum: Object.values(enumObject),\n            default: defaultValue,\n            // @dcl/ecs Schema Spec\n            serializationType: StringEnumReflectionType,\n            enumObject\n        }\n    };\n};\n", "/**\n * @internal\n */\nexport const Float32 = {\n    serialize(value, builder) {\n        builder.writeFloat32(value);\n    },\n    deserialize(reader) {\n        return reader.readFloat32();\n    },\n    create() {\n        return 0.0;\n    },\n    jsonSchema: {\n        type: 'number',\n        serializationType: 'float32'\n    }\n};\n/**\n * @internal\n */\nexport const Float64 = {\n    serialize(value, builder) {\n        builder.writeFloat64(value);\n    },\n    deserialize(reader) {\n        return reader.readFloat64();\n    },\n    create() {\n        return 0.0;\n    },\n    jsonSchema: {\n        type: 'number',\n        serializationType: 'float64'\n    }\n};\n", "/**\n * @internal\n */\nexport const Color3Schema = {\n    serialize(value, builder) {\n        builder.writeFloat32(value.r);\n        builder.writeFloat32(value.g);\n        builder.writeFloat32(value.b);\n    },\n    deserialize(reader) {\n        return {\n            r: reader.readFloat32(),\n            g: reader.readFloat32(),\n            b: reader.readFloat32()\n        };\n    },\n    create() {\n        return { r: 0, g: 0, b: 0 };\n    },\n    jsonSchema: {\n        type: 'object',\n        properties: {\n            r: { type: 'number' },\n            g: { type: 'number' },\n            b: { type: 'number' }\n        },\n        serializationType: 'color3'\n    }\n};\n", "/**\n * @internal\n */\nexport const Color4Schema = {\n    serialize(value, builder) {\n        builder.writeFloat32(value.r);\n        builder.writeFloat32(value.g);\n        builder.writeFloat32(value.b);\n        builder.writeFloat32(value.a);\n    },\n    deserialize(reader) {\n        return {\n            r: reader.readFloat32(),\n            g: reader.readFloat32(),\n            b: reader.readFloat32(),\n            a: reader.readFloat32()\n        };\n    },\n    create() {\n        return { r: 0, g: 0, b: 0, a: 0 };\n    },\n    jsonSchema: {\n        type: 'object',\n        properties: {\n            r: { type: 'number' },\n            g: { type: 'number' },\n            b: { type: 'number' },\n            a: { type: 'number' }\n        },\n        serializationType: 'color4'\n    }\n};\n", "/**\n * @internal\n */\nexport const EntitySchema = {\n    serialize(value, builder) {\n        builder.writeInt32(value);\n    },\n    deserialize(reader) {\n        return reader.readInt32();\n    },\n    create() {\n        return 0;\n    },\n    jsonSchema: {\n        type: 'integer',\n        serializationType: 'entity'\n    }\n};\n", "/**\n * @internal\n */\nexport const QuaternionSchema = {\n    serialize(value, builder) {\n        builder.writeFloat32(value.x);\n        builder.writeFloat32(value.y);\n        builder.writeFloat32(value.z);\n        builder.writeFloat32(value.w);\n    },\n    deserialize(reader) {\n        return {\n            x: reader.readFloat32(),\n            y: reader.readFloat32(),\n            z: reader.readFloat32(),\n            w: reader.readFloat32()\n        };\n    },\n    create() {\n        return { x: 0, y: 0, z: 0, w: 0 };\n    },\n    jsonSchema: {\n        type: 'object',\n        properties: {\n            x: { type: 'number' },\n            y: { type: 'number' },\n            z: { type: 'number' },\n            w: { type: 'number' }\n        },\n        serializationType: 'quaternion'\n    }\n};\n", "/**\n * @internal\n */\nexport const Vector3Schema = {\n    serialize(value, builder) {\n        builder.writeFloat32(value.x);\n        builder.writeFloat32(value.y);\n        builder.writeFloat32(value.z);\n    },\n    deserialize(reader) {\n        return {\n            x: reader.readFloat32(),\n            y: reader.readFloat32(),\n            z: reader.readFloat32()\n        };\n    },\n    create() {\n        return { x: 0, y: 0, z: 0 };\n    },\n    jsonSchema: {\n        type: 'object',\n        properties: {\n            x: { type: 'number' },\n            y: { type: 'number' },\n            z: { type: 'number' },\n            w: { type: 'number' }\n        },\n        serializationType: 'vector3'\n    }\n};\n", "/**\n * @internal\n */\nexport const IMap = (spec, defaultValue) => {\n    const specReflection = Object.keys(spec).reduce((specReflection, currentKey) => {\n        specReflection[currentKey] = spec[currentKey].jsonSchema;\n        return specReflection;\n    }, {});\n    return {\n        serialize(value, builder) {\n            for (const key in spec) {\n                spec[key].serialize(value[key], builder);\n            }\n        },\n        deserialize(reader) {\n            const newValue = {};\n            for (const key in spec) {\n                ;\n                newValue[key] = spec[key].deserialize(reader);\n            }\n            return newValue;\n        },\n        create() {\n            const newValue = {};\n            for (const key in spec) {\n                ;\n                newValue[key] = spec[key].create();\n            }\n            return { ...newValue, ...defaultValue };\n        },\n        extend: (base) => {\n            const newValue = {};\n            for (const key in spec) {\n                ;\n                newValue[key] = spec[key].create();\n            }\n            return { ...newValue, ...defaultValue, ...base };\n        },\n        jsonSchema: {\n            type: 'object',\n            properties: specReflection,\n            serializationType: 'map'\n        }\n    };\n};\n", "/**\n * @internal\n */\nexport const IOptional = (spec) => {\n    return {\n        serialize(value, builder) {\n            if (value) {\n                builder.writeInt8(1);\n                spec.serialize(value, builder);\n            }\n            else {\n                builder.writeInt8(0);\n            }\n        },\n        deserialize(reader) {\n            const exists = reader.readInt8();\n            if (exists) {\n                return spec.deserialize(reader);\n            }\n        },\n        create() {\n            return undefined;\n        },\n        jsonSchema: {\n            type: spec.jsonSchema.type,\n            serializationType: 'optional',\n            optionalJsonSchema: spec.jsonSchema\n        }\n    };\n};\n", "export const IOneOf = (specs) => {\n    const specKeys = Object.keys(specs);\n    const keyToIndex = specKeys.reduce((dict, key, index) => {\n        dict[key] = index;\n        return dict;\n    }, {});\n    const specReflection = specKeys.reduce((specReflection, currentKey) => {\n        specReflection[currentKey] = specs[currentKey].jsonSchema;\n        return specReflection;\n    }, {});\n    return {\n        serialize({ $case, value }, builder) {\n            const _value = keyToIndex[$case.toString()] + 1;\n            builder.writeUint8(_value);\n            specs[$case].serialize(value, builder);\n        },\n        deserialize(reader) {\n            const $case = specKeys[reader.readInt8() - 1];\n            const value = specs[$case].deserialize(reader);\n            return { $case, value };\n        },\n        create() {\n            return {};\n        },\n        jsonSchema: {\n            type: 'object',\n            properties: specReflection,\n            serializationType: 'one-of'\n        }\n    };\n};\n", "export const isSchemaType = (value, types) => types.includes(value.serializationType);\nexport const isOneOfJsonSchema = (type) => isSchemaType(type, ['one-of']);\nexport const getUnknownSchema = () => ({\n    type: { type: 'object', serializationType: 'unknown' },\n    value: undefined\n});\nexport const isCompoundType = (type) => isSchemaType(type, ['array', 'map']);\nexport const getTypeAndValue = (properties, value, key) => {\n    const type = properties[key];\n    const valueKey = value[key];\n    if (isOneOfJsonSchema(type)) {\n        const typedMapValue = valueKey;\n        if (!typedMapValue.$case)\n            return getUnknownSchema();\n        const propType = type.properties[typedMapValue.$case];\n        // transform { $case: string; value: unknown } => { [$case]: value }\n        if (isCompoundType(propType))\n            value[key] = { [typedMapValue.$case]: typedMapValue.value };\n        return { type: propType, value: typedMapValue.value };\n    }\n    return { type, value: valueKey };\n};\n", "import { IArray } from '../Array';\nimport { Bool } from '../basic/Boolean';\nimport { IntEnum, StringEnum } from '../basic/Enum';\nimport { Float32, Float64 } from '../basic/Float';\nimport { Int16, Int32, Int64, Int8 } from '../basic/Integer';\nimport { EcsString } from '../basic/String';\nimport { Color3Schema } from '../custom/Color3';\nimport { Color4Schema } from '../custom/Color4';\nimport { EntitySchema } from '../custom/Entity';\nimport { QuaternionSchema } from '../custom/Quaternion';\nimport { Vector3Schema } from '../custom/Vector3';\nimport { IMap } from '../Map';\nimport { IOneOf } from '../OneOf';\nimport { IOptional } from '../Optional';\nimport { getTypeAndValue, isCompoundType } from './utils';\nconst primitiveSchemas = {\n    [Bool.jsonSchema.serializationType]: Bool,\n    [EcsString.jsonSchema.serializationType]: EcsString,\n    [Float32.jsonSchema.serializationType]: Float32,\n    [Float64.jsonSchema.serializationType]: Float64,\n    [Int8.jsonSchema.serializationType]: Int8,\n    [Int16.jsonSchema.serializationType]: Int16,\n    [Int32.jsonSchema.serializationType]: Int32,\n    [Int64.jsonSchema.serializationType]: Int64,\n    [Vector3Schema.jsonSchema.serializationType]: Vector3Schema,\n    [QuaternionSchema.jsonSchema.serializationType]: QuaternionSchema,\n    [Color3Schema.jsonSchema.serializationType]: Color3Schema,\n    [Color4Schema.jsonSchema.serializationType]: Color4Schema,\n    [EntitySchema.jsonSchema.serializationType]: EntitySchema\n};\n/**\n * Create an ISchema object from the json-schema\n * @param jsonSchema\n * @returns a ISchema or fail for unsupported json-schema\n */\nexport function jsonSchemaToSchema(jsonSchema) {\n    if (primitiveSchemas[jsonSchema.serializationType]) {\n        return primitiveSchemas[jsonSchema.serializationType];\n    }\n    if (jsonSchema.serializationType === 'map') {\n        const mapJsonSchema = jsonSchema;\n        const spec = {};\n        for (const key in mapJsonSchema.properties) {\n            spec[key] = jsonSchemaToSchema(mapJsonSchema.properties[key]);\n        }\n        return IMap(spec);\n    }\n    if (jsonSchema.serializationType === 'optional') {\n        const withItemsJsonSchema = jsonSchema;\n        return IOptional(jsonSchemaToSchema(withItemsJsonSchema.optionalJsonSchema));\n    }\n    if (jsonSchema.serializationType === 'array') {\n        const withItemsJsonSchema = jsonSchema;\n        return IArray(jsonSchemaToSchema(withItemsJsonSchema.items));\n    }\n    if (jsonSchema.serializationType === 'enum-int') {\n        const enumJsonSchema = jsonSchema;\n        return IntEnum(enumJsonSchema.enumObject, enumJsonSchema.default);\n    }\n    if (jsonSchema.serializationType === 'enum-string') {\n        const enumJsonSchema = jsonSchema;\n        return StringEnum(enumJsonSchema.enumObject, enumJsonSchema.default);\n    }\n    if (jsonSchema.serializationType === 'one-of') {\n        const oneOfJsonSchema = jsonSchema;\n        const spec = {};\n        for (const key in oneOfJsonSchema.properties) {\n            spec[key] = jsonSchemaToSchema(oneOfJsonSchema.properties[key]);\n        }\n        return IOneOf(spec);\n    }\n    throw new Error(`${jsonSchema.serializationType} is not supported as reverse schema generation.`);\n}\nexport function mutateValues(jsonSchema, value, mutateFn) {\n    if (jsonSchema.serializationType === 'map') {\n        const { properties } = jsonSchema;\n        const typedValue = value;\n        for (const key in properties) {\n            const { type, value: mapValue } = getTypeAndValue(properties, typedValue, key);\n            if (type.serializationType === 'unknown')\n                continue;\n            if (isCompoundType(type)) {\n                mutateValues(type, mapValue, mutateFn);\n            }\n            else {\n                const newValue = mutateFn(mapValue, type);\n                if (newValue.changed) {\n                    typedValue[key] = newValue.value;\n                }\n            }\n        }\n    }\n    else if (jsonSchema.serializationType === 'array') {\n        const { items } = jsonSchema;\n        const arrayValue = value;\n        for (let i = 0, n = arrayValue.length; i < n; i++) {\n            const { type, value } = getTypeAndValue({ items: items }, { items: arrayValue[i] }, 'items');\n            if (isCompoundType(type)) {\n                mutateValues(type, value, mutateFn);\n            }\n            else {\n                const newValue = mutateFn(value, type);\n                if (newValue.changed) {\n                    arrayValue[i] = newValue.value;\n                }\n            }\n        }\n    }\n}\n", "import { IArray } from './Array';\nimport { Bool } from './basic/Boolean';\nimport { IntEnum as IntEnumSchema, StringEnum as StringEnumSchema } from './basic/Enum';\nimport { Float32, Float64 } from './basic/Float';\nimport { Int16, Int32, Int8, Int64 as iInt64 } from './basic/Integer';\nimport { EcsString } from './basic/String';\nimport { Color3Schema } from './custom/Color3';\nimport { Color4Schema } from './custom/Color4';\nimport { EntitySchema } from './custom/Entity';\nimport { QuaternionSchema } from './custom/Quaternion';\nimport { Vector3Schema } from './custom/Vector3';\nimport { IMap } from './Map';\nimport { IOptional } from './Optional';\nimport { IOneOf } from './OneOf';\nimport { jsonSchemaToSchema, mutateValues } from './buildSchema';\n/**\n * @public\n */\nexport var Schemas;\n(function (Schemas) {\n    /** @public */\n    Schemas.Boolean = Bool;\n    /** @public */\n    Schemas.String = EcsString;\n    /** @public */\n    Schemas.Float = Float32;\n    /** @public */\n    Schemas.Double = Float64;\n    /** @public */\n    Schemas.Byte = Int8;\n    /** @public */\n    Schemas.Short = Int16;\n    /** @public */\n    Schemas.Int = Int32;\n    /** @public */\n    Schemas.Int64 = iInt64;\n    /** @public */\n    Schemas.Number = Float32;\n    /** @public */\n    Schemas.Vector3 = Vector3Schema;\n    /** @public */\n    Schemas.Quaternion = QuaternionSchema;\n    /** @public */\n    Schemas.Color3 = Color3Schema;\n    /** @public */\n    Schemas.Color4 = Color4Schema;\n    /** @public */\n    Schemas.Entity = EntitySchema;\n    /** @public */\n    Schemas.EnumNumber = IntEnumSchema;\n    /** @public */\n    Schemas.EnumString = StringEnumSchema;\n    /** @public */\n    Schemas.Array = IArray;\n    /** @public */\n    Schemas.Map = IMap;\n    /** @public */\n    Schemas.Optional = IOptional;\n    /** @public */\n    Schemas.OneOf = IOneOf;\n    /**\n     * @public Create an ISchema object from the json-schema\n     * @param jsonSchema\n     * @returns a ISchema or fail for unsupported json-schema\n     */\n    Schemas.fromJson = jsonSchemaToSchema;\n    /**\n     * @public\n     *\n     * Traverses and mutates values in a JSON schema-based structure, applying the given mutation function to each value.\n     * The function is designed to work with nested maps and arrays, recursively processing each element.\n     *\n     * @param jsonSchema - The JSON schema object that describes the structure of the value.\n     *                   It must have a serializationType of 'map', 'array', or other custom types like 'entity'.\n     * @param value - The value to be mutated, which should conform to the provided JSON schema.\n     * @param mutateFn - A function that takes a value and its corresponding valueType (JsonSchemaExtended) as arguments\n     *                   and returns a tuple [boolean, any]. The boolean indicates whether the mutation should be applied,\n     *                   and the second element is the mutated value.\n     */\n    Schemas.mutateNestedValues = mutateValues;\n})(Schemas || (Schemas = {}));\n", "import { Schemas } from '../../schemas';\nfunction defineNameComponent(engine) {\n    const Name = engine.defineComponent('core-schema::Name', {\n        value: Schemas.String\n    });\n    return Name;\n}\nexport default defineNameComponent;\n", "/**\n * @internal\n */\nexport const COMPONENT_ID = 1;\n/** @internal */\nexport const TRANSFORM_LENGTH = 44;\n/** @internal */\nexport const TransformSchema = {\n    serialize(value, builder) {\n        const ptr = builder.incrementWriteOffset(TRANSFORM_LENGTH);\n        builder.setFloat32(ptr, value.position.x);\n        builder.setFloat32(ptr + 4, value.position.y);\n        builder.setFloat32(ptr + 8, value.position.z);\n        builder.setFloat32(ptr + 12, value.rotation.x);\n        builder.setFloat32(ptr + 16, value.rotation.y);\n        builder.setFloat32(ptr + 20, value.rotation.z);\n        builder.setFloat32(ptr + 24, value.rotation.w);\n        builder.setFloat32(ptr + 28, value.scale.x);\n        builder.setFloat32(ptr + 32, value.scale.y);\n        builder.setFloat32(ptr + 36, value.scale.z);\n        builder.setUint32(ptr + 40, value.parent || 0);\n    },\n    deserialize(reader) {\n        const ptr = reader.incrementReadOffset(TRANSFORM_LENGTH);\n        return {\n            position: {\n                x: reader.getFloat32(ptr),\n                y: reader.getFloat32(ptr + 4),\n                z: reader.getFloat32(ptr + 8)\n            },\n            rotation: {\n                x: reader.getFloat32(ptr + 12),\n                y: reader.getFloat32(ptr + 16),\n                z: reader.getFloat32(ptr + 20),\n                w: reader.getFloat32(ptr + 24)\n            },\n            scale: {\n                x: reader.getFloat32(ptr + 28),\n                y: reader.getFloat32(ptr + 32),\n                z: reader.getFloat32(ptr + 36)\n            },\n            parent: reader.getUint32(ptr + 40)\n        };\n    },\n    create() {\n        return {\n            position: { x: 0, y: 0, z: 0 },\n            scale: { x: 1, y: 1, z: 1 },\n            rotation: { x: 0, y: 0, z: 0, w: 1 },\n            parent: 0\n        };\n    },\n    extend(value) {\n        return {\n            position: { x: 0, y: 0, z: 0 },\n            scale: { x: 1, y: 1, z: 1 },\n            rotation: { x: 0, y: 0, z: 0, w: 1 },\n            parent: 0,\n            ...value\n        };\n    },\n    jsonSchema: {\n        type: 'object',\n        properties: {\n            position: {\n                type: 'object',\n                properties: {\n                    x: { type: 'number' },\n                    y: { type: 'number' },\n                    z: { type: 'number' }\n                }\n            },\n            scale: {\n                type: 'object',\n                properties: {\n                    x: { type: 'number' },\n                    y: { type: 'number' },\n                    z: { type: 'number' }\n                }\n            },\n            rotation: {\n                type: 'object',\n                properties: {\n                    x: { type: 'number' },\n                    y: { type: 'number' },\n                    z: { type: 'number' },\n                    w: { type: 'number' }\n                }\n            },\n            parent: { type: 'integer' }\n        },\n        serializationType: 'transform'\n    }\n};\nexport function defineTransformComponent(engine) {\n    const transformDef = engine.defineComponentFromSchema('core::Transform', TransformSchema);\n    return {\n        ...transformDef,\n        create(entity, val) {\n            return transformDef.create(entity, TransformSchema.extend(val));\n        },\n        createOrReplace(entity, val) {\n            return transformDef.createOrReplace(entity, TransformSchema.extend(val));\n        }\n    };\n}\n", "import { defineAnimatorComponent } from './extended/Animator';\nimport { defineMaterialComponent } from './extended/Material';\nimport { defineMeshColliderComponent } from './extended/MeshCollider';\nimport { defineMeshRendererComponent } from './extended/MeshRenderer';\nimport defineNameComponent from './manual/Name';\nimport { defineTransformComponent } from './manual/Transform';\nexport * from './generated/index.gen';\n/* @__PURE__ */\nexport const Transform = (engine) => defineTransformComponent(engine);\n/* @__PURE__ */\nexport const Material = (engine) => defineMaterialComponent(engine);\n/* @__PURE__ */\nexport const Animator = (engine) => defineAnimatorComponent(engine);\n/* @__PURE__ */\nexport const MeshRenderer = (engine) => defineMeshRendererComponent(engine);\n/* @__PURE__ */\nexport const MeshCollider = (engine) => defineMeshColliderComponent(engine);\n/**\n * @alpha\n */\n/* @__PURE__ */\nexport const Name = (engine) => defineNameComponent(engine);\n", "/**\n * Autogenerated mapping of core components to their component numbers\n */\nexport const coreComponentMappings = {\n    \"core::Transform\": 1,\n    \"core::Animator\": 1042,\n    \"core::AudioSource\": 1020,\n    \"core::AudioStream\": 1021,\n    \"core::AvatarAttach\": 1073,\n    \"core::AvatarModifierArea\": 1070,\n    \"core::AvatarShape\": 1080,\n    \"core::Billboard\": 1090,\n    \"core::CameraMode\": 1072,\n    \"core::CameraModeArea\": 1071,\n    \"core::EngineInfo\": 1048,\n    \"core::GltfContainer\": 1041,\n    \"core::GltfContainerLoadingState\": 1049,\n    \"core::Material\": 1017,\n    \"core::MeshCollider\": 1019,\n    \"core::MeshRenderer\": 1018,\n    \"core::NftShape\": 1040,\n    \"core::PointerEvents\": 1062,\n    \"core::PointerEventsResult\": 1063,\n    \"core::PointerLock\": 1074,\n    \"core::Raycast\": 1067,\n    \"core::RaycastResult\": 1068,\n    \"core::TextShape\": 1030,\n    \"core::UiBackground\": 1053,\n    \"core::UiCanvasInformation\": 1054,\n    \"core::UiDropdown\": 1094,\n    \"core::UiDropdownResult\": 1096,\n    \"core::UiInput\": 1093,\n    \"core::UiInputResult\": 1095,\n    \"core::UiText\": 1052,\n    \"core::UiTransform\": 1050,\n    \"core::VideoEvent\": 1044,\n    \"core::VideoPlayer\": 1043,\n    \"core::VisibilityComponent\": 1081\n};\n", "import { coreComponentMappings } from './generated/component-names.gen';\nimport * as utf8 from '@protobufjs/utf8';\nimport { unsignedCRC32 } from '../runtime/crc';\n// Max possible pre-defined (static) component.\nexport const MAX_STATIC_COMPONENT = 1 << 11; // 2048\n/**\n * All components that are not part of the coreComponentMappings MUST yield\n * a componentNumber (componentId) greather than MAX_STATIC_COMPONENT.\n * For that reason, we simply add MAX_STATIC_COMPONENT and trim to the domain 2^32\n */\nexport function componentNumberFromName(componentName) {\n    if (coreComponentMappings[componentName])\n        return coreComponentMappings[componentName];\n    const bytes = new Uint8Array(128);\n    utf8.write(componentName, bytes, 0);\n    return ((unsignedCRC32(bytes) + MAX_STATIC_COMPONENT) & 4294967295) >>> 0;\n}\n", "const CRC_TABLE = new Int32Array([\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832,\n    0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n    0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a,\n    0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n    0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,\n    0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n    0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab,\n    0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4,\n    0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n    0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074,\n    0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n    0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525,\n    0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n    0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,\n    0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76,\n    0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n    0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6,\n    0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n    0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7,\n    0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n    0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7,\n    0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,\n    0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n    0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330,\n    0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n    0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n]);\nfunction _crc32(buf, previous) {\n    let crc = ~~previous ^ -1;\n    for (let n = 0; n < buf.length; n++) {\n        crc = CRC_TABLE[(crc ^ buf[n]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n}\nexport function unsignedCRC32(data, prev = 0) {\n    return _crc32(data, prev) >>> 0;\n}\n", "/* istanbul ignore file */\nexport const __DEV__ = (typeof DEBUG === 'boolean' && DEBUG) ||\n    (typeof process === 'object' &&\n        (process.env?.NODE_ENV !== 'production' || process.env?.NODE_ENV === 'development')) ||\n    false;\nexport function checkNotThenable(t, error) {\n    if (__DEV__) {\n        if (t && typeof t === 'object' && typeof t.then === 'function') {\n            throw new Error(error);\n        }\n    }\n    return t;\n}\n", "/**\n *\n * @returns a new GSet\n */\nexport function createVersionGSet() {\n    const lastVersion = new Map();\n    return {\n        /**\n         *\n         * @param number\n         * @param version\n         * @returns\n         */\n        addTo(number, version) {\n            /* istanbul ignore next */\n            if (version < 0) {\n                /* istanbul ignore next */\n                return false;\n            }\n            const currentValue = lastVersion.get(number);\n            // If the version is >=, it means the value it's already in the set\n            if (currentValue !== undefined && currentValue >= version) {\n                return true;\n            }\n            lastVersion.set(number, version);\n            return true;\n        },\n        /**\n         * @returns the set with [number, version] of each value\n         */\n        has(n, v) {\n            const currentValue = lastVersion.get(n);\n            // If the version is >=, it means the value it's already in the set\n            if (currentValue !== undefined && currentValue >= v) {\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Warning: this function returns the reference to the internal map,\n         *  if you need to mutate some value, make a copy.\n         * For optimization purpose the copy isn't made here.\n         *\n         * @returns the map of number to version\n         */\n        getMap() {\n            return lastVersion;\n        }\n    };\n}\n", "import { createVersionGSet } from '../systems/crdt/gset';\n/**\n * @internal\n */\nexport const MAX_U16 = 0xffff;\nconst MASK_UPPER_16_ON_32 = 0xffff0000;\n/**\n * @internal\n */\nexport const AMOUNT_VERSION_AVAILABLE = MAX_U16 + 1;\n// This type matches with @dcl/crdt entity type.\n/**\n * @internal\n * This first 512 entities are reserved by the renderer\n */\nexport const RESERVED_STATIC_ENTITIES = 512;\n/**\n * @internal\n */\nexport const MAX_ENTITY_NUMBER = MAX_U16;\n/**\n * @internal\n */\nexport var EntityUtils;\n(function (EntityUtils) {\n    /**\n     * @returns [entityNumber, entityVersion]\n     */\n    function fromEntityId(entityId) {\n        return [(entityId & MAX_U16) >>> 0, (((entityId & MASK_UPPER_16_ON_32) >> 16) & MAX_U16) >>> 0];\n    }\n    EntityUtils.fromEntityId = fromEntityId;\n    /**\n     * @returns compound number from entityNumber and entityVerison\n     */\n    function toEntityId(entityNumber, entityVersion) {\n        return (((entityNumber & MAX_U16) | ((entityVersion & MAX_U16) << 16)) >>> 0);\n    }\n    EntityUtils.toEntityId = toEntityId;\n})(EntityUtils || (EntityUtils = {}));\n/**\n * @public\n */\nexport var EntityState;\n(function (EntityState) {\n    EntityState[EntityState[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * The entity was generated and added to the usedEntities set\n     */\n    EntityState[EntityState[\"UsedEntity\"] = 1] = \"UsedEntity\";\n    /**\n     * The entity was removed from current engine or remotely\n     */\n    EntityState[EntityState[\"Removed\"] = 2] = \"Removed\";\n    /**\n     * The entity is reserved number.\n     */\n    EntityState[EntityState[\"Reserved\"] = 3] = \"Reserved\";\n})(EntityState || (EntityState = {}));\n/**\n * @internal\n */\nexport function EntityContainer() {\n    let entityCounter = RESERVED_STATIC_ENTITIES;\n    const usedEntities = new Set();\n    let toRemoveEntities = [];\n    const removedEntities = createVersionGSet();\n    function generateNewEntity() {\n        if (entityCounter > MAX_ENTITY_NUMBER - 1) {\n            throw new Error(`It fails trying to generate an entity out of range ${MAX_ENTITY_NUMBER}.`);\n        }\n        const entityNumber = entityCounter++;\n        const entityVersion = removedEntities.getMap().has(entityNumber)\n            ? removedEntities.getMap().get(entityNumber) + 1\n            : 0;\n        const entity = EntityUtils.toEntityId(entityNumber, entityVersion);\n        if (usedEntities.has(entity)) {\n            return generateNewEntity();\n        }\n        usedEntities.add(entity);\n        return entity;\n    }\n    function generateEntity() {\n        // If all entities until `entityCounter` are being used, we need to generate another one\n        if (usedEntities.size + RESERVED_STATIC_ENTITIES >= entityCounter) {\n            return generateNewEntity();\n        }\n        for (const [number, version] of removedEntities.getMap()) {\n            if (version < MAX_U16) {\n                const entity = EntityUtils.toEntityId(number, version + 1);\n                // If the entity is not being used, we can re-use it\n                // If the entity was removed in this tick, we're not counting for the usedEntities, but we have it in the toRemoveEntityArray\n                if (!usedEntities.has(entity) && !toRemoveEntities.includes(entity)) {\n                    usedEntities.add(entity);\n                    return entity;\n                }\n            }\n        }\n        return generateNewEntity();\n    }\n    function removeEntity(entity) {\n        if (entity < RESERVED_STATIC_ENTITIES)\n            return false;\n        if (usedEntities.has(entity)) {\n            usedEntities.delete(entity);\n            toRemoveEntities.push(entity);\n        }\n        else {\n            updateRemovedEntity(entity);\n        }\n        return true;\n    }\n    function releaseRemovedEntities() {\n        const arr = toRemoveEntities;\n        if (arr.length) {\n            toRemoveEntities = [];\n            for (const entity of arr) {\n                const [n, v] = EntityUtils.fromEntityId(entity);\n                removedEntities.addTo(n, v);\n            }\n        }\n        return arr;\n    }\n    function updateRemovedEntity(entity) {\n        const [n, v] = EntityUtils.fromEntityId(entity);\n        // Update the removed entities map\n        removedEntities.addTo(n, v);\n        // Remove the usedEntities if exist\n        for (let i = 0; i <= v; i++) {\n            usedEntities.delete(EntityUtils.toEntityId(n, i));\n        }\n        return true;\n    }\n    function updateUsedEntity(entity) {\n        const [n, v] = EntityUtils.fromEntityId(entity);\n        // if the entity was removed then abort fast\n        if (removedEntities.has(n, v))\n            return false;\n        // Update\n        if (v > 0) {\n            for (let i = 0; i <= v - 1; i++) {\n                usedEntities.delete(EntityUtils.toEntityId(n, i));\n            }\n            removedEntities.addTo(n, v - 1);\n        }\n        usedEntities.add(entity);\n        return true;\n    }\n    function getEntityState(entity) {\n        const [n, v] = EntityUtils.fromEntityId(entity);\n        if (n < RESERVED_STATIC_ENTITIES) {\n            return EntityState.Reserved;\n        }\n        if (usedEntities.has(entity)) {\n            return EntityState.UsedEntity;\n        }\n        const removedVersion = removedEntities.getMap().get(n);\n        if (removedVersion !== undefined && removedVersion >= v) {\n            return EntityState.Removed;\n        }\n        return EntityState.Unknown;\n    }\n    return {\n        generateEntity,\n        removeEntity,\n        getExistingEntities() {\n            return new Set(usedEntities);\n        },\n        getEntityState,\n        releaseRemovedEntities,\n        updateRemovedEntity,\n        updateUsedEntity\n    };\n}\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ReadWriteByteBuffer_instances, _ReadWriteByteBuffer_woAdd, _ReadWriteByteBuffer_roAdd;\nimport * as utf8 from '@protobufjs/utf8';\n/**\n * Take the max between currentSize and intendedSize and then plus 1024. Then,\n *  find the next nearer multiple of 1024.\n * @param currentSize - number\n * @param intendedSize - number\n * @returns the calculated number\n */\nfunction getNextSize(currentSize, intendedSize) {\n    const minNewSize = Math.max(currentSize, intendedSize) + 1024;\n    return Math.ceil(minNewSize / 1024) * 1024;\n}\nconst defaultInitialCapacity = 10240;\n/**\n * ByteBuffer is a wrapper of DataView which also adds a read and write offset.\n *  Also in a write operation it resizes the buffer is being used if it needs.\n *\n * - Use read and write function to generate or consume data.\n * - Use set and get only if you are sure that you're doing.\n *\n * It always passes littleEndian param as true\n */\nexport class ReadWriteByteBuffer {\n    /**\n     * @param buffer - The initial buffer, provide a buffer if you need to set \"initial capacity\"\n     * @param readingOffset - Set the cursor where begins to read. Default 0\n     * @param writingOffset - Set the cursor to not start writing from the begin of it. Defaults to the buffer size\n     */\n    constructor(buffer, readingOffset, writingOffset) {\n        _ReadWriteByteBuffer_instances.add(this);\n        this._buffer = buffer || new Uint8Array(defaultInitialCapacity);\n        this.view = new DataView(this._buffer.buffer, this._buffer.byteOffset);\n        this.woffset = writingOffset ?? (buffer ? this._buffer.length : null) ?? 0;\n        this.roffset = readingOffset ?? 0;\n    }\n    buffer() {\n        return this._buffer;\n    }\n    bufferLength() {\n        return this._buffer.length;\n    }\n    resetBuffer() {\n        this.roffset = 0;\n        this.woffset = 0;\n    }\n    currentReadOffset() {\n        return this.roffset;\n    }\n    currentWriteOffset() {\n        return this.woffset;\n    }\n    incrementReadOffset(amount) {\n        return __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, amount);\n    }\n    remainingBytes() {\n        return this.woffset - this.roffset;\n    }\n    readFloat32() {\n        return this.view.getFloat32(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 4), true); // littleEndian = true\n    }\n    readFloat64() {\n        return this.view.getFloat64(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 8), true); // littleEndian = true\n    }\n    readInt8() {\n        return this.view.getInt8(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 1));\n    }\n    readInt16() {\n        return this.view.getInt16(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 2), true); // littleEndian = true\n    }\n    readInt32() {\n        return this.view.getInt32(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 4), true); // littleEndian = true\n    }\n    readInt64() {\n        return this.view.getBigInt64(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 8), true); // littleEndian = true\n    }\n    readUint8() {\n        return this.view.getUint8(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 1));\n    }\n    readUint16() {\n        return this.view.getUint16(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 2), true); // littleEndian = true\n    }\n    readUint32() {\n        return this.view.getUint32(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 4), true); // littleEndian = true\n    }\n    readUint64() {\n        return this.view.getBigUint64(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 8), true); // littleEndian = true\n    }\n    readBuffer() {\n        const length = this.view.getUint32(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 4), true); // littleEndian = true\n        return this._buffer.subarray(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, length), __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 0));\n    }\n    readUtf8String() {\n        const length = this.view.getUint32(__classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 4), true); // littleEndian = true\n        return utf8.read(this._buffer, __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, length), __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_roAdd).call(this, 0));\n    }\n    incrementWriteOffset(amount) {\n        return __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, amount);\n    }\n    toBinary() {\n        return this._buffer.subarray(0, this.woffset);\n    }\n    toCopiedBinary() {\n        return new Uint8Array(this.toBinary());\n    }\n    writeBuffer(value, writeLength = true) {\n        if (writeLength) {\n            this.writeUint32(value.byteLength);\n        }\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, value.byteLength);\n        this._buffer.set(value, o);\n    }\n    writeUtf8String(value, writeLength = true) {\n        const byteLength = utf8.length(value);\n        if (writeLength) {\n            this.writeUint32(byteLength);\n        }\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, byteLength);\n        utf8.write(value, this._buffer, o);\n    }\n    writeFloat32(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 4);\n        this.view.setFloat32(o, value, true); // littleEndian = true\n    }\n    writeFloat64(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 8);\n        this.view.setFloat64(o, value, true); // littleEndian = true\n    }\n    writeInt8(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 1);\n        this.view.setInt8(o, value);\n    }\n    writeInt16(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 2);\n        this.view.setInt16(o, value, true); // littleEndian = true\n    }\n    writeInt32(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 4);\n        this.view.setInt32(o, value, true); // littleEndian = true\n    }\n    writeInt64(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 8);\n        this.view.setBigInt64(o, value, true); // littleEndian = true\n    }\n    writeUint8(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 1);\n        this.view.setUint8(o, value);\n    }\n    writeUint16(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 2);\n        this.view.setUint16(o, value, true); // littleEndian = true\n    }\n    writeUint32(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 4);\n        this.view.setUint32(o, value, true); // littleEndian = true\n    }\n    writeUint64(value) {\n        const o = __classPrivateFieldGet(this, _ReadWriteByteBuffer_instances, \"m\", _ReadWriteByteBuffer_woAdd).call(this, 8);\n        this.view.setBigUint64(o, value, true); // littleEndian = true\n    }\n    // DataView Proxy\n    getFloat32(offset) {\n        return this.view.getFloat32(offset, true); // littleEndian = true\n    }\n    getFloat64(offset) {\n        return this.view.getFloat64(offset, true); // littleEndian = true\n    }\n    getInt8(offset) {\n        return this.view.getInt8(offset);\n    }\n    getInt16(offset) {\n        return this.view.getInt16(offset, true); // littleEndian = true\n    }\n    getInt32(offset) {\n        return this.view.getInt32(offset, true); // littleEndian = true\n    }\n    getInt64(offset) {\n        return this.view.getBigInt64(offset, true); // littleEndian = true\n    }\n    getUint8(offset) {\n        return this.view.getUint8(offset);\n    }\n    getUint16(offset) {\n        return this.view.getUint16(offset, true); // littleEndian = true\n    }\n    getUint32(offset) {\n        return this.view.getUint32(offset, true); // littleEndian = true >>> 0\n    }\n    getUint64(offset) {\n        return this.view.getBigUint64(offset, true); // littleEndian = true\n    }\n    setFloat32(offset, value) {\n        this.view.setFloat32(offset, value, true); // littleEndian = true\n    }\n    setFloat64(offset, value) {\n        this.view.setFloat64(offset, value, true); // littleEndian = true\n    }\n    setInt8(offset, value) {\n        this.view.setInt8(offset, value);\n    }\n    setInt16(offset, value) {\n        this.view.setInt16(offset, value, true); // littleEndian = true\n    }\n    setInt32(offset, value) {\n        this.view.setInt32(offset, value, true); // littleEndian = true\n    }\n    setInt64(offset, value) {\n        this.view.setBigInt64(offset, value, true); // littleEndian = true\n    }\n    setUint8(offset, value) {\n        this.view.setUint8(offset, value);\n    }\n    setUint16(offset, value) {\n        this.view.setUint16(offset, value, true); // littleEndian = true\n    }\n    setUint32(offset, value) {\n        this.view.setUint32(offset, value, true); // littleEndian = true\n    }\n    setUint64(offset, value) {\n        this.view.setBigUint64(offset, value, true); // littleEndian = true\n    }\n}\n_ReadWriteByteBuffer_instances = new WeakSet(), _ReadWriteByteBuffer_woAdd = function _ReadWriteByteBuffer_woAdd(amount) {\n    if (this.woffset + amount > this._buffer.byteLength) {\n        const newsize = getNextSize(this._buffer.byteLength, this.woffset + amount);\n        const newBuffer = new Uint8Array(newsize);\n        newBuffer.set(this._buffer);\n        const oldOffset = this._buffer.byteOffset;\n        this._buffer = newBuffer;\n        this.view = new DataView(this._buffer.buffer, oldOffset);\n    }\n    this.woffset += amount;\n    return this.woffset - amount;\n}, _ReadWriteByteBuffer_roAdd = function _ReadWriteByteBuffer_roAdd(amount) {\n    if (this.roffset + amount > this.woffset) {\n        throw new Error('Outside of the bounds of writen data.');\n    }\n    this.roffset += amount;\n    return this.roffset - amount;\n};\n", "/**\n * @public\n */\nexport var CrdtMessageType;\n(function (CrdtMessageType) {\n    CrdtMessageType[CrdtMessageType[\"RESERVED\"] = 0] = \"RESERVED\";\n    // Component Operation\n    CrdtMessageType[CrdtMessageType[\"PUT_COMPONENT\"] = 1] = \"PUT_COMPONENT\";\n    CrdtMessageType[CrdtMessageType[\"DELETE_COMPONENT\"] = 2] = \"DELETE_COMPONENT\";\n    CrdtMessageType[CrdtMessageType[\"DELETE_ENTITY\"] = 3] = \"DELETE_ENTITY\";\n    CrdtMessageType[CrdtMessageType[\"APPEND_VALUE\"] = 4] = \"APPEND_VALUE\";\n    CrdtMessageType[CrdtMessageType[\"MAX_MESSAGE_TYPE\"] = 5] = \"MAX_MESSAGE_TYPE\";\n})(CrdtMessageType || (CrdtMessageType = {}));\n/**\n * @public\n */\nexport const CRDT_MESSAGE_HEADER_LENGTH = 8;\nexport var ProcessMessageResultType;\n(function (ProcessMessageResultType) {\n    /**\n     * Typical message and new state set.\n     * @state CHANGE\n     * @reason Incoming message has a timestamp greater\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"StateUpdatedTimestamp\"] = 1] = \"StateUpdatedTimestamp\";\n    /**\n     * Typical message when it is considered old.\n     * @state it does NOT CHANGE.\n     * @reason incoming message has a timestamp lower.\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"StateOutdatedTimestamp\"] = 2] = \"StateOutdatedTimestamp\";\n    /**\n     * Weird message, same timestamp and data.\n     * @state it does NOT CHANGE.\n     * @reason consistent state between peers.\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"NoChanges\"] = 3] = \"NoChanges\";\n    /**\n     * Less but typical message, same timestamp, resolution by data.\n     * @state it does NOT CHANGE.\n     * @reason incoming message has a LOWER data.\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"StateOutdatedData\"] = 4] = \"StateOutdatedData\";\n    /**\n     * Less but typical message, same timestamp, resolution by data.\n     * @state CHANGE.\n     * @reason incoming message has a GREATER data.\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"StateUpdatedData\"] = 5] = \"StateUpdatedData\";\n    /**\n     * Entity was previously deleted.\n     * @state it does NOT CHANGE.\n     * @reason The message is considered old.\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"EntityWasDeleted\"] = 6] = \"EntityWasDeleted\";\n    /**\n     * Entity should be deleted.\n     * @state CHANGE.\n     * @reason the state is storing old entities\n     */\n    ProcessMessageResultType[ProcessMessageResultType[\"EntityDeleted\"] = 7] = \"EntityDeleted\";\n})(ProcessMessageResultType || (ProcessMessageResultType = {}));\n// we receive LWW, v=6, we have v=5 => we receive with delay the deleteEntity(v=5)\n//   => we should generate the deleteEntity message effects internally with deleteEntity(v=5),\n//       but don't resend the deleteEntity\n//          - (CRDT) addDeletedEntitySet v=5 (with crdt state cleaning) and then LWW v=6\n//          - (engine) engine.deleteEntity v=5\n// we receive LWW, v=7, we have v=5 => we receive with delay the deleteEntity(v=5), deleteEntity(v=6), ..., N\n//   => we should generate the deleteEntity message effects internally with deleteEntity(v=5),\n//       but don't resend the deleteEntity\n//          - (CRDT) addDeletedEntitySet v=5 (with crdt state cleaning) and then LWW v=6\n//          - (engine) engine.deleteEntity v=5\n// msg delete entity: it only should be sent by deleter\n//\n", "import { CRDT_MESSAGE_HEADER_LENGTH } from './types';\n/**\n * @public\n */\nexport var CrdtMessageProtocol;\n(function (CrdtMessageProtocol) {\n    /**\n     * Validate if the message incoming is completed\n     * @param buf - ByteBuffer\n     */\n    function validate(buf) {\n        const rem = buf.remainingBytes();\n        if (rem < CRDT_MESSAGE_HEADER_LENGTH) {\n            return false;\n        }\n        const messageLength = buf.getUint32(buf.currentReadOffset());\n        if (rem < messageLength) {\n            return false;\n        }\n        return true;\n    }\n    CrdtMessageProtocol.validate = validate;\n    /**\n     * Get the current header, consuming the bytes involved.\n     * @param buf - ByteBuffer\n     * @returns header or null if there is no validated message\n     */\n    function readHeader(buf) {\n        if (!validate(buf)) {\n            return null;\n        }\n        return {\n            length: buf.readUint32(),\n            type: buf.readUint32()\n        };\n    }\n    CrdtMessageProtocol.readHeader = readHeader;\n    /**\n     * Get the current header, without consuming the bytes involved.\n     * @param buf - ByteBuffer\n     * @returns header or null if there is no validated message\n     */\n    function getHeader(buf) {\n        if (!validate(buf)) {\n            return null;\n        }\n        const currentOffset = buf.currentReadOffset();\n        return {\n            length: buf.getUint32(currentOffset),\n            type: buf.getUint32(currentOffset + 4)\n        };\n    }\n    CrdtMessageProtocol.getHeader = getHeader;\n    /**\n     * Consume the incoming message without processing it.\n     * @param buf - ByteBuffer\n     * @returns true in case of success or false if there is no valid message.\n     */\n    function consumeMessage(buf) {\n        const header = getHeader(buf);\n        if (!header) {\n            return false;\n        }\n        buf.incrementReadOffset(header.length);\n        return true;\n    }\n    CrdtMessageProtocol.consumeMessage = consumeMessage;\n})(CrdtMessageProtocol || (CrdtMessageProtocol = {}));\n", "import { CrdtMessageProtocol } from './crdtMessageProtocol';\nimport { CrdtMessageType, CRDT_MESSAGE_HEADER_LENGTH } from './types';\n/**\n * @public\n */\nexport var DeleteComponent;\n(function (DeleteComponent) {\n    DeleteComponent.MESSAGE_HEADER_LENGTH = 12;\n    /**\n     * Write DeleteComponent message\n     */\n    function write(entity, componentId, timestamp, buf) {\n        // reserve the beginning\n        const messageLength = CRDT_MESSAGE_HEADER_LENGTH + DeleteComponent.MESSAGE_HEADER_LENGTH;\n        const startMessageOffset = buf.incrementWriteOffset(messageLength);\n        // Write CrdtMessage header\n        buf.setUint32(startMessageOffset, messageLength);\n        buf.setUint32(startMessageOffset + 4, CrdtMessageType.DELETE_COMPONENT);\n        // Write ComponentOperation header\n        buf.setUint32(startMessageOffset + 8, entity);\n        buf.setUint32(startMessageOffset + 12, componentId);\n        buf.setUint32(startMessageOffset + 16, timestamp);\n    }\n    DeleteComponent.write = write;\n    function read(buf) {\n        const header = CrdtMessageProtocol.readHeader(buf);\n        if (!header) {\n            return null;\n        }\n        if (header.type !== CrdtMessageType.DELETE_COMPONENT) {\n            throw new Error('DeleteComponentOperation tried to read another message type.');\n        }\n        const msg = {\n            ...header,\n            entityId: buf.readUint32(),\n            componentId: buf.readUint32(),\n            timestamp: buf.readUint32()\n        };\n        return msg;\n    }\n    DeleteComponent.read = read;\n})(DeleteComponent || (DeleteComponent = {}));\n", "import { CrdtMessageProtocol } from './crdtMessageProtocol';\nimport { CrdtMessageType, CRDT_MESSAGE_HEADER_LENGTH } from './types';\n/**\n * @public\n */\nexport var AppendValueOperation;\n(function (AppendValueOperation) {\n    AppendValueOperation.MESSAGE_HEADER_LENGTH = 16;\n    /**\n     * Call this function for an optimal writing data passing the ByteBuffer\n     *  already allocated\n     */\n    function write(entity, timestamp, componentId, data, buf) {\n        // reserve the beginning\n        const startMessageOffset = buf.incrementWriteOffset(CRDT_MESSAGE_HEADER_LENGTH + AppendValueOperation.MESSAGE_HEADER_LENGTH);\n        // write body\n        buf.writeBuffer(data, false);\n        const messageLength = buf.currentWriteOffset() - startMessageOffset;\n        // Write CrdtMessage header\n        buf.setUint32(startMessageOffset, messageLength);\n        buf.setUint32(startMessageOffset + 4, CrdtMessageType.APPEND_VALUE);\n        // Write ComponentOperation header\n        buf.setUint32(startMessageOffset + 8, entity);\n        buf.setUint32(startMessageOffset + 12, componentId);\n        buf.setUint32(startMessageOffset + 16, timestamp);\n        const newLocal = messageLength - AppendValueOperation.MESSAGE_HEADER_LENGTH - CRDT_MESSAGE_HEADER_LENGTH;\n        buf.setUint32(startMessageOffset + 20, newLocal);\n    }\n    AppendValueOperation.write = write;\n    function read(buf) {\n        const header = CrdtMessageProtocol.readHeader(buf);\n        /* istanbul ignore if */\n        if (!header) {\n            return null;\n        }\n        /* istanbul ignore if */\n        if (header.type !== CrdtMessageType.APPEND_VALUE) {\n            throw new Error('AppendValueOperation tried to read another message type.');\n        }\n        return {\n            ...header,\n            entityId: buf.readUint32(),\n            componentId: buf.readUint32(),\n            timestamp: buf.readUint32(),\n            data: buf.readBuffer()\n        };\n    }\n    AppendValueOperation.read = read;\n})(AppendValueOperation || (AppendValueOperation = {}));\n", "import { CrdtMessageProtocol } from './crdtMessageProtocol';\nimport { CrdtMessageType, CRDT_MESSAGE_HEADER_LENGTH } from './types';\n/**\n * @public\n */\nexport var DeleteEntity;\n(function (DeleteEntity) {\n    DeleteEntity.MESSAGE_HEADER_LENGTH = 4;\n    function write(entity, buf) {\n        // Write CrdtMessage header\n        buf.writeUint32(CRDT_MESSAGE_HEADER_LENGTH + 4);\n        buf.writeUint32(CrdtMessageType.DELETE_ENTITY);\n        // body\n        buf.writeUint32(entity);\n    }\n    DeleteEntity.write = write;\n    function read(buf) {\n        const header = CrdtMessageProtocol.readHeader(buf);\n        if (!header) {\n            return null;\n        }\n        if (header.type !== CrdtMessageType.DELETE_ENTITY) {\n            throw new Error('DeleteEntity tried to read another message type.');\n        }\n        return {\n            ...header,\n            entityId: buf.readUint32()\n        };\n    }\n    DeleteEntity.read = read;\n})(DeleteEntity || (DeleteEntity = {}));\n", "import { CrdtMessageProtocol } from './crdtMessageProtocol';\nimport { CrdtMessageType, CRDT_MESSAGE_HEADER_LENGTH } from './types';\n/**\n * @public\n */\nexport var PutComponentOperation;\n(function (PutComponentOperation) {\n    PutComponentOperation.MESSAGE_HEADER_LENGTH = 16;\n    /**\n     * Call this function for an optimal writing data passing the ByteBuffer\n     *  already allocated\n     */\n    function write(entity, timestamp, componentId, data, buf) {\n        // reserve the beginning\n        const startMessageOffset = buf.incrementWriteOffset(CRDT_MESSAGE_HEADER_LENGTH + PutComponentOperation.MESSAGE_HEADER_LENGTH);\n        // write body\n        buf.writeBuffer(data, false);\n        const messageLength = buf.currentWriteOffset() - startMessageOffset;\n        // Write CrdtMessage header\n        buf.setUint32(startMessageOffset, messageLength);\n        buf.setUint32(startMessageOffset + 4, CrdtMessageType.PUT_COMPONENT);\n        // Write ComponentOperation header\n        buf.setUint32(startMessageOffset + 8, entity);\n        buf.setUint32(startMessageOffset + 12, componentId);\n        buf.setUint32(startMessageOffset + 16, timestamp);\n        const newLocal = messageLength - PutComponentOperation.MESSAGE_HEADER_LENGTH - CRDT_MESSAGE_HEADER_LENGTH;\n        buf.setUint32(startMessageOffset + 20, newLocal);\n    }\n    PutComponentOperation.write = write;\n    function read(buf) {\n        const header = CrdtMessageProtocol.readHeader(buf);\n        if (!header) {\n            return null;\n        }\n        if (header.type !== CrdtMessageType.PUT_COMPONENT) {\n            throw new Error('PutComponentOperation tried to read another message type.');\n        }\n        return {\n            ...header,\n            entityId: buf.readUint32(),\n            componentId: buf.readUint32(),\n            timestamp: buf.readUint32(),\n            data: buf.readBuffer()\n        };\n    }\n    PutComponentOperation.read = read;\n})(PutComponentOperation || (PutComponentOperation = {}));\n", "import { EntityState } from '../../engine/entity';\nimport { ReadWriteByteBuffer } from '../../serialization/ByteBuffer';\nimport { AppendValueOperation, CrdtMessageProtocol } from '../../serialization/crdt';\nimport { DeleteComponent } from '../../serialization/crdt/deleteComponent';\nimport { DeleteEntity } from '../../serialization/crdt/deleteEntity';\nimport { PutComponentOperation } from '../../serialization/crdt/putComponent';\nimport { CrdtMessageType } from '../../serialization/crdt/types';\n/**\n * @internal\n */\nexport function crdtSceneSystem(engine, onProcessEntityComponentChange) {\n    const transports = [];\n    // Messages that we received at transport.onMessage waiting to be processed\n    const receivedMessages = [];\n    // Messages already processed by the engine but that we need to broadcast to other transports.\n    const broadcastMessages = [];\n    // Messages receieved by a transport that were outdated. We need to correct them\n    const outdatedMessages = [];\n    /**\n     *\n     * @param transportId tranport id to identiy messages\n     * @returns a function to process received messages\n     */\n    function parseChunkMessage(transportId) {\n        /**\n         * Receives a chunk of binary messages and stores all the valid\n         * Component Operation Messages at messages queue\n         * @param chunkMessage A chunk of binary messages\n         */\n        return function parseChunkMessage(chunkMessage) {\n            const buffer = new ReadWriteByteBuffer(chunkMessage);\n            let header;\n            while ((header = CrdtMessageProtocol.getHeader(buffer))) {\n                const offset = buffer.currentReadOffset();\n                if (header.type === CrdtMessageType.DELETE_COMPONENT) {\n                    const message = DeleteComponent.read(buffer);\n                    receivedMessages.push({\n                        ...message,\n                        transportId,\n                        messageBuffer: buffer.buffer().subarray(offset, buffer.currentReadOffset())\n                    });\n                }\n                else if (header.type === CrdtMessageType.PUT_COMPONENT) {\n                    const message = PutComponentOperation.read(buffer);\n                    receivedMessages.push({\n                        ...message,\n                        transportId,\n                        messageBuffer: buffer.buffer().subarray(offset, buffer.currentReadOffset())\n                    });\n                }\n                else if (header.type === CrdtMessageType.DELETE_ENTITY) {\n                    const message = DeleteEntity.read(buffer);\n                    receivedMessages.push({\n                        ...message,\n                        transportId,\n                        messageBuffer: buffer.buffer().subarray(offset, buffer.currentReadOffset())\n                    });\n                }\n                else if (header.type === CrdtMessageType.APPEND_VALUE) {\n                    const message = AppendValueOperation.read(buffer);\n                    receivedMessages.push({\n                        ...message,\n                        transportId,\n                        messageBuffer: buffer.buffer().subarray(offset, buffer.currentReadOffset())\n                    });\n                    // Unknown message, we skip it\n                }\n                else {\n                    // consume the message\n                    buffer.incrementReadOffset(header.length);\n                }\n            }\n            // TODO: do something if buffler.len>0\n        };\n    }\n    /**\n     * Return and clear the messaes queue\n     * @returns messages recieved by the transport to process on the next tick\n     */\n    function getMessages(value) {\n        const messagesToProcess = value.splice(0, value.length);\n        return messagesToProcess;\n    }\n    /**\n     * This fn will be called on every tick.\n     * Process all the messages queue received by the transport\n     */\n    async function receiveMessages() {\n        const messagesToProcess = getMessages(receivedMessages);\n        const bufferForOutdated = new ReadWriteByteBuffer();\n        const entitiesShouldBeCleaned = [];\n        for (const msg of messagesToProcess) {\n            if (msg.type === CrdtMessageType.DELETE_ENTITY) {\n                entitiesShouldBeCleaned.push(msg.entityId);\n            }\n            else {\n                const entityState = engine.entityContainer.getEntityState(msg.entityId);\n                // Skip updates from removed entityes\n                if (entityState === EntityState.Removed)\n                    continue;\n                // Entities with unknown entities should update its entity state\n                if (entityState === EntityState.Unknown) {\n                    engine.entityContainer.updateUsedEntity(msg.entityId);\n                }\n                const component = engine.getComponentOrNull(msg.componentId);\n                /* istanbul ignore else */\n                if (component) {\n                    const [conflictMessage, value] = component.updateFromCrdt(msg);\n                    if (conflictMessage) {\n                        const offset = bufferForOutdated.currentWriteOffset();\n                        if (conflictMessage.type === CrdtMessageType.PUT_COMPONENT) {\n                            PutComponentOperation.write(msg.entityId, conflictMessage.timestamp, conflictMessage.componentId, conflictMessage.data, bufferForOutdated);\n                        }\n                        else if (conflictMessage.type === CrdtMessageType.DELETE_COMPONENT) {\n                            DeleteComponent.write(msg.entityId, component.componentId, conflictMessage.timestamp, bufferForOutdated);\n                        }\n                        outdatedMessages.push({\n                            ...msg,\n                            messageBuffer: bufferForOutdated.buffer().subarray(offset, bufferForOutdated.currentWriteOffset())\n                        });\n                    }\n                    else {\n                        // Add message to transport queue to be processed by others transports\n                        broadcastMessages.push(msg);\n                        onProcessEntityComponentChange && onProcessEntityComponentChange(msg.entityId, msg.type, component, value);\n                    }\n                }\n                else {\n                    // TODO: test this line, it is fundammental to make the editor work\n                    broadcastMessages.push(msg);\n                }\n            }\n        }\n        // the last stage of the syncrhonization is to delete the entities\n        for (const entity of entitiesShouldBeCleaned) {\n            // If we tried to resend outdated message and the entity was deleted before, we avoid sending them.\n            for (let i = outdatedMessages.length - 1; i >= 0; i--) {\n                if (outdatedMessages[i].entityId === entity && outdatedMessages[i].type !== CrdtMessageType.DELETE_ENTITY) {\n                    outdatedMessages.splice(i, 1);\n                }\n            }\n            for (const definition of engine.componentsIter()) {\n                definition.entityDeleted(entity, false);\n            }\n            engine.entityContainer.updateRemovedEntity(entity);\n            onProcessEntityComponentChange && onProcessEntityComponentChange(entity, CrdtMessageType.DELETE_ENTITY);\n        }\n    }\n    /**\n     * Iterates the dirty map and generates crdt messages to be send\n     */\n    async function sendMessages(entitiesDeletedThisTick) {\n        // CRDT Messages will be the merge between the recieved transport messages and the new crdt messages\n        const crdtMessages = getMessages(broadcastMessages);\n        const outdatedMessagesBkp = getMessages(outdatedMessages);\n        const buffer = new ReadWriteByteBuffer();\n        for (const component of engine.componentsIter()) {\n            for (const message of component.getCrdtUpdates()) {\n                const offset = buffer.currentWriteOffset();\n                // Avoid creating messages if there is no transport that will handle it\n                if (transports.some((t) => t.filter(message))) {\n                    if (message.type === CrdtMessageType.PUT_COMPONENT) {\n                        PutComponentOperation.write(message.entityId, message.timestamp, message.componentId, message.data, buffer);\n                    }\n                    else if (message.type === CrdtMessageType.DELETE_COMPONENT) {\n                        DeleteComponent.write(message.entityId, component.componentId, message.timestamp, buffer);\n                    }\n                    else if (message.type === CrdtMessageType.APPEND_VALUE) {\n                        AppendValueOperation.write(message.entityId, message.timestamp, message.componentId, message.data, buffer);\n                    }\n                    crdtMessages.push({\n                        ...message,\n                        messageBuffer: buffer.buffer().subarray(offset, buffer.currentWriteOffset())\n                    });\n                    if (onProcessEntityComponentChange) {\n                        const rawValue = message.type === CrdtMessageType.PUT_COMPONENT || message.type === CrdtMessageType.APPEND_VALUE\n                            ? component.get(message.entityId)\n                            : undefined;\n                        onProcessEntityComponentChange(message.entityId, message.type, component, rawValue);\n                    }\n                }\n            }\n        }\n        // After all updates, I execute the DeletedEntity messages\n        for (const entityId of entitiesDeletedThisTick) {\n            const offset = buffer.currentWriteOffset();\n            DeleteEntity.write(entityId, buffer);\n            crdtMessages.push({\n                type: CrdtMessageType.DELETE_ENTITY,\n                entityId,\n                messageBuffer: buffer.buffer().subarray(offset, buffer.currentWriteOffset())\n            });\n            onProcessEntityComponentChange && onProcessEntityComponentChange(entityId, CrdtMessageType.DELETE_ENTITY);\n        }\n        // Send CRDT messages to transports\n        const transportBuffer = new ReadWriteByteBuffer();\n        for (const index in transports) {\n            const transportIndex = Number(index);\n            const transport = transports[transportIndex];\n            transportBuffer.resetBuffer();\n            // First we need to send all the messages that were outdated from a transport\n            // So we can fix their crdt state\n            for (const message of outdatedMessagesBkp) {\n                if (message.transportId === transportIndex &&\n                    // TODO: This is an optimization, the state should converge anyway, whatever the message is sent.\n                    // Avoid sending multiple messages for the same entity-componentId\n                    !crdtMessages.find((m) => m.entityId === message.entityId &&\n                        // TODO: as any, with multiple type of messages, it should have many checks before the check for similar messages\n                        m.componentId &&\n                        m.componentId === message.componentId)) {\n                    transportBuffer.writeBuffer(message.messageBuffer, false);\n                }\n            }\n            // Then we send all the new crdtMessages that the transport needs to process\n            for (const message of crdtMessages) {\n                if (message.transportId !== transportIndex && transport.filter(message)) {\n                    transportBuffer.writeBuffer(message.messageBuffer, false);\n                }\n            }\n            const message = transportBuffer.currentWriteOffset() ? transportBuffer.toBinary() : new Uint8Array([]);\n            await transport.send(message);\n        }\n    }\n    /**\n     * @public\n     * Add a transport to the crdt system\n     */\n    function addTransport(transport) {\n        const id = transports.push(transport) - 1;\n        transport.onmessage = parseChunkMessage(id);\n    }\n    return {\n        sendMessages,\n        receiveMessages,\n        addTransport\n    };\n}\n", "export var CrdtUtils;\n(function (CrdtUtils) {\n    let SynchronizedEntityType;\n    (function (SynchronizedEntityType) {\n        // synchronizes entities with the NetworkSynchronized component only, used for networked games\n        SynchronizedEntityType[SynchronizedEntityType[\"NETWORKED\"] = 0] = \"NETWORKED\";\n        // synchronizes entities needed by the renderer\n        SynchronizedEntityType[SynchronizedEntityType[\"RENDERER\"] = 1] = \"RENDERER\";\n    })(SynchronizedEntityType = CrdtUtils.SynchronizedEntityType || (CrdtUtils.SynchronizedEntityType = {}));\n})(CrdtUtils || (CrdtUtils = {}));\nexport default CrdtUtils;\n/**\n * Compare raw data.\n * @public\n * @returns 0 if is the same data, 1 if a > b, -1 if b > a\n */\nexport function dataCompare(a, b) {\n    // At reference level\n    if (a === b)\n        return 0;\n    if (a === null && b !== null)\n        return -1;\n    if (a !== null && b === null)\n        return 1;\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n        const lengthDifference = a.byteLength - b.byteLength;\n        if (lengthDifference !== 0) {\n            return lengthDifference > 0 ? 1 : -1;\n        }\n        let res;\n        for (let i = 0, n = a.byteLength; i < n; i++) {\n            res = a[i] - b[i];\n            if (res !== 0) {\n                return res > 0 ? 1 : -1;\n            }\n        }\n        // the data is exactly the same\n        return 0;\n    }\n    if (typeof a === 'string') {\n        const lengthDifference = a.length - b.length;\n        if (lengthDifference !== 0) {\n            return lengthDifference > 0 ? 1 : -1;\n        }\n        return a.localeCompare(b);\n    }\n    return a > b ? 1 : -1;\n}\n", "/**\n * @internal\n */\nexport function deepReadonly(val) {\n    return Object.freeze({ ...val });\n}\n", "import { ReadWriteByteBuffer } from '../serialization/ByteBuffer';\nimport { ProcessMessageResultType, CrdtMessageType, PutComponentOperation, DeleteComponent } from '../serialization/crdt';\nimport { dataCompare } from '../systems/crdt/utils';\nimport { deepReadonly } from './readonly';\nexport function incrementTimestamp(entity, timestamps) {\n    const newTimestamp = (timestamps.get(entity) || 0) + 1;\n    timestamps.set(entity, newTimestamp);\n    return newTimestamp;\n}\nexport function createDumpLwwFunctionFromCrdt(componentId, timestamps, schema, data) {\n    return function dumpCrdtState(buffer) {\n        for (const [entity, timestamp] of timestamps) {\n            /* istanbul ignore else */\n            if (data.has(entity)) {\n                const it = data.get(entity);\n                const buf = new ReadWriteByteBuffer();\n                schema.serialize(it, buf);\n                PutComponentOperation.write(entity, timestamp, componentId, buf.toBinary(), buffer);\n            }\n            else {\n                DeleteComponent.write(entity, componentId, timestamp, buffer);\n            }\n        }\n    };\n}\nexport function createUpdateLwwFromCrdt(componentId, timestamps, schema, data) {\n    /**\n     * Process the received message only if the lamport number recieved is higher\n     * than the stored one. If its lower, we spread it to the network to correct the peer.\n     * If they are equal, the bigger raw data wins.\n  \n      * Returns the recieved data if the lamport number was bigger than ours.\n      * If it was an outdated message, then we return void\n      * @public\n      */\n    function crdtRuleForCurrentState(message) {\n        const { entityId, timestamp } = message;\n        const currentTimestamp = timestamps.get(entityId);\n        // The received message is > than our current value, update our state.components.\n        if (currentTimestamp === undefined || currentTimestamp < timestamp) {\n            return ProcessMessageResultType.StateUpdatedTimestamp;\n        }\n        // Outdated Message. Resend our state message through the wire.\n        if (currentTimestamp > timestamp) {\n            // console.log('2', currentTimestamp, timestamp)\n            return ProcessMessageResultType.StateOutdatedTimestamp;\n        }\n        // Deletes are idempotent\n        if (message.type === CrdtMessageType.DELETE_COMPONENT && !data.has(entityId)) {\n            return ProcessMessageResultType.NoChanges;\n        }\n        let currentDataGreater = 0;\n        if (data.has(entityId)) {\n            const writeBuffer = new ReadWriteByteBuffer();\n            schema.serialize(data.get(entityId), writeBuffer);\n            currentDataGreater = dataCompare(writeBuffer.toBinary(), message.data || null);\n        }\n        else {\n            currentDataGreater = dataCompare(null, message.data);\n        }\n        // Same data, same timestamp. Weirdo echo message.\n        // console.log('3', currentDataGreater, writeBuffer.toBinary(), (message as any).data || null)\n        if (currentDataGreater === 0) {\n            return ProcessMessageResultType.NoChanges;\n        }\n        else if (currentDataGreater > 0) {\n            // Current data is greater\n            return ProcessMessageResultType.StateOutdatedData;\n        }\n        else {\n            // Curent data is lower\n            return ProcessMessageResultType.StateUpdatedData;\n        }\n    }\n    return (msg) => {\n        /* istanbul ignore next */\n        if (msg.type !== CrdtMessageType.PUT_COMPONENT && msg.type !== CrdtMessageType.DELETE_COMPONENT)\n            /* istanbul ignore next */\n            return [null, data.get(msg.entityId)];\n        const action = crdtRuleForCurrentState(msg);\n        const entity = msg.entityId;\n        switch (action) {\n            case ProcessMessageResultType.StateUpdatedData:\n            case ProcessMessageResultType.StateUpdatedTimestamp: {\n                timestamps.set(entity, msg.timestamp);\n                if (msg.type === CrdtMessageType.PUT_COMPONENT) {\n                    const buf = new ReadWriteByteBuffer(msg.data);\n                    data.set(entity, schema.deserialize(buf));\n                }\n                else {\n                    data.delete(entity);\n                }\n                return [null, data.get(entity)];\n            }\n            case ProcessMessageResultType.StateOutdatedTimestamp:\n            case ProcessMessageResultType.StateOutdatedData: {\n                if (data.has(entity)) {\n                    const writeBuffer = new ReadWriteByteBuffer();\n                    schema.serialize(data.get(entity), writeBuffer);\n                    return [\n                        {\n                            type: CrdtMessageType.PUT_COMPONENT,\n                            componentId,\n                            data: writeBuffer.toBinary(),\n                            entityId: entity,\n                            timestamp: timestamps.get(entity)\n                        },\n                        data.get(entity)\n                    ];\n                }\n                else {\n                    return [\n                        {\n                            type: CrdtMessageType.DELETE_COMPONENT,\n                            componentId,\n                            entityId: entity,\n                            timestamp: timestamps.get(entity)\n                        },\n                        undefined\n                    ];\n                }\n            }\n        }\n        return [null, data.get(entity)];\n    };\n}\nexport function createGetCrdtMessagesForLww(componentId, timestamps, dirtyIterator, schema, data) {\n    return function* () {\n        for (const entity of dirtyIterator) {\n            const newTimestamp = incrementTimestamp(entity, timestamps);\n            if (data.has(entity)) {\n                const writeBuffer = new ReadWriteByteBuffer();\n                schema.serialize(data.get(entity), writeBuffer);\n                const msg = {\n                    type: CrdtMessageType.PUT_COMPONENT,\n                    componentId,\n                    entityId: entity,\n                    data: writeBuffer.toBinary(),\n                    timestamp: newTimestamp\n                };\n                yield msg;\n            }\n            else {\n                const msg = {\n                    type: CrdtMessageType.DELETE_COMPONENT,\n                    componentId,\n                    entityId: entity,\n                    timestamp: newTimestamp\n                };\n                yield msg;\n            }\n        }\n        dirtyIterator.clear();\n    };\n}\n/**\n * @internal\n */\nexport function createComponentDefinitionFromSchema(componentName, componentId, schema) {\n    const data = new Map();\n    const dirtyIterator = new Set();\n    const timestamps = new Map();\n    return {\n        get componentId() {\n            return componentId;\n        },\n        get componentName() {\n            return componentName;\n        },\n        get componentType() {\n            // a getter is used here to prevent accidental changes\n            return 0 /* ComponentType.LastWriteWinElementSet */;\n        },\n        schema,\n        has(entity) {\n            return data.has(entity);\n        },\n        deleteFrom(entity, markAsDirty = true) {\n            const component = data.get(entity);\n            if (data.delete(entity) && markAsDirty) {\n                dirtyIterator.add(entity);\n            }\n            return component || null;\n        },\n        entityDeleted(entity, markAsDirty) {\n            if (data.delete(entity) && markAsDirty) {\n                dirtyIterator.add(entity);\n            }\n        },\n        getOrNull(entity) {\n            const component = data.get(entity);\n            return component ? deepReadonly(component) : null;\n        },\n        get(entity) {\n            const component = data.get(entity);\n            if (!component) {\n                throw new Error(`[getFrom] Component ${componentName} for entity #${entity} not found`);\n            }\n            return deepReadonly(component);\n        },\n        create(entity, value) {\n            const component = data.get(entity);\n            if (component) {\n                throw new Error(`[create] Component ${componentName} for ${entity} already exists`);\n            }\n            const usedValue = value === undefined ? schema.create() : schema.extend ? schema.extend(value) : value;\n            data.set(entity, usedValue);\n            dirtyIterator.add(entity);\n            return usedValue;\n        },\n        createOrReplace(entity, value) {\n            const usedValue = value === undefined ? schema.create() : schema.extend ? schema.extend(value) : value;\n            data.set(entity, usedValue);\n            dirtyIterator.add(entity);\n            return usedValue;\n        },\n        getMutableOrNull(entity) {\n            const component = data.get(entity);\n            if (!component) {\n                return null;\n            }\n            dirtyIterator.add(entity);\n            return component;\n        },\n        getOrCreateMutable(entity, value) {\n            const component = data.get(entity);\n            if (!component) {\n                return this.create(entity, value);\n            }\n            else {\n                dirtyIterator.add(entity);\n                return component;\n            }\n        },\n        getMutable(entity) {\n            const component = this.getMutableOrNull(entity);\n            if (component === null) {\n                throw new Error(`[mutable] Component ${componentName} for ${entity} not found`);\n            }\n            return component;\n        },\n        *iterator() {\n            for (const [entity, component] of data) {\n                yield [entity, component];\n            }\n        },\n        *dirtyIterator() {\n            for (const entity of dirtyIterator) {\n                yield entity;\n            }\n        },\n        getCrdtUpdates: createGetCrdtMessagesForLww(componentId, timestamps, dirtyIterator, schema, data),\n        updateFromCrdt: createUpdateLwwFromCrdt(componentId, timestamps, schema, data),\n        dumpCrdtStateToBuffer: createDumpLwwFunctionFromCrdt(componentId, timestamps, schema, data)\n    };\n}\n", "export const SYSTEMS_REGULAR_PRIORITY = 100e3;\nexport function SystemContainer() {\n    const systems = [];\n    function sort() {\n        // TODO: systems with the same priority should always have the same stable order\n        //       add a \"counter\" to the System type to ensure that order\n        systems.sort((a, b) => b.priority - a.priority);\n    }\n    function add(fn, priority, name) {\n        const systemName = name ?? fn.name;\n        if (systems.find((item) => item.fn === fn)) {\n            throw new Error(`System ${JSON.stringify(systemName)} already added to the engine`);\n        }\n        systems.push({\n            fn,\n            priority,\n            name: systemName\n        });\n        // TODO: replace this sort by an insertion in the right place\n        sort();\n    }\n    function remove(selector) {\n        let index = -1;\n        if (typeof selector === 'string') {\n            index = systems.findIndex((item) => item.name === selector);\n        }\n        else {\n            index = systems.findIndex((item) => item.fn === selector);\n        }\n        if (index === -1) {\n            return false;\n        }\n        systems.splice(index, 1);\n        sort();\n        return true;\n    }\n    return {\n        add,\n        remove,\n        getSystems() {\n            return systems;\n        }\n    };\n}\n", "import { ReadWriteByteBuffer } from '../serialization/ByteBuffer';\nimport { AppendValueOperation, CrdtMessageType } from '../serialization/crdt';\nimport { __DEV__ } from '../runtime/invariant';\nconst emptyReadonlySet = freezeSet(new Set());\nfunction frozenError() {\n    throw new Error('The set is frozen');\n}\nfunction freezeSet(set) {\n    ;\n    set.add = frozenError;\n    set.clear = frozenError;\n    return set;\n}\nfunction sortByTimestamp(a, b) {\n    return a.timestamp > b.timestamp ? 1 : -1;\n}\n/**\n * @internal\n */\nexport function createValueSetComponentDefinitionFromSchema(componentName, componentId, schema, options) {\n    const data = new Map();\n    const dirtyIterator = new Set();\n    const queuedCommands = [];\n    // only sort the array if the latest (N) element has a timestamp <= N-1\n    function shouldSort(row) {\n        const len = row.raw.length;\n        if (len > 1 && row.raw[len - 1].timestamp <= row.raw[len - 2].timestamp) {\n            return true;\n        }\n        return false;\n    }\n    function gotUpdated(entity) {\n        const row = data.get(entity);\n        /* istanbul ignore else */\n        if (row) {\n            if (shouldSort(row)) {\n                row.raw.sort(sortByTimestamp);\n            }\n            while (row.raw.length > options.maxElements) {\n                row.raw.shift();\n            }\n            const frozenSet = freezeSet(new Set(row?.raw.map(($) => $.value)));\n            row.frozenSet = frozenSet;\n            return frozenSet;\n        }\n        else {\n            /* istanbul ignore next */\n            return emptyReadonlySet;\n        }\n    }\n    function append(entity, value) {\n        let row = data.get(entity);\n        if (!row) {\n            row = { raw: [], frozenSet: emptyReadonlySet };\n            data.set(entity, row);\n        }\n        const usedValue = schema.extend ? schema.extend(value) : value;\n        const timestamp = options.timestampFunction(usedValue);\n        if (__DEV__) {\n            // only freeze the objects in dev mode to warn the developers because\n            // it is an expensive operation\n            Object.freeze(usedValue);\n        }\n        row.raw.push({ value: usedValue, timestamp });\n        return { set: gotUpdated(entity), value: usedValue };\n    }\n    const ret = {\n        get componentId() {\n            return componentId;\n        },\n        get componentName() {\n            return componentName;\n        },\n        get componentType() {\n            // a getter is used here to prevent accidental changes\n            return 1 /* ComponentType.GrowOnlyValueSet */;\n        },\n        schema,\n        has(entity) {\n            return data.has(entity);\n        },\n        entityDeleted(entity) {\n            data.delete(entity);\n        },\n        get(entity) {\n            const values = data.get(entity);\n            if (values) {\n                return values.frozenSet;\n            }\n            else {\n                return emptyReadonlySet;\n            }\n        },\n        addValue(entity, rawValue) {\n            const { set, value } = append(entity, rawValue);\n            dirtyIterator.add(entity);\n            const buf = new ReadWriteByteBuffer();\n            schema.serialize(value, buf);\n            queuedCommands.push({\n                componentId,\n                data: buf.toBinary(),\n                entityId: entity,\n                timestamp: 0,\n                type: CrdtMessageType.APPEND_VALUE\n            });\n            return set;\n        },\n        *iterator() {\n            for (const [entity, component] of data) {\n                yield [entity, component.frozenSet];\n            }\n        },\n        *dirtyIterator() {\n            for (const entity of dirtyIterator) {\n                yield entity;\n            }\n        },\n        getCrdtUpdates() {\n            // return a copy of the commands, and then clear the local copy\n            dirtyIterator.clear();\n            return queuedCommands.splice(0, queuedCommands.length);\n        },\n        updateFromCrdt(_body) {\n            if (_body.type === CrdtMessageType.APPEND_VALUE) {\n                const buf = new ReadWriteByteBuffer(_body.data);\n                append(_body.entityId, schema.deserialize(buf));\n            }\n            return [null, undefined];\n        },\n        dumpCrdtStateToBuffer: function (buffer) {\n            for (const [entity, { raw }] of data) {\n                for (const it of raw) {\n                    const buf = new ReadWriteByteBuffer();\n                    schema.serialize(it.value, buf);\n                    AppendValueOperation.write(entity, 0, componentId, buf.toBinary(), buffer);\n                }\n            }\n        }\n    };\n    return ret;\n}\n", "import * as components from '../../components';\nfunction* genEntityTree(entity, entities) {\n    // This avoid infinite loop when there is a cyclic parenting\n    if (!entities.has(entity))\n        return;\n    entities.delete(entity);\n    for (const [_entity, value] of entities) {\n        if (value.parent === entity) {\n            yield* genEntityTree(_entity, entities);\n        }\n    }\n    yield entity;\n}\n/**\n * Get an iterator of entities that follow a tree structure for a component\n * @public\n * @param engine - the engine running the entities\n * @param entity - the root entity of the tree\n * @param component - the parenting component to filter by\n * @returns An iterator of an array as [entity, entity2, ...]\n *\n * Example:\n * ```ts\n * const TreeComponent = engine.defineComponent('custom::TreeComponent', {\n *    label: Schemas.String,\n *    parent: Schemas.Entity\n * })\n *\n * for (const entity of getComponentEntityTree(engine, entity, TreeComponent)) {\n *    // entity in the tree\n * }\n * ```\n */\nexport function getComponentEntityTree(engine, entity, component) {\n    const entities = new Map(engine.getEntitiesWith(component));\n    return genEntityTree(entity, entities);\n}\n/**\n * Remove all components of each entity in the tree made with Transform parenting\n * @param engine - the engine running the entities\n * @param firstEntity - the root entity of the tree\n * @public\n */\nexport function removeEntityWithChildren(engine, entity) {\n    const Transform = components.Transform(engine);\n    for (const _entity of getComponentEntityTree(engine, entity, Transform)) {\n        engine.removeEntity(_entity);\n    }\n}\n", "import * as components from '../components';\nconst InputCommands = [\n    0 /* InputAction.IA_POINTER */,\n    1 /* InputAction.IA_PRIMARY */,\n    2 /* InputAction.IA_SECONDARY */,\n    4 /* InputAction.IA_FORWARD */,\n    5 /* InputAction.IA_BACKWARD */,\n    6 /* InputAction.IA_RIGHT */,\n    7 /* InputAction.IA_LEFT */,\n    8 /* InputAction.IA_JUMP */,\n    9 /* InputAction.IA_WALK */,\n    10 /* InputAction.IA_ACTION_3 */,\n    11 /* InputAction.IA_ACTION_4 */,\n    12 /* InputAction.IA_ACTION_5 */,\n    13 /* InputAction.IA_ACTION_6 */\n];\nconst InputStateUpdateSystemPriority = 1 << 20;\n/**\n * @internal\n */\nexport function createInputSystem(engine) {\n    const PointerEventsResult = components.PointerEventsResult(engine);\n    const globalState = {\n        previousFrameMaxTimestamp: 0,\n        currentFrameMaxTimestamp: 0,\n        buttonState: new Map(),\n        thisFrameCommands: []\n    };\n    function findLastAction(pointerEventType, inputAction, entity) {\n        const ascendingTimestampIterator = PointerEventsResult.get(entity);\n        for (const command of Array.from(ascendingTimestampIterator).reverse()) {\n            if (command.button === inputAction && command.state === pointerEventType) {\n                return command;\n            }\n        }\n    }\n    function* findCommandsByActionDescending(inputAction, entity) {\n        const ascendingTimestampIterator = PointerEventsResult.get(entity);\n        for (const command of Array.from(ascendingTimestampIterator).reverse()) {\n            if (command.button === inputAction) {\n                yield command;\n            }\n        }\n    }\n    function buttonStateUpdateSystem() {\n        // first store the previous' frame timestamp\n        let maxTimestamp = globalState.currentFrameMaxTimestamp;\n        globalState.previousFrameMaxTimestamp = maxTimestamp;\n        if (globalState.thisFrameCommands.length) {\n            globalState.thisFrameCommands = [];\n        }\n        // then iterate over all new commands\n        for (const [, commands] of engine.getEntitiesWith(PointerEventsResult)) {\n            // TODO: adapt the gset component to have a cached \"reversed\" option by default\n            const arrayCommands = Array.from(commands);\n            for (let i = arrayCommands.length - 1; i >= 0; i--) {\n                const command = arrayCommands[i];\n                if (command.timestamp > maxTimestamp) {\n                    maxTimestamp = command.timestamp;\n                }\n                if (command.timestamp > globalState.previousFrameMaxTimestamp) {\n                    globalState.thisFrameCommands.push(command);\n                }\n                if (command.state === 0 /* PointerEventType.PET_UP */ || command.state === 1 /* PointerEventType.PET_DOWN */) {\n                    const prevCommand = globalState.buttonState.get(command.button);\n                    if (!prevCommand || command.timestamp > prevCommand.timestamp) {\n                        globalState.buttonState.set(command.button, command);\n                    }\n                    else {\n                        // since we are iterating a descending array, we can early finish the\n                        // loop\n                        break;\n                    }\n                }\n            }\n        }\n        // update current frame's max timestamp\n        globalState.currentFrameMaxTimestamp = maxTimestamp;\n    }\n    engine.addSystem(buttonStateUpdateSystem, InputStateUpdateSystemPriority, '@dcl/ecs#inputSystem');\n    function timestampIsCurrentFrame(timestamp) {\n        if (timestamp > globalState.previousFrameMaxTimestamp && timestamp <= globalState.currentFrameMaxTimestamp) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    function getClick(inputAction, entity) {\n        if (inputAction !== 3 /* InputAction.IA_ANY */) {\n            return findClick(inputAction, entity);\n        }\n        for (const input of InputCommands) {\n            const cmd = findClick(input, entity);\n            if (cmd)\n                return cmd;\n        }\n        return null;\n    }\n    function findClick(inputAction, entity) {\n        let down = null;\n        let up = null;\n        // We search the last UP & DOWN command sorted by timestamp descending\n        for (const it of findCommandsByActionDescending(inputAction, entity)) {\n            if (!up) {\n                if (it.state === 0 /* PointerEventType.PET_UP */) {\n                    up = it;\n                    continue;\n                }\n            }\n            else if (!down) {\n                if (it.state === 1 /* PointerEventType.PET_DOWN */) {\n                    down = it;\n                    break;\n                }\n            }\n        }\n        if (!up || !down)\n            return null;\n        // If the DOWN command has happen before the UP commands, it means that that a clicked has happen\n        if (down.timestamp < up.timestamp && timestampIsCurrentFrame(up.timestamp)) {\n            return { up, down };\n        }\n        return null;\n    }\n    function getInputCommandFromEntity(inputAction, pointerEventType, entity) {\n        if (inputAction !== 3 /* InputAction.IA_ANY */) {\n            return findInputCommand(inputAction, pointerEventType, entity);\n        }\n        for (const input of InputCommands) {\n            const cmd = findInputCommand(input, pointerEventType, entity);\n            if (cmd)\n                return cmd;\n        }\n        return null;\n    }\n    function getInputCommand(inputAction, pointerEventType, entity) {\n        if (entity) {\n            return getInputCommandFromEntity(inputAction, pointerEventType, entity);\n        }\n        else {\n            for (const command of globalState.thisFrameCommands) {\n                if ((command.button === inputAction || inputAction === 3 /* InputAction.IA_ANY */) &&\n                    command.state === pointerEventType) {\n                    return command;\n                }\n            }\n            return null;\n        }\n    }\n    function findInputCommand(inputAction, pointerEventType, entity) {\n        // We search the last pointer Event command sorted by timestamp\n        const command = findLastAction(pointerEventType, inputAction, entity);\n        if (!command)\n            return null;\n        if (timestampIsCurrentFrame(command.timestamp)) {\n            return command;\n        }\n        else {\n            return null;\n        }\n    }\n    // returns true if there was a DOWN (in any past frame), and then an UP in the last frame\n    function isClicked(inputAction, entity) {\n        return getClick(inputAction, entity) !== null;\n    }\n    // returns true if the provided last action was triggered in the last frame\n    function isTriggered(inputAction, pointerEventType, entity) {\n        if (entity) {\n            const command = findLastAction(pointerEventType, inputAction, entity);\n            return (command && timestampIsCurrentFrame(command.timestamp)) || false;\n        }\n        else {\n            for (const command of globalState.thisFrameCommands) {\n                if ((command.button === inputAction || inputAction === 3 /* InputAction.IA_ANY */) &&\n                    command.state === pointerEventType) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    // returns the global state of the input. This global state is updated from the system\n    function isPressed(inputAction) {\n        return globalState.buttonState.get(inputAction)?.state === 1 /* PointerEventType.PET_DOWN */;\n    }\n    return {\n        isPressed,\n        getClick,\n        getInputCommand,\n        isClicked,\n        isTriggered\n    };\n}\n", "/**\n * Component types are used to pick the wire protocol and the conflict resolution algorithm\n * @public\n */\nexport var ComponentType;\n(function (ComponentType) {\n    ComponentType[ComponentType[\"LastWriteWinElementSet\"] = 0] = \"LastWriteWinElementSet\";\n    ComponentType[ComponentType[\"GrowOnlyValueSet\"] = 1] = \"GrowOnlyValueSet\";\n})(ComponentType || (ComponentType = {}));\n", "import * as components from '../components';\nimport { componentNumberFromName } from '../components/component-number';\nimport { checkNotThenable } from '../runtime/invariant';\nimport { Schemas } from '../schemas';\nimport { crdtSceneSystem } from '../systems/crdt';\nimport { createComponentDefinitionFromSchema } from './lww-element-set-component-definition';\nimport { EntityContainer } from './entity';\nimport { SystemContainer, SYSTEMS_REGULAR_PRIORITY } from './systems';\nimport { createValueSetComponentDefinitionFromSchema } from './grow-only-value-set-component-definition';\nimport { removeEntityWithChildren as removeEntityWithChildrenEngine } from '../runtime/helpers/tree';\nexport * from './input';\nexport * from './readonly';\nexport * from './types';\nfunction preEngine() {\n    const entityContainer = EntityContainer();\n    const componentsDefinition = new Map();\n    const systems = SystemContainer();\n    let sealed = false;\n    function addSystem(fn, priority = SYSTEMS_REGULAR_PRIORITY, name) {\n        systems.add(fn, priority, name);\n    }\n    function removeSystem(selector) {\n        return systems.remove(selector);\n    }\n    function addEntity() {\n        const entity = entityContainer.generateEntity();\n        return entity;\n    }\n    function removeEntity(entity) {\n        for (const [, component] of componentsDefinition) {\n            component.entityDeleted(entity, true);\n        }\n        return entityContainer.removeEntity(entity);\n    }\n    function removeEntityWithChildren(entity) {\n        return removeEntityWithChildrenEngine({ removeEntity, defineComponentFromSchema, getEntitiesWith }, entity);\n    }\n    function registerComponentDefinition(componentName, component) {\n        /* istanbul ignore next */\n        if (sealed)\n            throw new Error('Engine is already sealed. No components can be added at this stage');\n        const componentId = componentNumberFromName(componentName);\n        const prev = componentsDefinition.get(componentId);\n        if (prev) {\n            throw new Error(`Component number ${componentId} was already registered.`);\n        }\n        /* istanbul ignore next */\n        if (component.componentName !== componentName) {\n            throw new Error(`Component name doesn't match componentDefinition.componentName ${componentName} != ${component.componentName}`);\n        }\n        /* istanbul ignore next */\n        if (component.componentId !== componentId) {\n            throw new Error(`Component number doesn't match componentDefinition.componentId ${componentId} != ${component.componentId}`);\n        }\n        componentsDefinition.set(componentId, component);\n        return component;\n    }\n    function defineComponentFromSchema(componentName, schema) {\n        const componentId = componentNumberFromName(componentName);\n        const prev = componentsDefinition.get(componentId);\n        if (prev) {\n            // TODO: assert spec === prev.spec\n            return prev;\n        }\n        /* istanbul ignore next */\n        if (sealed)\n            throw new Error('Engine is already sealed. No components can be added at this stage');\n        const newComponent = createComponentDefinitionFromSchema(componentName, componentId, schema);\n        componentsDefinition.set(componentId, newComponent);\n        return newComponent;\n    }\n    function defineValueSetComponentFromSchema(componentName, schema, options) {\n        const componentId = componentNumberFromName(componentName);\n        const prev = componentsDefinition.get(componentId);\n        if (prev) {\n            // TODO: assert spec === prev.spec\n            return prev;\n        }\n        /* istanbul ignore next */\n        if (sealed)\n            throw new Error('Engine is already sealed. No components can be added at this stage');\n        const newComponent = createValueSetComponentDefinitionFromSchema(componentName, componentId, schema, options);\n        componentsDefinition.set(componentId, newComponent);\n        return newComponent;\n    }\n    function defineComponent(componentName, mapSpec, constructorDefault) {\n        const componentId = componentNumberFromName(componentName);\n        const prev = componentsDefinition.get(componentId);\n        if (prev) {\n            // TODO: assert spec === prev.spec\n            return prev;\n        }\n        if (sealed)\n            throw new Error('Engine is already sealed. No components can be added at this stage');\n        const schemaSpec = Schemas.Map(mapSpec, constructorDefault);\n        const def = createComponentDefinitionFromSchema(componentName, componentId, schemaSpec);\n        const newComponent = {\n            ...def,\n            create(entity, val) {\n                return def.create(entity, val);\n            },\n            createOrReplace(entity, val) {\n                return def.createOrReplace(entity, val);\n            }\n        };\n        componentsDefinition.set(componentId, newComponent);\n        return newComponent;\n    }\n    function getComponent(componentIdOrName) {\n        const componentId = typeof componentIdOrName === 'number' ? componentIdOrName : componentNumberFromName(componentIdOrName);\n        const component = componentsDefinition.get(componentId);\n        if (!component) {\n            throw new Error(`Component ${componentId} not found. You need to declare the components at the beginnig of the engine declaration`);\n        }\n        return component;\n    }\n    function getComponentOrNull(componentIdOrName) {\n        const componentId = typeof componentIdOrName === 'number' ? componentIdOrName : componentNumberFromName(componentIdOrName);\n        return (componentsDefinition.get(componentId) ??\n            /* istanbul ignore next */\n            null);\n    }\n    function* getEntitiesWith(...components) {\n        for (const [entity, ...groupComp] of getComponentDefGroup(...components)) {\n            yield [entity, ...groupComp.map((c) => c.get(entity))];\n        }\n    }\n    function getEntityOrNullByName(value) {\n        const LabelComponent = components.Name({ defineComponent });\n        for (const [entity, name] of getEntitiesWith(LabelComponent)) {\n            if (name.value === value)\n                return entity;\n        }\n        return null;\n    }\n    function* getComponentDefGroup(...args) {\n        const [firstComponentDef, ...componentDefinitions] = args;\n        for (const [entity] of firstComponentDef.iterator()) {\n            let matches = true;\n            for (const componentDef of componentDefinitions) {\n                if (!componentDef.has(entity)) {\n                    matches = false;\n                    break;\n                }\n            }\n            if (matches) {\n                yield [entity, ...args];\n            }\n        }\n    }\n    function getSystems() {\n        return systems.getSystems();\n    }\n    function componentsIter() {\n        return componentsDefinition.values();\n    }\n    function removeComponentDefinition(componentIdOrName) {\n        if (sealed)\n            throw new Error('Engine is already sealed. No components can be removed at this stage');\n        const componentId = typeof componentIdOrName === 'number' ? componentIdOrName : componentNumberFromName(componentIdOrName);\n        componentsDefinition.delete(componentId);\n    }\n    components.Transform({ defineComponentFromSchema });\n    function seal() {\n        if (!sealed) {\n            sealed = true;\n        }\n    }\n    return {\n        addEntity,\n        removeEntity,\n        removeEntityWithChildren,\n        addSystem,\n        getSystems,\n        removeSystem,\n        defineComponent,\n        defineComponentFromSchema,\n        defineValueSetComponentFromSchema,\n        getEntitiesWith,\n        getComponent,\n        getComponentOrNull: getComponentOrNull,\n        getEntityOrNullByName,\n        removeComponentDefinition,\n        registerComponentDefinition,\n        entityContainer,\n        componentsIter,\n        seal\n    };\n}\n/**\n * Internal constructor of new engines, this is an internal API\n * @public\n * @deprecated Prevent manual usage prefer \"engine\" for scene development\n */\nexport function Engine(options) {\n    const partialEngine = preEngine();\n    const crdtSystem = crdtSceneSystem(partialEngine, options?.onChangeFunction || null);\n    async function update(dt) {\n        await crdtSystem.receiveMessages();\n        for (const system of partialEngine.getSystems()) {\n            const ret = system.fn(dt);\n            checkNotThenable(ret, `A system (${system.name || 'anonymous'}) returned a thenable. Systems cannot be async functions. Documentation: https://dcl.gg/sdk/sync-systems`);\n        }\n        // get the deleted entities to send the DeleteEntity CRDT commands\n        const deletedEntites = partialEngine.entityContainer.releaseRemovedEntities();\n        await crdtSystem.sendMessages(deletedEntites);\n    }\n    return {\n        addEntity: partialEngine.addEntity,\n        removeEntity: partialEngine.removeEntity,\n        removeEntityWithChildren: partialEngine.removeEntityWithChildren,\n        addSystem: partialEngine.addSystem,\n        removeSystem: partialEngine.removeSystem,\n        defineComponent: partialEngine.defineComponent,\n        defineComponentFromSchema: partialEngine.defineComponentFromSchema,\n        defineValueSetComponentFromSchema: partialEngine.defineValueSetComponentFromSchema,\n        registerComponentDefinition: partialEngine.registerComponentDefinition,\n        getEntitiesWith: partialEngine.getEntitiesWith,\n        getComponent: partialEngine.getComponent,\n        getComponentOrNull: partialEngine.getComponentOrNull,\n        removeComponentDefinition: partialEngine.removeComponentDefinition,\n        componentsIter: partialEngine.componentsIter,\n        seal: partialEngine.seal,\n        getEntityOrNullByName: partialEngine.getEntityOrNullByName,\n        update,\n        RootEntity: 0,\n        PlayerEntity: 1,\n        CameraEntity: 2,\n        getEntityState: partialEngine.entityContainer.getEntityState,\n        addTransport: crdtSystem.addTransport,\n        entityContainer: partialEngine.entityContainer\n    };\n}\n", "/**\n * @alpha * This file initialization is an alpha one. This is based on the old-ecs\n * init and it'll be changing.\n */\nimport { Engine } from '../../engine';\nimport { createTaskSystem } from '../../systems/async-task';\nimport { createPointerEventsSystem } from '../../systems/events';\nimport { createInputSystem } from './../../engine/input';\nimport { createRaycastSystem } from '../../systems/raycast';\nimport { createVideoEventsSystem } from '../../systems/videoEvents';\n/**\n * @public\n * The engine is the part of the scene that sits in the middle and manages all of the other parts.\n * It determines what entities are rendered and how players interact with them.\n * It also coordinates what functions from systems are executed and when.\n *\n * @example\n * import { engine } from '@dcl/sdk/ecs'\n * const entity = engine.addEntity()\n * engine.addSystem(someSystemFunction)\n *\n */\nexport const engine = /* @__PURE__ */ Engine();\n/**\n * @public\n * Input system manager. Check for button events\n * @example\n * inputSystem.isTriggered: Returns true if an input action ocurred since the last tick.\n * inputSystem.isPressed: Returns true if an input is currently being pressed down. It will return true on every tick until the button goes up again.\n * inputSystem.getInputCommand: Returns an object with data about the input action.\n */\nexport const inputSystem = /* @__PURE__ */ createInputSystem(engine);\n/**\n * @public\n * Register callback functions to a particular entity on input events.\n */\nexport const pointerEventsSystem = /* @__PURE__ */ createPointerEventsSystem(engine, inputSystem);\n/**\n * @public\n * Register callback functions to a particular entity on raycast results.\n */\nexport const raycastSystem = /* @__PURE__ */ createRaycastSystem(engine);\n/**\n * @alpha\n * @public\n * Register callback functions to a particular entity on video events.\n */\nexport const videoEventsSystem = /* @__PURE__ */ createVideoEventsSystem(engine);\n/**\n * @public\n * Runs an async function\n */\nexport const executeTask = /* @__PURE__ */ createTaskSystem(engine);\n", "/* eslint-disable */\nconst protobufPackageSarasa = \"decentraland.sdk.components.common\";\n/**\n * @public\n */\nexport var CameraType;\n(function (CameraType) {\n    CameraType[CameraType[\"CT_FIRST_PERSON\"] = 0] = \"CT_FIRST_PERSON\";\n    CameraType[CameraType[\"CT_THIRD_PERSON\"] = 1] = \"CT_THIRD_PERSON\";\n    /** CT_CINEMATIC - controlled by the scene */\n    CameraType[CameraType[\"CT_CINEMATIC\"] = 2] = \"CT_CINEMATIC\";\n})(CameraType || (CameraType = {}));\n", "/* eslint-disable */\nconst protobufPackageSarasa = \"decentraland.sdk.components.common\";\n/**\n * @public\n */\nexport var InputAction;\n(function (InputAction) {\n    InputAction[InputAction[\"IA_POINTER\"] = 0] = \"IA_POINTER\";\n    InputAction[InputAction[\"IA_PRIMARY\"] = 1] = \"IA_PRIMARY\";\n    InputAction[InputAction[\"IA_SECONDARY\"] = 2] = \"IA_SECONDARY\";\n    InputAction[InputAction[\"IA_ANY\"] = 3] = \"IA_ANY\";\n    InputAction[InputAction[\"IA_FORWARD\"] = 4] = \"IA_FORWARD\";\n    InputAction[InputAction[\"IA_BACKWARD\"] = 5] = \"IA_BACKWARD\";\n    InputAction[InputAction[\"IA_RIGHT\"] = 6] = \"IA_RIGHT\";\n    InputAction[InputAction[\"IA_LEFT\"] = 7] = \"IA_LEFT\";\n    InputAction[InputAction[\"IA_JUMP\"] = 8] = \"IA_JUMP\";\n    InputAction[InputAction[\"IA_WALK\"] = 9] = \"IA_WALK\";\n    InputAction[InputAction[\"IA_ACTION_3\"] = 10] = \"IA_ACTION_3\";\n    InputAction[InputAction[\"IA_ACTION_4\"] = 11] = \"IA_ACTION_4\";\n    InputAction[InputAction[\"IA_ACTION_5\"] = 12] = \"IA_ACTION_5\";\n    InputAction[InputAction[\"IA_ACTION_6\"] = 13] = \"IA_ACTION_6\";\n})(InputAction || (InputAction = {}));\n/** PointerEventType is a kind of interaction that can be detected. */\n/**\n * @public\n */\nexport var PointerEventType;\n(function (PointerEventType) {\n    PointerEventType[PointerEventType[\"PET_UP\"] = 0] = \"PET_UP\";\n    PointerEventType[PointerEventType[\"PET_DOWN\"] = 1] = \"PET_DOWN\";\n    PointerEventType[PointerEventType[\"PET_HOVER_ENTER\"] = 2] = \"PET_HOVER_ENTER\";\n    PointerEventType[PointerEventType[\"PET_HOVER_LEAVE\"] = 3] = \"PET_HOVER_LEAVE\";\n})(PointerEventType || (PointerEventType = {}));\n", "/* eslint-disable */\nconst protobufPackageSarasa = \"decentraland.sdk.components.common\";\n/**\n * @public\n */\nexport var LoadingState;\n(function (LoadingState) {\n    LoadingState[LoadingState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    LoadingState[LoadingState[\"LOADING\"] = 1] = \"LOADING\";\n    LoadingState[LoadingState[\"NOT_FOUND\"] = 2] = \"NOT_FOUND\";\n    LoadingState[LoadingState[\"FINISHED_WITH_ERROR\"] = 3] = \"FINISHED_WITH_ERROR\";\n    LoadingState[LoadingState[\"FINISHED\"] = 4] = \"FINISHED\";\n})(LoadingState || (LoadingState = {}));\n", "/* eslint-disable */\nconst protobufPackageSarasa = \"decentraland.sdk.components.common\";\n/**\n * @public\n */\nexport var TextAlignMode;\n(function (TextAlignMode) {\n    TextAlignMode[TextAlignMode[\"TAM_TOP_LEFT\"] = 0] = \"TAM_TOP_LEFT\";\n    TextAlignMode[TextAlignMode[\"TAM_TOP_CENTER\"] = 1] = \"TAM_TOP_CENTER\";\n    TextAlignMode[TextAlignMode[\"TAM_TOP_RIGHT\"] = 2] = \"TAM_TOP_RIGHT\";\n    TextAlignMode[TextAlignMode[\"TAM_MIDDLE_LEFT\"] = 3] = \"TAM_MIDDLE_LEFT\";\n    TextAlignMode[TextAlignMode[\"TAM_MIDDLE_CENTER\"] = 4] = \"TAM_MIDDLE_CENTER\";\n    TextAlignMode[TextAlignMode[\"TAM_MIDDLE_RIGHT\"] = 5] = \"TAM_MIDDLE_RIGHT\";\n    TextAlignMode[TextAlignMode[\"TAM_BOTTOM_LEFT\"] = 6] = \"TAM_BOTTOM_LEFT\";\n    TextAlignMode[TextAlignMode[\"TAM_BOTTOM_CENTER\"] = 7] = \"TAM_BOTTOM_CENTER\";\n    TextAlignMode[TextAlignMode[\"TAM_BOTTOM_RIGHT\"] = 8] = \"TAM_BOTTOM_RIGHT\";\n})(TextAlignMode || (TextAlignMode = {}));\n/**\n * @public\n */\nexport var Font;\n(function (Font) {\n    Font[Font[\"F_SANS_SERIF\"] = 0] = \"F_SANS_SERIF\";\n    Font[Font[\"F_SERIF\"] = 1] = \"F_SERIF\";\n    Font[Font[\"F_MONOSPACE\"] = 2] = \"F_MONOSPACE\";\n})(Font || (Font = {}));\n", "import { Schemas } from '../schemas';\n/**\n * @public\n * @deprecated composite is not being supported so far, please do not use this feature\n */\nexport function getCompositeRootComponent(engine) {\n    const component = engine.getComponentOrNull('composite::root');\n    if (component) {\n        return component;\n    }\n    return engine.defineComponent('composite::root', {\n        src: Schemas.String,\n        entities: Schemas.Array(Schemas.Map({\n            src: Schemas.Entity,\n            dest: Schemas.Entity\n        }))\n    });\n}\n", "const currentWorkingDir = '/';\n/**\n * The functions `normalizeStringPosix`, `dirname` and `resolve`\n * were extracted from package @browserify/path\n */\n/* istanbul ignore next */\nfunction normalizeStringPosix(path, allowAboveRoot = false) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length)\n            code = path.charCodeAt(i);\n        else if (code === 47 /*/*/)\n            break;\n        else\n            code = 47; /*/*/\n        if (code === 47 /*/*/) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 ||\n                    lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== 46 /*.*/ ||\n                    res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf('/');\n                        if (lastSlashIndex !== res.length - 1) {\n                            if (lastSlashIndex === -1) {\n                                res = '';\n                                lastSegmentLength = 0;\n                            }\n                            else {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    }\n                    else if (res.length === 2 || res.length === 1) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0)\n                        res += '/..';\n                    else\n                        res = '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0)\n                    res += '/' + path.slice(lastSlash + 1, i);\n                else\n                    res = path.slice(lastSlash + 1, i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === 46 /*.*/ && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\n/* istanbul ignore next */\nexport function resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n    let cwd;\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        let path;\n        if (i >= 0)\n            path = args[i];\n        else {\n            if (cwd === undefined)\n                cwd = currentWorkingDir;\n            path = cwd;\n        }\n        // Skip empty entries\n        if (path.length === 0) {\n            continue;\n        }\n        resolvedPath = path + '/' + resolvedPath;\n        resolvedAbsolute = path.charCodeAt(0) === 47; /*/*/\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n    if (resolvedAbsolute) {\n        if (resolvedPath.length > 0)\n            return '/' + resolvedPath;\n        else\n            return '/';\n    }\n    else if (resolvedPath.length > 0) {\n        return resolvedPath;\n    }\n    else {\n        return '.';\n    }\n}\n/* istanbul ignore next */\nexport function dirname(path) {\n    if (path.length === 0)\n        return '.';\n    let code = path.charCodeAt(0);\n    const hasRoot = code === 47; /*/*/\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n        code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            if (!matchedSlash) {\n                end = i;\n                break;\n            }\n        }\n        else {\n            // We saw the first non-path separator\n            matchedSlash = false;\n        }\n    }\n    if (end === -1)\n        return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n        return '//';\n    return path.slice(0, end);\n}\nexport function resolveComposite(path, cwd) {\n    const absolutePath = path.startsWith('.') ? resolve(cwd, path) : resolve(path);\n    return absolutePath.substring(1);\n}\n", "import { componentDefinitionByName } from '../components';\nimport { componentNumberFromName } from '../components/component-number';\nimport { Schemas } from '../schemas';\nimport { ReadWriteByteBuffer } from '../serialization/ByteBuffer';\nimport { getCompositeRootComponent } from './components';\nimport * as path from './path';\n/** @public */\n/* @__PURE__ */\nexport var EntityMappingMode;\n(function (EntityMappingMode) {\n    EntityMappingMode[EntityMappingMode[\"EMM_NONE\"] = 0] = \"EMM_NONE\";\n    EntityMappingMode[EntityMappingMode[\"EMM_NEXT_AVAILABLE\"] = 1] = \"EMM_NEXT_AVAILABLE\";\n    EntityMappingMode[EntityMappingMode[\"EMM_DIRECT_MAPPING\"] = 2] = \"EMM_DIRECT_MAPPING\";\n})(EntityMappingMode || (EntityMappingMode = {}));\n/**\n * Return the component value from composite data\n * @internal\n */\nexport function getComponentValue(componentDefinition, component) {\n    if (component.data?.$case === 'json') {\n        return component.data.json;\n    }\n    else {\n        return componentDefinition.schema.deserialize(new ReadWriteByteBuffer(component.data?.binary));\n    }\n}\n/**\n * Return the component definition from composite info\n * @internal\n */\nexport function getComponentDefinition(engine, component) {\n    const existingComponentDefinition = engine.getComponentOrNull(component.name);\n    if (!existingComponentDefinition) {\n        if (component.name.startsWith('core::')) {\n            if (component.name in componentDefinitionByName) {\n                return componentDefinitionByName[component.name](engine);\n            }\n            else {\n                throw new Error(`The core component ${component.name} was not found.`);\n            }\n        }\n        else if (component.jsonSchema) {\n            return engine.defineComponentFromSchema(component.name, Schemas.fromJson(component.jsonSchema));\n        }\n        else {\n            throw new Error(`${component.name} is not defined and there is no schema to define it.`);\n        }\n    }\n    else {\n        return existingComponentDefinition;\n    }\n}\n/**\n * Return the entity mapping or fail if there is no more\n * @internal\n */\nexport function getEntityMapping(engine, compositeEntity, mappedEntities, { entityMapping }) {\n    const existingEntity = mappedEntities.get(compositeEntity);\n    if (existingEntity) {\n        return existingEntity;\n    }\n    if (entityMapping?.type === EntityMappingMode.EMM_DIRECT_MAPPING) {\n        const entity = entityMapping.getCompositeEntity(compositeEntity);\n        mappedEntities.set(compositeEntity, entity);\n        return entity;\n    }\n    // This function in runtime can be just `engine.addEntity()`\n    const newEntity = entityMapping?.type === EntityMappingMode.EMM_NEXT_AVAILABLE\n        ? entityMapping.getNextAvailableEntity()\n        : engine.addEntity();\n    if (newEntity === null) {\n        throw new Error('There is no more entities to allocate');\n    }\n    mappedEntities.set(compositeEntity, newEntity);\n    return newEntity;\n}\n/**\n * @internal\n */\n/* @__PURE__ */\nexport function instanceComposite(engine, compositeResource, compositeProvider, options) {\n    const { rootEntity, alreadyRequestedSrc: optionalAlreadyRequestedSrc, entityMapping } = options;\n    const alreadyRequestedSrc = optionalAlreadyRequestedSrc || new Set();\n    const compositeDirectoryPath = path.dirname(path.resolve(compositeResource.src));\n    const TransformComponentNumber = componentNumberFromName('core::Transform');\n    const CompositeRootComponent = getCompositeRootComponent(engine);\n    // Key => EntityNumber from the composite\n    // Value => EntityNumber in current engine\n    const mappedEntities = new Map();\n    const getCompositeEntity = (compositeEntity) => getEntityMapping(engine, compositeEntity, mappedEntities, options);\n    // ## 1 ##\n    // First entity that I want to map, the root entity from the composite to the target entity in the engine\n    // If there is no `rootEntity` passed, we assign one from `getNextAvailableEntity`\n    const compositeRootEntity = rootEntity ?? getCompositeEntity(0);\n    if (rootEntity) {\n        mappedEntities.set(0, rootEntity);\n    }\n    // ## 2 ##\n    // If there are more composite inside this one, we instance first.\n    // => This is not only a copy, we need to instance. Otherwise, we'd be missing that branches\n    // => TODO: in the future, the instanciation is first, then the overides (to parameterize Composite, e.g. house with different wall colors)\n    const childrenComposite = compositeResource.composite.components.find((item) => item.name === CompositeRootComponent.componentName);\n    if (childrenComposite) {\n        for (const [childCompositeEntity, compositeRawData] of childrenComposite.data) {\n            const childComposite = getComponentValue(CompositeRootComponent, compositeRawData);\n            const childCompositePath = path.resolveComposite(childComposite.src, compositeDirectoryPath);\n            const childCompositeResource = compositeProvider.getCompositeOrNull(childCompositePath);\n            const targetEntity = getCompositeEntity(childCompositeEntity);\n            if (childCompositeResource) {\n                if (alreadyRequestedSrc.has(childCompositeResource.src) ||\n                    childCompositeResource.src === compositeResource.src) {\n                    throw new Error(`Composite ${compositeResource.src} has a recursive instanciation while try to instance ${childCompositeResource.src}. Previous instances: ${alreadyRequestedSrc.toString()}`);\n                }\n                instanceComposite(engine, childCompositeResource, compositeProvider, {\n                    rootEntity: targetEntity,\n                    alreadyRequestedSrc: new Set(alreadyRequestedSrc).add(childCompositeResource.src),\n                    entityMapping: entityMapping?.type === EntityMappingMode.EMM_NEXT_AVAILABLE ? entityMapping : undefined\n                });\n            }\n        }\n    }\n    // ## 3 ##\n    // Then, we copy the all rest of the components (skipping the Composite ones)\n    for (const component of compositeResource.composite.components) {\n        // We already instanced the composite\n        if (component.name === CompositeRootComponent.componentName)\n            continue;\n        // ## 3a ##\n        // We find the component definition\n        const componentDefinition = getComponentDefinition(engine, component);\n        // ## 3b ##\n        // Iterating over all the entities with this component and create the replica\n        for (const [entity, compositeComponentValue] of component.data) {\n            const componentValueDeserialized = getComponentValue(componentDefinition, compositeComponentValue);\n            const targetEntity = getCompositeEntity(entity);\n            const componentValue = componentDefinition.create(targetEntity, componentValueDeserialized);\n            // ## 3c ##\n            // All entities referenced in the composite probably has a different resolved EntityNumber\n            // We'll know with the mappedEntityes\n            if (componentDefinition.componentId === TransformComponentNumber) {\n                const transform = componentValue;\n                if (transform.parent) {\n                    transform.parent = getCompositeEntity(transform.parent);\n                }\n                else {\n                    transform.parent = getCompositeEntity(0);\n                }\n                // TODO: is it going to be necessary to remap assets? e.g. src param from AudioSource and GltfContainer\n            }\n            else {\n                Schemas.mutateNestedValues(componentDefinition.schema.jsonSchema, componentValue, (value, valueType) => {\n                    if (valueType.serializationType === 'entity') {\n                        return { changed: true, value: getCompositeEntity(value) };\n                    }\n                    else {\n                        return { changed: false };\n                    }\n                });\n            }\n        }\n    }\n    const composite = CompositeRootComponent.getMutableOrNull(compositeRootEntity) || CompositeRootComponent.create(compositeRootEntity);\n    for (const [entitySource, targetEntity] of mappedEntities) {\n        composite.entities.push({\n            src: entitySource,\n            dest: targetEntity\n        });\n    }\n    composite.src = compositeResource.src;\n    return compositeRootEntity;\n}\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nimport { Value } from \"./google/protobuf/struct.gen\";\nconst protobufPackageSarasa = \"\";\nfunction createBaseComponentData() {\n    return { data: undefined };\n}\n/**\n * @public\n */\nexport var ComponentData;\n(function (ComponentData) {\n    function encode(message, writer = _m0.Writer.create()) {\n        switch (message.data?.$case) {\n            case \"json\":\n                Value.encode(Value.wrap(message.data.json), writer.uint32(10).fork()).ldelim();\n                break;\n            case \"binary\":\n                writer.uint32(18).bytes(message.data.binary);\n                break;\n        }\n        return writer;\n    }\n    ComponentData.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseComponentData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.data = { $case: \"json\", json: Value.unwrap(Value.decode(reader, reader.uint32())) };\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.data = { $case: \"binary\", binary: reader.bytes() };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    ComponentData.decode = decode;\n    function fromJSON(object) {\n        return {\n            data: isSet(object.json)\n                ? { $case: \"json\", json: object.json }\n                : isSet(object.binary)\n                    ? { $case: \"binary\", binary: bytesFromBase64(object.binary) }\n                    : undefined,\n        };\n    }\n    ComponentData.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.data?.$case === \"json\" && (obj.json = message.data?.json);\n        message.data?.$case === \"binary\" &&\n            (obj.binary = message.data?.binary !== undefined ? base64FromBytes(message.data?.binary) : undefined);\n        return obj;\n    }\n    ComponentData.toJSON = toJSON;\n})(ComponentData || (ComponentData = {}));\nfunction createBaseCompositeComponent() {\n    return { name: \"\", jsonSchema: undefined, data: new Map() };\n}\n/**\n * @public\n */\nexport var CompositeComponent;\n(function (CompositeComponent) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.jsonSchema !== undefined) {\n            Value.encode(Value.wrap(message.jsonSchema), writer.uint32(18).fork()).ldelim();\n        }\n        (message.data).forEach((value, key) => {\n            CompositeComponent_DataEntry.encode({ key: key, value }, writer.uint32(26).fork()).ldelim();\n        });\n        return writer;\n    }\n    CompositeComponent.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompositeComponent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.name = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.jsonSchema = Value.unwrap(Value.decode(reader, reader.uint32()));\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    const entry3 = CompositeComponent_DataEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.data.set(entry3.key, entry3.value);\n                    }\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    CompositeComponent.decode = decode;\n    function fromJSON(object) {\n        return {\n            name: isSet(object.name) ? String(object.name) : \"\",\n            jsonSchema: isSet(object?.jsonSchema) ? object.jsonSchema : undefined,\n            data: isObject(object.data)\n                ? Object.entries(object.data).reduce((acc, [key, value]) => {\n                    acc.set(Number(key), ComponentData.fromJSON(value));\n                    return acc;\n                }, new Map())\n                : new Map(),\n        };\n    }\n    CompositeComponent.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.jsonSchema !== undefined && (obj.jsonSchema = message.jsonSchema);\n        obj.data = {};\n        if (message.data) {\n            message.data.forEach((v, k) => {\n                obj.data[k] = ComponentData.toJSON(v);\n            });\n        }\n        return obj;\n    }\n    CompositeComponent.toJSON = toJSON;\n})(CompositeComponent || (CompositeComponent = {}));\nfunction createBaseCompositeComponent_DataEntry() {\n    return { key: 0, value: undefined };\n}\n/**\n * @public\n */\nexport var CompositeComponent_DataEntry;\n(function (CompositeComponent_DataEntry) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).int32(message.key);\n        }\n        if (message.value !== undefined) {\n            ComponentData.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    }\n    CompositeComponent_DataEntry.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompositeComponent_DataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.key = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = ComponentData.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    CompositeComponent_DataEntry.decode = decode;\n    function fromJSON(object) {\n        return {\n            key: isSet(object.key) ? Number(object.key) : 0,\n            value: isSet(object.value) ? ComponentData.fromJSON(object.value) : undefined,\n        };\n    }\n    CompositeComponent_DataEntry.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = Math.round(message.key));\n        message.value !== undefined && (obj.value = message.value ? ComponentData.toJSON(message.value) : undefined);\n        return obj;\n    }\n    CompositeComponent_DataEntry.toJSON = toJSON;\n})(CompositeComponent_DataEntry || (CompositeComponent_DataEntry = {}));\nfunction createBaseCompositeDefinition() {\n    return { version: 0, components: [] };\n}\n/**\n * @public\n */\nexport var CompositeDefinition;\n(function (CompositeDefinition) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.version !== 0) {\n            writer.uint32(8).int32(message.version);\n        }\n        for (const v of message.components) {\n            CompositeComponent.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    }\n    CompositeDefinition.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCompositeDefinition();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.version = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.components.push(CompositeComponent.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    CompositeDefinition.decode = decode;\n    function fromJSON(object) {\n        return {\n            version: isSet(object.version) ? Number(object.version) : 0,\n            components: Array.isArray(object?.components)\n                ? object.components.map((e) => CompositeComponent.fromJSON(e))\n                : [],\n        };\n    }\n    CompositeDefinition.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = Math.round(message.version));\n        if (message.components) {\n            obj.components = message.components.map((e) => e ? CompositeComponent.toJSON(e) : undefined);\n        }\n        else {\n            obj.components = [];\n        }\n        return obj;\n    }\n    CompositeDefinition.toJSON = toJSON;\n})(CompositeDefinition || (CompositeDefinition = {}));\nvar tsProtoGlobalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n    if (tsProtoGlobalThis.Buffer) {\n        return Uint8Array.from(tsProtoGlobalThis.Buffer.from(b64, \"base64\"));\n    }\n    else {\n        const bin = tsProtoGlobalThis.atob(b64);\n        const arr = new Uint8Array(bin.length);\n        for (let i = 0; i < bin.length; ++i) {\n            arr[i] = bin.charCodeAt(i);\n        }\n        return arr;\n    }\n}\nfunction base64FromBytes(arr) {\n    if (tsProtoGlobalThis.Buffer) {\n        return tsProtoGlobalThis.Buffer.from(arr).toString(\"base64\");\n    }\n    else {\n        const bin = [];\n        arr.forEach((byte) => {\n            bin.push(String.fromCharCode(byte));\n        });\n        return tsProtoGlobalThis.btoa(bin.join(\"\"));\n    }\n}\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "/* eslint-disable */\nimport _m0 from \"protobufjs/minimal\";\nconst protobufPackageSarasa = \"google.protobuf\";\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n *  The JSON representation for `NullValue` is JSON `null`.\n */\n/**\n * @public\n */\nexport var NullValue;\n(function (NullValue) {\n    /** NULL_VALUE - Null value. */\n    NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})(NullValue || (NullValue = {}));\n/**\n * @public\n */\nexport function nullValueFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NULL_VALUE\":\n            return 0 /* NullValue.NULL_VALUE */;\n        default:\n            throw new tsProtoGlobalThis.Error(\"Unrecognized enum value \" + object + \" for enum NullValue\");\n    }\n}\n/**\n * @public\n */\nexport function nullValueToJSON(object) {\n    switch (object) {\n        case 0 /* NullValue.NULL_VALUE */:\n            return \"NULL_VALUE\";\n        default:\n            throw new tsProtoGlobalThis.Error(\"Unrecognized enum value \" + object + \" for enum NullValue\");\n    }\n}\nfunction createBaseStruct() {\n    return { fields: new Map() };\n}\n/**\n * @public\n */\nexport var Struct;\n(function (Struct) {\n    function encode(message, writer = _m0.Writer.create()) {\n        (message.fields).forEach((value, key) => {\n            if (value !== undefined) {\n                Struct_FieldsEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n            }\n        });\n        return writer;\n    }\n    Struct.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStruct();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    const entry1 = Struct_FieldsEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.fields.set(entry1.key, entry1.value);\n                    }\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Struct.decode = decode;\n    function fromJSON(object) {\n        return {\n            fields: isObject(object.fields)\n                ? Object.entries(object.fields).reduce((acc, [key, value]) => {\n                    acc.set(key, value);\n                    return acc;\n                }, new Map())\n                : new Map(),\n        };\n    }\n    Struct.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        obj.fields = {};\n        if (message.fields) {\n            message.fields.forEach((v, k) => {\n                obj.fields[k] = v;\n            });\n        }\n        return obj;\n    }\n    Struct.toJSON = toJSON;\n    function wrap(object) {\n        const struct = createBaseStruct();\n        if (object !== undefined) {\n            Object.keys(object).forEach((key) => {\n                struct.fields.set(key, object[key]);\n            });\n        }\n        return struct;\n    }\n    Struct.wrap = wrap;\n    function unwrap(message) {\n        const object = {};\n        [...message.fields.keys()].forEach((key) => {\n            object[key] = message.fields.get(key);\n        });\n        return object;\n    }\n    Struct.unwrap = unwrap;\n})(Struct || (Struct = {}));\nfunction createBaseStruct_FieldsEntry() {\n    return { key: \"\", value: undefined };\n}\n/**\n * @public\n */\nexport var Struct_FieldsEntry;\n(function (Struct_FieldsEntry) {\n    function encode(message, writer = _m0.Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            Value.encode(Value.wrap(message.value), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    }\n    Struct_FieldsEntry.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStruct_FieldsEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = Value.unwrap(Value.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Struct_FieldsEntry.decode = decode;\n    function fromJSON(object) {\n        return { key: isSet(object.key) ? String(object.key) : \"\", value: isSet(object?.value) ? object.value : undefined };\n    }\n    Struct_FieldsEntry.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    }\n    Struct_FieldsEntry.toJSON = toJSON;\n})(Struct_FieldsEntry || (Struct_FieldsEntry = {}));\nfunction createBaseValue() {\n    return { kind: undefined };\n}\n/**\n * @public\n */\nexport var Value;\n(function (Value) {\n    function encode(message, writer = _m0.Writer.create()) {\n        switch (message.kind?.$case) {\n            case \"nullValue\":\n                writer.uint32(8).int32(message.kind.nullValue);\n                break;\n            case \"numberValue\":\n                writer.uint32(17).double(message.kind.numberValue);\n                break;\n            case \"stringValue\":\n                writer.uint32(26).string(message.kind.stringValue);\n                break;\n            case \"boolValue\":\n                writer.uint32(32).bool(message.kind.boolValue);\n                break;\n            case \"structValue\":\n                Struct.encode(Struct.wrap(message.kind.structValue), writer.uint32(42).fork()).ldelim();\n                break;\n            case \"listValue\":\n                ListValue.encode(ListValue.wrap(message.kind.listValue), writer.uint32(50).fork()).ldelim();\n                break;\n        }\n        return writer;\n    }\n    Value.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.kind = { $case: \"nullValue\", nullValue: reader.int32() };\n                    continue;\n                case 2:\n                    if (tag !== 17) {\n                        break;\n                    }\n                    message.kind = { $case: \"numberValue\", numberValue: reader.double() };\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.kind = { $case: \"stringValue\", stringValue: reader.string() };\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.kind = { $case: \"boolValue\", boolValue: reader.bool() };\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.kind = { $case: \"structValue\", structValue: Struct.unwrap(Struct.decode(reader, reader.uint32())) };\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.kind = { $case: \"listValue\", listValue: ListValue.unwrap(ListValue.decode(reader, reader.uint32())) };\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    Value.decode = decode;\n    function fromJSON(object) {\n        return {\n            kind: isSet(object.nullValue)\n                ? { $case: \"nullValue\", nullValue: nullValueFromJSON(object.nullValue) }\n                : isSet(object.numberValue)\n                    ? { $case: \"numberValue\", numberValue: Number(object.numberValue) }\n                    : isSet(object.stringValue)\n                        ? { $case: \"stringValue\", stringValue: String(object.stringValue) }\n                        : isSet(object.boolValue)\n                            ? { $case: \"boolValue\", boolValue: Boolean(object.boolValue) }\n                            : isSet(object.structValue)\n                                ? { $case: \"structValue\", structValue: object.structValue }\n                                : isSet(object.listValue)\n                                    ? { $case: \"listValue\", listValue: [...object.listValue] }\n                                    : undefined,\n        };\n    }\n    Value.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        message.kind?.$case === \"nullValue\" &&\n            (obj.nullValue = message.kind?.nullValue !== undefined ? nullValueToJSON(message.kind?.nullValue) : undefined);\n        message.kind?.$case === \"numberValue\" && (obj.numberValue = message.kind?.numberValue);\n        message.kind?.$case === \"stringValue\" && (obj.stringValue = message.kind?.stringValue);\n        message.kind?.$case === \"boolValue\" && (obj.boolValue = message.kind?.boolValue);\n        message.kind?.$case === \"structValue\" && (obj.structValue = message.kind?.structValue);\n        message.kind?.$case === \"listValue\" && (obj.listValue = message.kind?.listValue);\n        return obj;\n    }\n    Value.toJSON = toJSON;\n    function wrap(value) {\n        const result = createBaseValue();\n        if (value === null) {\n            result.kind = { $case: \"nullValue\", nullValue: 0 /* NullValue.NULL_VALUE */ };\n        }\n        else if (typeof value === \"boolean\") {\n            result.kind = { $case: \"boolValue\", boolValue: value };\n        }\n        else if (typeof value === \"number\") {\n            result.kind = { $case: \"numberValue\", numberValue: value };\n        }\n        else if (typeof value === \"string\") {\n            result.kind = { $case: \"stringValue\", stringValue: value };\n        }\n        else if (Array.isArray(value)) {\n            result.kind = { $case: \"listValue\", listValue: value };\n        }\n        else if (typeof value === \"object\") {\n            result.kind = { $case: \"structValue\", structValue: value };\n        }\n        else if (typeof value !== \"undefined\") {\n            throw new Error(\"Unsupported any value type: \" + typeof value);\n        }\n        return result;\n    }\n    Value.wrap = wrap;\n    function unwrap(message) {\n        if (message.kind?.$case === \"nullValue\") {\n            return null;\n        }\n        else if (message.kind?.$case === \"numberValue\") {\n            return message.kind?.numberValue;\n        }\n        else if (message.kind?.$case === \"stringValue\") {\n            return message.kind?.stringValue;\n        }\n        else if (message.kind?.$case === \"boolValue\") {\n            return message.kind?.boolValue;\n        }\n        else if (message.kind?.$case === \"structValue\") {\n            return message.kind?.structValue;\n        }\n        else if (message.kind?.$case === \"listValue\") {\n            return message.kind?.listValue;\n        }\n        else {\n            return undefined;\n        }\n    }\n    Value.unwrap = unwrap;\n})(Value || (Value = {}));\nfunction createBaseListValue() {\n    return { values: [] };\n}\n/**\n * @public\n */\nexport var ListValue;\n(function (ListValue) {\n    function encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.values) {\n            Value.encode(Value.wrap(v), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    }\n    ListValue.encode = encode;\n    function decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseListValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.values.push(Value.unwrap(Value.decode(reader, reader.uint32())));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    }\n    ListValue.decode = decode;\n    function fromJSON(object) {\n        return { values: Array.isArray(object?.values) ? [...object.values] : [] };\n    }\n    ListValue.fromJSON = fromJSON;\n    function toJSON(message) {\n        const obj = {};\n        if (message.values) {\n            obj.values = message.values.map((e) => e);\n        }\n        else {\n            obj.values = [];\n        }\n        return obj;\n    }\n    ListValue.toJSON = toJSON;\n    function wrap(array) {\n        const result = createBaseListValue();\n        result.values = array ?? [];\n        return result;\n    }\n    ListValue.wrap = wrap;\n    function unwrap(message) {\n        if (message?.hasOwnProperty(\"values\") && Array.isArray(message.values)) {\n            return message.values;\n        }\n        else {\n            return message;\n        }\n    }\n    ListValue.unwrap = unwrap;\n})(ListValue || (ListValue = {}));\nvar tsProtoGlobalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "import { getCompositeRootComponent } from './components';\nimport { EntityMappingMode, instanceComposite } from './instance';\nimport { resolveComposite } from './path';\nimport { CompositeDefinition } from './proto/gen/composite.gen';\nexport { EntityMappingMode };\nexport { getCompositeRootComponent };\n/**\n * @public\n * @deprecated composite is not being supported so far, please do not use this feature\n */\nexport var Composite;\n(function (Composite) {\n    /** @public */\n    function fromJson(object) {\n        return CompositeDefinition.fromJSON(object);\n    }\n    Composite.fromJson = fromJson;\n    /** @public */\n    function fromBinary(buffer) {\n        return CompositeDefinition.decode(buffer);\n    }\n    Composite.fromBinary = fromBinary;\n    /** @public */\n    function toJson(composite) {\n        return CompositeDefinition.toJSON(composite);\n    }\n    Composite.toJson = toJson;\n    /** @public */\n    function toBinary(composite) {\n        return CompositeDefinition.encode(composite).finish();\n    }\n    Composite.toBinary = toBinary;\n    /**\n     * Instance a composite and returns its root entity\n     * @param compositeData - state serialized by the CRDT protocol\n     * @param getNextAvailableEntity - function that gives unused entities\n     * @param rootEntity - (optional) suggested mapped rootEntity for the composite\n     *\n     * @public\n     */\n    /*#__PURE__*/ function instance(engine, compositeData, compositeProvider, options = {}) {\n        instanceComposite(engine, compositeData, compositeProvider, options);\n    }\n    Composite.instance = instance;\n    /**\n     * Resolve and normalize a composite path\n     * @param src - the source path\n     * @param cwd - the directory from the resolve should start to resolve\n     *\n     * @returns the absolute resolved path without slash at the beginning\n     * @public\n     */\n    /*#__PURE__*/ function resolveAndNormalizePath(src, cwd = '/') {\n        return resolveComposite(src, cwd);\n    }\n    Composite.resolveAndNormalizePath = resolveAndNormalizePath;\n})(Composite || (Composite = {}));\n", "// The order of the following imports matters. Please do not auto-sort\nexport * from './engine';\nexport * from './schemas';\nexport * from './runtime/initialization';\nexport * from './runtime/types';\nexport * from './runtime/helpers';\nexport { cyclicParentingChecker } from './systems/cyclicParentingChecker';\nexport * from './systems/events';\nexport * from './systems/raycast';\nexport * from './systems/videoEvents';\nexport * from './systems/async-task';\nexport * from './engine/entity';\nexport * from './components/types';\n// @internal\nimport * as components from './components';\n// @internal\nexport { components };\nimport { engine } from './runtime/initialization';\n// export components for global engine\nexport const Transform = /* @__PURE__*/ components.Transform(engine);\nexport const Animator = /* @__PURE__*/ components.Animator(engine);\nexport const Material = /* @__PURE__*/ components.Material(engine);\nexport const MeshRenderer = /* @__PURE__*/ components.MeshRenderer(engine);\nexport const MeshCollider = /* @__PURE__*/ components.MeshCollider(engine);\nexport const Name = components.Name(engine);\n// export components for global engine\nexport * from './components/generated/global.gen';\nexport * from './components/generated/types.gen';\nexport * from './serialization/crdt';\nexport * from './composite';\n", "import {\n  ComponentDefinition,\n  IEngine,\n  LastWriteWinElementSetComponentDefinition,\n  MeshRendererComponentDefinitionExtended,\n  Schemas,\n  TransformComponentExtended\n} from '@dcl/ecs'\nimport * as components from '@dcl/ecs/dist/components'\nimport { Layout } from '../utils/layout'\nimport { GizmoType } from '../utils/gizmo'\n\nexport type Component<T = unknown> = ComponentDefinition<T>\n\nexport enum EditorComponentNames {\n  Selection = 'inspector::Selection',\n  Scene = 'inspector::Scene'\n}\n\nexport type EditorComponentsTypes = {\n  Selection: { gizmo: GizmoType }\n  Scene: { layout: Layout }\n}\n\nexport type EditorComponents = {\n  Selection: LastWriteWinElementSetComponentDefinition<EditorComponentsTypes['Selection']>\n  Scene: LastWriteWinElementSetComponentDefinition<EditorComponentsTypes['Scene']>\n}\n\nexport type SdkComponents = {\n  GltfContainer: ReturnType<typeof components.GltfContainer>\n  Billboard: ReturnType<typeof components.Billboard>\n  MeshRenderer: MeshRendererComponentDefinitionExtended\n  Transform: TransformComponentExtended\n  TextShape: ReturnType<typeof components.TextShape>\n  Name: ReturnType<typeof components.Name>\n}\n\nexport function createComponents(engine: IEngine): SdkComponents {\n  const GltfContainer = components.GltfContainer(engine)\n  const Billboard = components.Billboard(engine)\n  const MeshRenderer = components.MeshRenderer(engine)\n  const Transform = components.Transform(engine)\n  const TextShape = components.TextShape(engine)\n  const Name = components.Name(engine)\n\n  return {\n    GltfContainer,\n    Billboard,\n    MeshRenderer,\n    Transform,\n    TextShape,\n    Name\n  }\n}\n\n/* istanbul ignore next */\nexport function createEditorComponents(engine: IEngine): EditorComponents {\n  const Selection = engine.defineComponent(EditorComponentNames.Selection, {\n    gizmo: Schemas.Int\n  })\n\n  const Coords = Schemas.Map({\n    x: Schemas.Int,\n    y: Schemas.Int\n  })\n\n  const Scene = engine.defineComponent(EditorComponentNames.Scene, {\n    layout: Schemas.Map({\n      base: Coords,\n      parcels: Schemas.Array(Coords)\n    })\n  })\n\n  return { Selection, Scene }\n}\n", "import { ByteBuffer, Engine, IEngine, IEngineOptions } from '@dcl/ecs'\nimport { ReadWriteByteBuffer } from '@dcl/ecs/dist/serialization/ByteBuffer'\nimport { createComponents, createEditorComponents } from '../../../sdk/components'\n\nexport function serializeEngine(engine: IEngine) {\n  const messages: ByteBuffer = new ReadWriteByteBuffer()\n\n  for (const component of engine.componentsIter()) {\n    component.dumpCrdtStateToBuffer(messages)\n  }\n  return messages.toBinary()\n}\n\nexport function createEngineContext(opts?: IEngineOptions) {\n  // create engine and its components\n  const engine = Engine(opts)\n\n  const components = {\n    ...createComponents(engine),\n    ...createEditorComponents(engine)\n  }\n  return { engine, components }\n}\n", "import { FileSystemInterface } from '../types'\n\nexport async function getFilesInDirectory(\n  fs: FileSystemInterface,\n  dirPath: string,\n  files: string[],\n  recursive: boolean = true,\n  ignore: string[] = [] // This functionality can be extended, now only 'absolute' path can be ignored\n) {\n  const currentDirFiles = await fs.readdir(dirPath)\n  for (const currentPath of currentDirFiles) {\n    if (ignore.includes(currentPath.name)) continue\n\n    const slashIfRequire = (dirPath.length && !dirPath.endsWith('/') && '/') || ''\n    const fullPath = dirPath + slashIfRequire + currentPath.name\n\n    if (currentPath.isDirectory && recursive) {\n      await getFilesInDirectory(fs, fullPath, files, recursive)\n    } else {\n      files.push(fullPath)\n    }\n  }\n  return files\n}\n\nexport const DIRECTORY = {\n  ASSETS: 'assets',\n  SCENE: 'scene'\n}\n\nexport const EXTENSIONS = ['.glb', '.png', '.composite', '.composite.bin', '.gltf', '.jpg']\n\nexport function withAssetDir(filePath: string = '') {\n  return filePath ? `${DIRECTORY.ASSETS}/${filePath}` : DIRECTORY.ASSETS\n}\n\nexport function getFileName(fileName: string, ext: string) {\n  if (EXTENSIONS.some(($) => fileName.endsWith($))) return fileName\n  return `${fileName}.${ext}`\n}\n\nexport function getCurrentCompositePath() {\n  return withAssetDir(`${DIRECTORY.SCENE}/main.composite`)\n}\n", "import { Transport } from '@dcl/ecs'\nimport { AsyncQueue } from '@well-known-components/pushable-channel'\n\nimport { consumeAllMessagesInto } from '../../logic/consume-stream'\nimport { DataLayerContext } from '../types'\nimport { serializeEngine } from './utils/engine'\n\nexport function stream(\n  stream: AsyncIterable<{ data: Uint8Array }>,\n  ctx: Omit<DataLayerContext, 'fs'>,\n  addUndoCrdt: () => void\n): AsyncGenerator<{ data: Uint8Array }> {\n  const queue = new AsyncQueue<{ data: Uint8Array }>((_) => {})\n  const engineSerialized = serializeEngine(ctx.engine)\n  // first we send the fully serialized state over the wire\n  queue.enqueue({ data: engineSerialized })\n\n  // then create and add the transport\n  const transport: Transport = {\n    filter() {\n      return !queue.closed\n    },\n    async send(message) {\n      if (queue.closed) return\n      queue.enqueue({ data: message })\n    }\n  }\n  Object.assign(transport, { name: 'DataLayerHost' })\n  ctx.engine.addTransport(transport)\n\n  function processMessage(message: Uint8Array) {\n    transport.onmessage!(message)\n    void ctx.engine.update(1)\n    addUndoCrdt()\n  }\n\n  // and lastly wire the new messages from the renderer engine\n  consumeAllMessagesInto(stream, processMessage).catch((err) => {\n    console.error('Faile to consume stream from data layer ', err)\n    queue.close()\n  })\n\n  // Send initial message (engineSerialized)\n  void ctx.engine.update(1)\n\n  return queue\n}\n", "import { CrdtStreamMessage } from '../data-layer/proto/gen/data-layer.gen'\n\nexport async function consumeAllMessagesInto(iter: AsyncIterable<CrdtStreamMessage>, cb: (data: Uint8Array) => void) {\n  for await (const it of iter) {\n    if (it.data.byteLength) {\n      cb(it.data)\n    }\n  }\n}\n", "import { FileSystemInterface } from '../types'\n\nasync function upsertAsset(fs: FileSystemInterface, path: string, content: Uint8Array | null) {\n  if (content) {\n    await fs.writeFile(path, Buffer.from(content))\n  } else {\n    await fs.rm(path)\n  }\n}\n\nexport default upsertAsset\n", "import { ComponentDefinition, CompositeDefinition, DeepReadonlyObject, Entity } from '@dcl/ecs'\nimport { ReadWriteByteBuffer } from '@dcl/ecs/dist/serialization/ByteBuffer'\nimport { dataCompare } from '@dcl/ecs/dist/systems/crdt/utils'\n\nimport { EditorComponentsTypes } from '../../../sdk/components'\nimport { Scene } from '@dcl/schemas'\n\nexport function isEqual(component: ComponentDefinition<unknown>, prevValue: unknown, newValue: unknown) {\n  if (prevValue === newValue || (!prevValue && !newValue)) return true\n  if ((!prevValue && newValue) || (prevValue && !newValue)) return false\n  const prevBuffer = new ReadWriteByteBuffer()\n  const newBuffer = new ReadWriteByteBuffer()\n  component.schema.serialize(prevValue as DeepReadonlyObject<unknown>, prevBuffer)\n  component.schema.serialize(newValue as DeepReadonlyObject<unknown>, newBuffer)\n  return dataCompare(prevBuffer.toBinary(), newBuffer.toBinary()) === 0\n}\n\nexport function findPrevValue(composite: CompositeDefinition, componentName: string, entity: Entity) {\n  const component = composite.components.find((c) => c.name === componentName)\n  const value = component?.data.get(entity)\n  if (value?.data?.$case !== 'json') {\n    return null\n  }\n  return value.data.json\n}\n\nexport function parseSceneFromComponent(value: DeepReadonlyObject<EditorComponentsTypes['Scene']>): Partial<Scene> {\n  return {\n    scene: {\n      parcels: value.layout.parcels.map(($) => `${$.x},${$.y}`),\n      base: `${value.layout.base.x},${value.layout.base.y}`\n    }\n  }\n}\n", "import { UndoRedo } from '../undo-redo'\n\nconst ONE_MB_IN_BYTES = 1_048_576\nconst ONE_GB_IN_BYTES = ONE_MB_IN_BYTES * 1024\n\nexport function UndoRedoArray(maxEntries: number, maxSize: number = ONE_GB_IN_BYTES) {\n  const valueList: UndoRedo[] = []\n  let memorySize: number = 0\n\n  function valueSize(val?: UndoRedo) {\n    let fileSize: number = 0\n    if (val?.$case === 'file') {\n      for (const operation of val.operations) {\n        fileSize += operation.newValue?.length ?? 0\n        fileSize += operation.prevValue?.length ?? 0\n      }\n    }\n    return fileSize\n  }\n\n  return {\n    push(value: UndoRedo) {\n      // If we reach the max entries, remove the first element and calc size\n      while (valueList.length >= maxEntries) {\n        const valToRemove = valueList.shift()\n        memorySize -= valueSize(valToRemove)\n      }\n\n      // Add current value size to the memory\n      const currentSize = valueSize(value)\n      memorySize += currentSize\n\n      // add the value to the list.\n      valueList.push(value)\n\n      // if we reach the max_size limit, start removing files.\n      while (memorySize >= maxSize) {\n        for (let index = 0; index <= valueList.length - 1; index++) {\n          const size = valueSize(valueList[index])\n          if (size) {\n            memorySize -= size\n            valueList.splice(index, 1)\n            break\n          }\n        }\n      }\n      return valueList[valueList.length - 1] === value ? value : undefined\n    },\n    pop() {\n      const value = valueList.pop()\n      memorySize -= valueSize(value)\n      return value\n    },\n    clear() {\n      memorySize = 0\n      valueList.length = 0\n    },\n    values() {\n      return Array.from(valueList)\n    },\n    get memorySize() {\n      return memorySize\n    }\n  }\n}\n", "import {\n  ComponentDefinition,\n  CompositeDefinition,\n  CrdtMessageType,\n  Entity,\n  IEngine,\n  LastWriteWinElementSetComponentDefinition\n} from '@dcl/ecs'\nimport upsertAsset from './upsert-asset'\nimport { FileSystemInterface } from '../types'\nimport { findPrevValue } from './utils/component'\nimport { UndoRedoArray } from './utils/undo-redo-array'\nimport { withAssetDir } from './fs-utils'\n\nexport type UndoRedoCrdt = { $case: 'crdt'; operations: CrdtOperation[] }\nexport type UndoRedoFile = { $case: 'file'; operations: FileOperation[] }\nexport type CrdtOperation = {\n  entity: Entity\n  componentName: string\n  prevValue: unknown\n  newValue: unknown\n  operation: CrdtMessageType\n}\nexport type FileOperation = {\n  path: string\n  prevValue: Uint8Array | null\n  newValue: Uint8Array | null\n}\n\nexport type UndoRedo = UndoRedoFile | UndoRedoCrdt\nexport type UndoRedoOp = UndoRedo['operations'][0]\nexport type UndoRedoGetter = <T extends UndoRedoOp>(op: T) => T['newValue']\n\nfunction getAndCleanArray<T = unknown>(arr: T[]): T[] {\n  return arr.splice(0, arr.length)\n}\n\nconst isNil = (val: unknown) => val === null || val === undefined\n\nconst getUndoValue: UndoRedoGetter = (val) => val.prevValue\nconst getRedoValue: UndoRedoGetter = (val) => val.newValue\n\nexport function initUndoRedo(fs: FileSystemInterface, engine: IEngine, getComposite: () => CompositeDefinition) {\n  const undoList = UndoRedoArray(1024)\n  const redoList = UndoRedoArray(1024)\n  const crdtAcc: CrdtOperation[] = []\n\n  function onChange(\n    entity: Entity,\n    operation: CrdtMessageType,\n    component: ComponentDefinition<unknown> | undefined,\n    _componentValue: unknown\n  ) {\n    const composite = getComposite()\n    if (!composite) {\n      return\n    }\n\n    // TODO: selection doesn't exists on composite\n    if (operation === CrdtMessageType.PUT_COMPONENT || operation === CrdtMessageType.DELETE_COMPONENT) {\n      const prevValue = findPrevValue(composite, component!.componentName, entity)\n      crdtAcc.push({\n        entity,\n        operation,\n        componentName: component!.componentName,\n        prevValue,\n        newValue: _componentValue\n      })\n    }\n  }\n\n  async function undoRedoLogic(message: UndoRedo, getValue: UndoRedoGetter): Promise<void> {\n    if (message.$case === 'crdt') {\n      for (const operation of message.operations) {\n        const component = engine.getComponent(\n          operation.componentName\n        ) as LastWriteWinElementSetComponentDefinition<unknown>\n        const value = getValue(operation)\n\n        if (isNil(value)) {\n          component.deleteFrom(operation.entity)\n        } else {\n          component.createOrReplace(operation.entity, value)\n        }\n      }\n    } else if (message.$case === 'file') {\n      for (const operation of message.operations) {\n        await upsertAsset(fs, withAssetDir(operation.path), getValue(operation))\n      }\n    }\n  }\n\n  return {\n    async undo() {\n      const msg = undoList.pop()\n      if (msg) {\n        redoList.push(msg)\n        await undoRedoLogic(msg, getUndoValue)\n        await engine.update(1 / 16)\n      }\n      getAndCleanArray(crdtAcc)\n      return { type: msg?.$case ?? '' }\n    },\n    async redo() {\n      const msg = redoList.pop()\n      if (msg) {\n        undoList.push(msg)\n        await undoRedoLogic(msg, getRedoValue)\n        await engine.update(1 / 16)\n      }\n      getAndCleanArray(crdtAcc)\n      return { type: msg?.$case ?? '' }\n    },\n    onChange,\n    addUndoFile(operations: FileOperation[]) {\n      redoList.clear()\n      undoList.push({ $case: 'file', operations })\n    },\n    addUndoCrdt() {\n      const changes = getAndCleanArray(crdtAcc)\n      if (changes.length) {\n        redoList.clear()\n        undoList.push({ $case: 'crdt', operations: changes })\n      }\n    }\n  }\n}\n", "import { CrdtMessageType, OnChangeFunction } from '@dcl/ecs'\nimport { Scene } from '@dcl/schemas'\n\nimport { FileSystemInterface } from '../types'\nimport { parseSceneFromComponent } from './utils/component'\nimport { EditorComponentNames, EditorComponentsTypes } from '../../sdk/components'\n\ntype SceneWithDefaults = Scene & {\n  display: {\n    title: string\n  }\n}\n\nexport interface SceneProvider {\n  onChange: OnChangeFunction\n  getScene: () => SceneWithDefaults\n}\n\nfunction bufferToScene(sceneBuffer: Buffer): Scene {\n  return JSON.parse(sceneBuffer.toString())\n}\n\nfunction sceneToBuffer(scene: Scene): Buffer {\n  return Buffer.from(JSON.stringify(scene, null, 2), 'utf-8')\n}\n\nfunction updateScene(scene: Scene, value: EditorComponentsTypes['Scene']): Scene {\n  return {\n    ...scene,\n    ...parseSceneFromComponent(value)\n  }\n}\n\nasync function getScene(fs: FileSystemInterface): Promise<SceneWithDefaults> {\n  let scene: Scene = {} as Scene\n  try {\n    scene = bufferToScene(await fs.readFile('scene.json'))\n  } catch (e) {\n    console.error('Reading scene.json file failed: ', e)\n  }\n\n  const sceneWithDefaults = augmentDefaults(fs, scene)\n  return sceneWithDefaults\n}\n\nfunction augmentDefaults(fs: FileSystemInterface, scene: Scene): SceneWithDefaults {\n  return {\n    ...scene,\n    display: {\n      ...scene.display,\n      title: scene.display?.title || fs.cwd()\n    }\n  }\n}\n\nexport async function initSceneProvider(fs: FileSystemInterface): Promise<SceneProvider> {\n  let scene: SceneWithDefaults = await getScene(fs)\n\n  return {\n    onChange(_, operation, component, componentValue) {\n      if (operation === CrdtMessageType.PUT_COMPONENT && component?.componentName === EditorComponentNames.Scene) {\n        const updatedScene = updateScene(scene, componentValue as EditorComponentsTypes['Scene'])\n        scene = augmentDefaults(fs, updatedScene)\n        fs.writeFile('scene.json', sceneToBuffer(scene)).catch((err) =>\n          console.error('Failed saving scene.json: ', err)\n        )\n      }\n    },\n    getScene() {\n      return scene\n    }\n  }\n}\n", "import Ajv, { JTDDataType } from 'ajv/dist/jtd'\nimport { FileSystemInterface } from '../../data-layer/types'\nimport { InspectorPreferences, getDefaultInspectorPreferences } from './types'\n\n/*\n  Preferences file is a JSON dictionary with version and data fields.\n  This outer structure is called 'shell'.\n  Version 1's data is a 1-level deep dictionary, i.e.\n  type dataV1 = {[key: string]: string | number | boolean | enum}.\n  Every preference (key) is treated as optional.\n  Example of valid V1 file:\n  {\n    \"version\": 1,\n    \"data\": {\n      \"autosaveEnabled\": true\n    }\n  }\n\n  Versioning policy:\n  1. Adding new fields is OK.\n  2. Deleting or renaming field or changing its type is not OK, requires new version.\n*/\nconst shellSchema = {\n  properties: {\n    version: { type: 'uint16' },\n    data: { properties: {}, additionalProperties: true }\n  }\n}\nconst v1Schema = {\n  optionalProperties: {\n    freeCameraInvertRotation: { type: 'boolean' },\n    autosaveEnabled: { type: 'boolean' }\n  }\n} as const\ntype JsonPreferencesV1 = JTDDataType<typeof v1Schema>\n\nconst ajv = new Ajv()\nconst validateShell = ajv.compile<JTDDataType<typeof shellSchema>>(shellSchema)\nconst validateV1 = ajv.compile<JsonPreferencesV1>(v1Schema)\n\nexport class InvalidPreferences extends Error {}\n\nexport function parseInspectorPreferences(content: string): InspectorPreferences {\n  let jsonContent\n  try {\n    jsonContent = JSON.parse(content)\n  } catch (err) {\n    throw new InvalidPreferences(`invalid json: ${err}`)\n  }\n\n  if (!validateShell(jsonContent)) {\n    throw new InvalidPreferences(`invalid shell: ${ajv.errorsText(validateShell.errors)}`)\n  }\n\n  if (jsonContent.version === 1) {\n    if (validateV1(jsonContent.data)) {\n      return {\n        ...getDefaultInspectorPreferences(),\n        ...jsonContent.data\n      }\n    } else {\n      throw new InvalidPreferences(`invalid v1 data: ${ajv.errorsText(validateV1.errors)}`)\n    }\n  } else {\n    throw new InvalidPreferences(`invalid version: ${jsonContent.version}`)\n  }\n}\n\nexport async function readPreferencesFromFile(fs: FileSystemInterface, path: string): Promise<InspectorPreferences> {\n  const fileExists = await fs.existFile(path)\n  if (!fileExists) return getDefaultInspectorPreferences()\n\n  const fileContent = await fs.readFile(path)\n  try {\n    return parseInspectorPreferences(fileContent.toString('utf-8'))\n  } catch (error) {\n    if (error instanceof InvalidPreferences) {\n      console.log(`bad preferences file: ${error}, returning default preferences`)\n      return getDefaultInspectorPreferences()\n    } else {\n      throw error\n    }\n  }\n}\n\nexport function serializeInspectorPreferences(value: InspectorPreferences): Buffer {\n  return Buffer.from(JSON.stringify({ version: 1, data: value }, null, 2), 'utf-8')\n}\n", "export type InspectorPreferences = {\n  freeCameraInvertRotation: boolean\n  autosaveEnabled: boolean\n}\n\nexport function getDefaultInspectorPreferences(): InspectorPreferences {\n  return {\n    freeCameraInvertRotation: false,\n    autosaveEnabled: false\n  }\n}\n", "import { Entity, IEngine, LastWriteWinElementSetComponentDefinition, Name, Transform } from '@dcl/ecs'\n\nexport function removeLegacyEntityNodeComponents(engine: IEngine) {\n  // Legacy EntityNode for backwards-compability\n  function legacyEntityNode() {\n    engine.removeSystem(legacyEntityNode)\n    const LegacyEntityNodeComponent = engine.getComponentOrNull(\n      'inspector::EntityNode'\n    ) as LastWriteWinElementSetComponentDefinition<{ label: string; parent: Entity }>\n    if (!LegacyEntityNodeComponent) return\n\n    for (const [entity, entityNodeValue] of engine.getEntitiesWith(LegacyEntityNodeComponent)) {\n      LegacyEntityNodeComponent.deleteFrom(entity)\n      const NameComponent = engine.getComponent(Name.componentId) as typeof Name\n      const TransformComponent = engine.getComponent(Transform.componentId) as typeof Transform\n      NameComponent.createOrReplace(entity, { value: entityNodeValue.label })\n      const transform = TransformComponent.getMutableOrNull(entity)\n      if (!transform) {\n        TransformComponent.create(entity, { parent: entityNodeValue.parent })\n      }\n    }\n    engine.removeComponentDefinition(LegacyEntityNodeComponent.componentId)\n  }\n  engine.addSystem(legacyEntityNode)\n}\n", "import {\n  ComponentData,\n  ComponentType,\n  Composite,\n  CompositeComponent,\n  DeepReadonly,\n  Entity,\n  IEngine,\n  LastWriteWinElementSetComponentDefinition,\n  PutComponentOperation,\n  getCompositeRootComponent\n} from '@dcl/ecs'\nimport { ReadWriteByteBuffer } from '@dcl/ecs/dist/serialization/ByteBuffer'\n\nfunction componentToCompositeComponentData<T>(\n  $case: 'json' | 'binary',\n  value: DeepReadonly<T>,\n  _component: LastWriteWinElementSetComponentDefinition<T>\n): ComponentData {\n  if ($case === 'json') {\n    return {\n      data: {\n        $case,\n        json: value\n      }\n    }\n  } else {\n    const byteBuffer = new ReadWriteByteBuffer()\n    _component.schema.serialize(value, byteBuffer)\n    return {\n      data: {\n        $case,\n        binary: byteBuffer.toBinary()\n      }\n    }\n  }\n}\n\nexport function dumpEngineToComposite(engine: IEngine, internalDataType: 'json' | 'binary'): Composite {\n  const ignoreEntities: Set<Entity> = new Set()\n  const composite: Composite.Definition = {\n    version: 1,\n    components: []\n  }\n\n  const CompositeRoot = getCompositeRootComponent(engine)\n  const childrenComposite = Array.from(engine.getEntitiesWith(CompositeRoot))\n  if (childrenComposite.length > 0) {\n    const compositeComponent: CompositeComponent = {\n      name: CompositeRoot.componentName,\n      jsonSchema: CompositeRoot.schema.jsonSchema,\n      data: new Map()\n    }\n\n    for (const [compositeRootEntity, compositeRootValue] of childrenComposite) {\n      if (compositeRootEntity === engine.RootEntity) continue\n\n      compositeRootValue.entities.forEach((item) => ignoreEntities.add(item.dest))\n\n      const componentData: ComponentData = componentToCompositeComponentData(\n        internalDataType,\n        {\n          src: compositeRootValue.src,\n          entities: []\n        },\n        CompositeRoot\n      )\n      compositeComponent.data.set(compositeRootEntity, componentData)\n    }\n\n    composite.components.push(compositeComponent)\n  }\n\n  const ignoreComponentNames = ['inspector:Selection', 'editor::Toggle', CompositeRoot.componentName]\n\n  for (const itComponentDefinition of engine.componentsIter()) {\n    if (ignoreComponentNames.includes(itComponentDefinition.componentName)) continue\n\n    // TODO: will we support APPEND components?\n    if (itComponentDefinition.componentType === ComponentType.GrowOnlyValueSet) continue\n\n    const itCompositeComponent: CompositeComponent = {\n      name: itComponentDefinition.componentName,\n      jsonSchema: itComponentDefinition.schema.jsonSchema,\n      data: new Map()\n    }\n\n    for (const [entity, value] of engine.getEntitiesWith(itComponentDefinition)) {\n      // TODO: see for overrides? check if the value has changed or not (should we tag it?)\n      // For now, the entities from children composite are ignored\n      if (ignoreEntities.has(entity)) continue\n\n      const componentData: ComponentData = componentToCompositeComponentData(\n        internalDataType,\n        value,\n        itComponentDefinition as LastWriteWinElementSetComponentDefinition<unknown>\n      )\n      itCompositeComponent.data.set(entity, componentData)\n    }\n\n    // TODO: should we save defined component but without entities assigned?\n    if (itCompositeComponent.data.size > 0) {\n      composite.components.push(itCompositeComponent)\n    }\n  }\n  return composite\n}\n\nexport function dumpEngineToCrdtCommands(engine: IEngine): Uint8Array {\n  const componentBuffer = new ReadWriteByteBuffer()\n  const crdtBuffer = new ReadWriteByteBuffer()\n  for (const itComponentDefinition of engine.componentsIter()) {\n    for (const [entity, value] of engine.getEntitiesWith(itComponentDefinition)) {\n      if (value) {\n        componentBuffer.resetBuffer()\n        itComponentDefinition.schema.serialize(value, componentBuffer)\n\n        PutComponentOperation.write(\n          entity,\n          0,\n          itComponentDefinition.componentId,\n          componentBuffer.toBinary(),\n          crdtBuffer\n        )\n      }\n    }\n  }\n\n  return crdtBuffer.toBinary()\n}\n", "import { Composite } from '@dcl/ecs'\nimport { getFilesInDirectory } from '../fs-utils'\nimport { FileSystemInterface } from '../../types'\n\nexport type CompositeManager = Composite.Provider & {\n  save: (composite: Composite.Resource, type: 'json' | 'binary') => Promise<void>\n}\n\nexport async function createFsCompositeProvider(\n  fs: FileSystemInterface,\n  dirPath: string = ''\n): Promise<CompositeManager> {\n  const files = await getFilesInDirectory(fs, dirPath, [], true, ['node_modules', 'dist', 'bin', 'src', '.vscode'])\n  const compositePaths = files\n    .filter((item) => item.endsWith('.composite') || item.endsWith('.composite.bin'))\n    .map((item) => fs.join(fs.dirname(item), fs.basename(item).toLowerCase()))\n\n  const compositePromises = compositePaths.map(async (itemPath) => {\n    try {\n      if (itemPath.endsWith('.bin')) {\n        const compositeContent = new Uint8Array(await fs.readFile(itemPath))\n        const composite = Composite.fromBinary(compositeContent)\n        return {\n          src: itemPath,\n          composite\n        }\n      } else {\n        const compositeContent = (await fs.readFile(itemPath)).toString()\n        const json = JSON.parse(compositeContent)\n        const composite = Composite.fromJson(json)\n        return {\n          src: itemPath,\n          composite\n        }\n      }\n    } catch (err) {\n      console.error(`Error loading composite ${itemPath}: ${(err as any).toString()}`)\n      return null\n    }\n  })\n\n  const composites = (await Promise.all(compositePromises)).filter((item) => item) as Composite.Resource[]\n\n  return {\n    getCompositeOrNull(src: string, _currentPath?: string) {\n      // compositePaths uses fs.join() to generate the .composite file and in windows generates paths like assets\\\\main.composite\n      // and the src: string parameter has assets/main.composite path.\n      function normalizePath(val: string) {\n        return val.replace(/\\\\/g, '/').toLocaleLowerCase()\n      }\n      return composites.find((item) => normalizePath(item.src) === normalizePath(src)) || null\n    },\n    // a lot of questions with this method, it's temporal\n    // => what should they be the params?, it overides? it's a save&replace, save as..., etc\n    save: async (composite: Composite.Resource, type: 'json' | 'binary') => {\n      let compositeDefinition: Composite.Definition\n      if (type === 'binary') {\n        const bytes = Buffer.from(Composite.toBinary(composite.composite))\n        await fs.writeFile(composite.src, bytes)\n\n        // deep clone (*)\n        compositeDefinition = Composite.fromBinary(bytes)\n      } else {\n        const text = JSON.stringify(Composite.toJson(composite.composite), null, 2)\n        await fs.writeFile(composite.src, Buffer.from(text, 'utf-8'))\n\n        // deep clone (*)\n        compositeDefinition = Composite.fromJson(JSON.parse(text))\n      }\n\n      // (*) deep clone: the `composite.composite` could be used, but this would assign\n      // the reference and at this point we don't have control about it\n\n      // If the composite resource exists in our list, we replaced the definition\n      //  with a cloned definition\n      const existingComposite = composites.find((item) => item.src === composite.src)\n      if (existingComposite) {\n        existingComposite.composite = compositeDefinition\n      }\n    }\n  }\n}\n", "import { Composite } from '@dcl/ecs'\nimport { PointerEvents } from '@dcl/ecs/dist/components'\nimport { defineMaterialComponent } from '@dcl/ecs/dist/components/extended/Material'\n\nimport { parseSceneFromComponent } from '../host/utils/component'\nimport { dumpEngineToComposite } from '../host/utils/engine-to-composite'\nimport { createFsInMemory } from '../../logic/in-memory-storage'\nimport { createEngineContext } from '../host/utils/engine'\n\nfunction createTempEngineContext() {\n  const { engine, components } = createEngineContext()\n  return {\n    engine,\n    components: {\n      ...components,\n      Material: defineMaterialComponent(engine),\n      PointerEvents: PointerEvents(engine)\n    }\n  }\n}\n\ntype TempEngine = ReturnType<typeof createTempEngineContext>\n\nfunction generateMinimalComposite({ engine, components }: TempEngine) {\n  // custom component\n  const cubeIdComponent = engine.defineComponent('cube-id', {})\n\n  // main box\n  const entity = engine.addEntity()\n  components.Transform.create(entity, { position: { x: 8, y: 1, z: 8 }, parent: engine.RootEntity })\n  components.MeshRenderer.setBox(entity)\n  cubeIdComponent.create(entity)\n  components.Name.create(entity, { value: 'Magic Cube' })\n\n  // scene\n  components.Scene.create(engine.RootEntity, {\n    layout: {\n      base: {\n        x: 0,\n        y: 0\n      },\n      parcels: [\n        {\n          x: 0,\n          y: 0\n        }\n      ]\n    }\n  })\n\n  const composite = dumpEngineToComposite(engine, 'json')\n  return Composite.toJson(composite)\n}\n\nexport function generateMainComposite({ engine, components }: TempEngine) {\n  // custom component\n  const cubeIdComponent = engine.defineComponent('cube-id', {})\n\n  // main box\n\n  const entity = engine.addEntity()\n  components.Transform.create(entity, { position: { x: 8, y: 1, z: 8 } })\n  components.MeshRenderer.setBox(entity)\n  cubeIdComponent.create(entity)\n  components.PointerEvents.create(entity, {\n    pointerEvents: [\n      {\n        eventType: 1,\n        eventInfo: {\n          button: 1,\n          hoverText: 'Press E to spawn',\n          maxDistance: 100,\n          showFeedback: true\n        }\n      }\n    ]\n  })\n  components.Material.setPbrMaterial(entity, {\n    albedoColor: {\n      r: 1.0,\n      g: 0.85,\n      b: 0.42,\n      a: 1.0\n    }\n  })\n  components.Name.create(entity, { value: 'Magic Cube' })\n\n  const gltfEntity = engine.addEntity()\n  components.Transform.create(gltfEntity, {\n    position: {\n      x: 4,\n      y: 0.8,\n      z: 8\n    }\n  })\n  components.GltfContainer.create(gltfEntity, { src: 'assets/scene/models/test-glb.glb' })\n  cubeIdComponent.create(gltfEntity)\n  components.Name.create(gltfEntity, { value: 'Gltf Test' })\n\n  // scene\n  components.Scene.create(engine.RootEntity, {\n    layout: {\n      base: {\n        x: 0,\n        y: 0\n      },\n      parcels: [\n        {\n          x: 0,\n          y: 0\n        },\n        {\n          x: 0,\n          y: 1\n        },\n        {\n          x: 1,\n          y: 0\n        }\n      ]\n    }\n  })\n\n  const composite = dumpEngineToComposite(engine, 'json')\n  return Composite.toJson(composite)\n}\n\nexport const getMinimalComposite = () => generateMinimalComposite(createTempEngineContext())\n\nconst builderMappings: Record<string, string> = {\n  'assets/scene/models/test-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models2/test2-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models2/test-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models2/casla-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models2/boedo-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models3/bird-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models4/romagnoli-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models5/romeo-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models6/ortigoza-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models7/hernandez-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models8/torrico-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models9/correa-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models9/pipi-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB',\n  'assets/scene/models10/san-lorenzo-glb.glb': 'QmWtwaLMbfMioQCshdqwnuRCzZAz6nnAWARvZKnqfnu4LB'\n}\n\nfunction getFeededEngineAndComposite() {\n  const context = createTempEngineContext()\n  return { engineContext: context, composite: generateMainComposite(context) }\n}\n\nexport async function feededFileSystem(mappings: Record<string, string> = builderMappings) {\n  const fileContent: Record<string, Buffer> = {}\n\n  async function downloadAndAssignAsset([path, contentHash]: [string, string]) {\n    try {\n      const url = `https://builder-api.decentraland.org/v1/storage/contents/${contentHash}`\n      const request = await fetch(url)\n      const content = await request.arrayBuffer()\n      fileContent[path] = Buffer.from(content)\n    } catch (err) {\n      console.error('Error fetching an asset for feed in-memory storage ' + path)\n    }\n  }\n\n  const assetPromises = Object.entries(mappings).map(downloadAndAssignAsset)\n  await Promise.all(assetPromises)\n\n  const { engineContext, composite } = getFeededEngineAndComposite()\n  const scene = parseSceneFromComponent(engineContext.components.Scene.get(engineContext.engine.RootEntity))\n\n  return createFsInMemory({\n    ...fileContent,\n    'assets/scene/main.composite': Buffer.from(JSON.stringify(composite), 'utf-8'),\n    'scene.json': Buffer.from(JSON.stringify(scene), 'utf-8')\n  })\n}\n", "import {\n  ComponentDefinition,\n  Composite,\n  CompositeDefinition,\n  CrdtMessageType,\n  Entity,\n  EntityMappingMode,\n  IEngine\n} from '@dcl/ecs'\nimport { EditorComponentNames } from '../../../sdk/components'\nimport { dumpEngineToComposite, dumpEngineToCrdtCommands } from './engine-to-composite'\nimport { FileSystemInterface } from '../../types'\nimport { CompositeManager, createFsCompositeProvider } from './fs-composite-provider'\nimport { getMinimalComposite } from '../../client/feeded-local-fs'\nimport { InspectorPreferences } from '../../../logic/preferences/types'\n\nenum DirtyEnum {\n  // No changes\n  None,\n  // Changes but that it doesnt affect the composite\n  Dirty,\n  // Changes that need to be sync with the composite\n  DirtyAndDump\n}\n\nasync function instanciateComposite(fs: FileSystemInterface, engine: IEngine, path: string): Promise<CompositeManager> {\n  if (!(await fs.existFile(path))) {\n    await fs.writeFile(path, Buffer.from(JSON.stringify(getMinimalComposite(), null, 2), 'utf-8'))\n  }\n\n  const compositeProvider = await createFsCompositeProvider(fs)\n  const mainComposite = compositeProvider.getCompositeOrNull(path)\n  if (!mainComposite) throw new Error('Invalid composite')\n\n  Composite.instance(engine, mainComposite, compositeProvider, {\n    entityMapping: {\n      type: EntityMappingMode.EMM_DIRECT_MAPPING,\n      getCompositeEntity: (entity: number | Entity) => entity as Entity\n    }\n  })\n\n  return compositeProvider\n}\n\nexport async function compositeAndDirty(\n  fs: FileSystemInterface,\n  engine: IEngine,\n  getInspectorPreferences: () => InspectorPreferences,\n  compositePath: string\n) {\n  let composite: CompositeDefinition\n  let dirty: DirtyEnum = DirtyEnum.None\n\n  // Look for a composite\n  const compositeProvider = await instanciateComposite(fs, engine, compositePath)\n\n  async function dumpEngineAndGetComposite(dump: boolean = true): Promise<CompositeDefinition | null> {\n    try {\n      // TODO: hardcoded for the moment. the ID should be the selected composite id name.\n      // composite.id = 'main'\n      composite = dumpEngineToComposite(engine, 'json')\n\n      if (!dump) {\n        return composite\n      }\n\n      const mainCrdt = dumpEngineToCrdtCommands(engine)\n      await fs.writeFile('main.crdt', Buffer.from(mainCrdt))\n      await compositeProvider.save({ src: compositePath, composite }, 'json')\n\n      return composite\n    } catch (e) {\n      console.log('Failed saving composite')\n    }\n    return null\n  }\n\n  async function saveComposite(dump: boolean = true) {\n    composite = (await dumpEngineAndGetComposite(dump)) ?? composite\n  }\n\n  engine.addSystem(() => {\n    if (dirty !== DirtyEnum.None) {\n      void saveComposite(getInspectorPreferences().autosaveEnabled && dirty === DirtyEnum.DirtyAndDump)\n    }\n    dirty = DirtyEnum.None\n  }, -1_000_000_000)\n\n  return {\n    onChange: (\n      _entity: Entity,\n      operation: CrdtMessageType,\n      component: ComponentDefinition<unknown> | undefined,\n      _componentValue: unknown\n    ) => {\n      // // No create dirty state if the changes are not needed to be dumped\n      if (\n        !component ||\n        component.componentName === EditorComponentNames.Scene ||\n        component.componentName === EditorComponentNames.Selection\n      ) {\n        if (dirty === DirtyEnum.None) dirty = DirtyEnum.Dirty\n        return\n      }\n      // // No create dirty state if its an invalid operation\n      if (operation !== CrdtMessageType.PUT_COMPONENT && operation !== CrdtMessageType.DELETE_COMPONENT) {\n        return\n      }\n      dirty = DirtyEnum.DirtyAndDump\n    },\n    get composite() {\n      return composite\n    },\n    get dirty() {\n      return dirty\n    },\n    saveComposite\n  }\n}\n", "import { IEngine, OnChangeFunction } from '@dcl/ecs'\n\nimport { DataLayerRpcServer, FileSystemInterface } from '../types'\nimport { EXTENSIONS, getCurrentCompositePath, getFilesInDirectory, withAssetDir } from './fs-utils'\nimport { stream } from './stream'\nimport { FileOperation, initUndoRedo } from './undo-redo'\nimport upsertAsset from './upsert-asset'\nimport { initSceneProvider } from './scene'\nimport { readPreferencesFromFile, serializeInspectorPreferences } from '../../logic/preferences/io'\nimport { removeLegacyEntityNodeComponents } from './utils/legacy-entity-node'\nimport { compositeAndDirty } from './utils/composite-dirty'\n\nconst INSPECTOR_PREFERENCES_PATH = 'inspector-preferences.json'\n\nexport async function initRpcMethods(\n  fs: FileSystemInterface,\n  engine: IEngine,\n  onChanges: OnChangeFunction[]\n): Promise<DataLayerRpcServer> {\n  const sceneProvider = await initSceneProvider(fs)\n  const currentCompositeResourcePath = getCurrentCompositePath()\n  let inspectorPreferences = await readPreferencesFromFile(fs, INSPECTOR_PREFERENCES_PATH)\n\n  // Handle old EntityNode components\n  removeLegacyEntityNodeComponents(engine)\n\n  const compositeManager = await compositeAndDirty(\n    fs,\n    engine,\n    () => {\n      return inspectorPreferences\n    },\n    currentCompositeResourcePath\n  )\n  const undoRedoManager = initUndoRedo(fs, engine, () => compositeManager.composite)\n\n  // Create containers and attach onChange logic.\n  onChanges.push(undoRedoManager.onChange)\n\n  // Scene Component logic\n  onChanges.push(sceneProvider.onChange)\n\n  // Dirty Save Logic\n  onChanges.push(compositeManager.onChange)\n\n  return {\n    async redo() {\n      const type = await undoRedoManager.redo()\n      return type\n    },\n    async undo() {\n      const type = await undoRedoManager.undo()\n      return type\n    },\n    /**\n     * This method receives an incoming message iterator and returns an async iterable.\n     * It adds the undo's operations of the components changed (grouped) on every tick\n     */\n    crdtStream(iter) {\n      return stream(iter, { engine }, () => undoRedoManager?.addUndoCrdt())\n    },\n    async getAssetData(req) {\n      if (!req.path) throw new Error('Invalid path')\n      if (await fs.existFile(req.path)) {\n        return {\n          data: await fs.readFile(req.path)\n        }\n      }\n\n      throw new Error(`Couldn't find the asset ${req.path}`)\n    },\n    async getAssetCatalog() {\n      const ignore = ['.git', 'node_modules']\n      const basePath = withAssetDir()\n\n      const files = (await getFilesInDirectory(fs, basePath, [], true, ignore)).filter((item) => {\n        const itemLower = item.toLowerCase()\n        return EXTENSIONS.some((ext) => itemLower.endsWith(ext))\n      })\n\n      return { basePath, assets: files.map(($) => ({ path: $ })) }\n    },\n    /**\n     * Import asset into the file system.\n     * It generates an undo operation.\n     */\n    async importAsset({ assetPackageName, basePath, content }) {\n      const baseFolder = basePath.length ? basePath + '/' : ''\n      const undoAcc: FileOperation[] = []\n      for (const [fileName, fileContent] of content) {\n        const importName = assetPackageName ? `${assetPackageName}/${fileName}` : fileName\n        const filePath = (baseFolder + importName).replaceAll('//', '/')\n        const prevValue = (await fs.existFile(filePath)) ? await fs.readFile(filePath) : null\n        undoAcc.push({ prevValue, newValue: fileContent, path: filePath })\n        await upsertAsset(fs, filePath, fileContent)\n      }\n      undoRedoManager.addUndoFile(undoAcc)\n      return {}\n    },\n    async removeAsset(req) {\n      const filePath = req.path\n      // TODO: remove ALL gltf/glb related files...\n      if (await fs.existFile(filePath)) {\n        const prevValue = await fs.readFile(filePath)\n        await fs.rm(filePath)\n        undoRedoManager.addUndoFile([{ prevValue, newValue: null, path: filePath }])\n      }\n      return {}\n    },\n    async save() {\n      await compositeManager.saveComposite(true)\n      return {}\n    },\n    async getInspectorPreferences() {\n      return inspectorPreferences\n    },\n    async setInspectorPreferences(req) {\n      inspectorPreferences = req\n      await fs.writeFile(INSPECTOR_PREFERENCES_PATH, serializeInspectorPreferences(req))\n      return {}\n    }\n  }\n}\n", "import { IEngine, OnChangeFunction } from '@dcl/ecs'\nimport { createEngineContext } from './utils/engine'\nimport { initRpcMethods } from '../host/rpc-methods'\nimport { DataLayerRpcServer, FileSystemInterface } from '../types'\n\nexport * from './utils/engine'\nexport * from './utils/engine-to-composite'\n\nexport type DataLayerHost = {\n  rpcMethods: DataLayerRpcServer\n  engine: IEngine\n}\n\n/**\n * This RpcClient creates internally the server, implementing its own file system interface and engine.\n * @param fs\n * @returns\n */\n\nexport async function createDataLayerHost(fs: FileSystemInterface): Promise<DataLayerHost> {\n  const callbackFunctions: OnChangeFunction[] = []\n  const { engine } = createEngineContext({\n    onChangeFunction: (entity, operation, component, componentValue) => {\n      callbackFunctions.forEach((func) => func(entity, operation, component, componentValue))\n    }\n  })\n  Object.assign(globalThis, { dataLayerEngine: engine })\n\n  const rpcMethods = await initRpcMethods(fs, engine, callbackFunctions)\n\n  return {\n    rpcMethods,\n    engine\n  }\n}\n"],
  "mappings": "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A,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAChG;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;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",
  "names": ["Empty", "_m0", "length", "UndoRedoResponse", "CrdtStreamMessage", "AssetData", "Asset", "AssetCatalogResponse", "ImportAssetRequest", "ImportAssetRequest_ContentEntry", "InspectorPreferencesMessage", "import_minimal", "PBAnimator", "_m0", "length", "PBAnimationState", "import_minimal", "PBAudioSource", "_m0", "length", "import_minimal", "PBAudioStream", "_m0", "length", "import_minimal", "AvatarAnchorPointType", "PBAvatarAttach", "_m0", "length", "import_minimal", "import_minimal", "Position", "_m0", "length", "Vector3", "Vector2", "Quaternion", "AvatarModifierType", "PBAvatarModifierArea", "_m0", "length", "import_minimal", "import_minimal", "Color3", "_m0", "length", "Color4", "PBAvatarShape", "_m0", "length", "tsProtoGlobalThis", "Long", "import_minimal", "BillboardMode", "PBBillboard", "_m0", "length", "import_minimal", "PBCameraMode", "_m0", "length", "import_minimal", "PBCameraModeArea", "_m0", "length", "import_minimal", "PBEngineInfo", "_m0", "length", "import_minimal", "PBGltfContainer", "_m0", "length", "import_minimal", "PBGltfContainerLoadingState", "_m0", "length", "import_minimal", "import_minimal", "TextureWrapMode", "TextureFilterMode", "Texture", "_m0", "length", "AvatarTexture", "VideoTexture", "TextureUnion", "MaterialTransparencyMode", "PBMaterial", "_m0", "length", "PBMaterial_UnlitMaterial", "PBMaterial_PbrMaterial", "import_minimal", "ColliderLayer", "PBMeshCollider", "_m0", "length", "PBMeshCollider_BoxMesh", "PBMeshCollider_CylinderMesh", "PBMeshCollider_PlaneMesh", "PBMeshCollider_SphereMesh", "import_minimal", "PBMeshRenderer", "_m0", "length", "PBMeshRenderer_BoxMesh", "PBMeshRenderer_CylinderMesh", "PBMeshRenderer_PlaneMesh", "PBMeshRenderer_SphereMesh", "import_minimal", "NftFrameType", "PBNftShape", "_m0", "length", "import_minimal", "PBPointerEvents", "_m0", "length", "PBPointerEvents_Info", "PBPointerEvents_Entry", "import_minimal", "import_minimal", "RaycastHit", "_m0", "length", "PBPointerEventsResult", "_m0", "length", "import_minimal", "PBPointerLock", "_m0", "length", "import_minimal", "RaycastQueryType", "PBRaycast", "_m0", "length", "import_minimal", "PBRaycastResult", "_m0", "length", "import_minimal", "PBTextShape", "_m0", "length", "import_minimal", "import_minimal", "BorderRect", "_m0", "length", "Rect", "BackgroundTextureMode", "PBUiBackground", "_m0", "length", "import_minimal", "PBUiCanvasInformation", "_m0", "length", "import_minimal", "PBUiDropdown", "_m0", "length", "import_minimal", "PBUiDropdownResult", "_m0", "length", "import_minimal", "PBUiInput", "_m0", "length", "import_minimal", "PBUiInputResult", "_m0", "length", "import_minimal", "PBUiText", "_m0", "length", "import_minimal", "YGPositionType", "YGAlign", "YGUnit", "YGFlexDirection", "YGWrap", "YGJustify", "YGOverflow", "YGDisplay", "YGEdge", "PBUiTransform", "_m0", "length", "import_minimal", "VideoState", "PBVideoEvent", "_m0", "length", "import_minimal", "PBVideoPlayer", "_m0", "length", "import_minimal", "PBVisibilityComponent", "_m0", "length", "engine", "engine", "engine", "length", "specReflection", "specReflection", "value", "Schemas", "engine", "Name", "engine", "engine", "MeshRenderer", "engine", "engine", "EntityUtils", "EntityState", "utf8", "length", "_ReadWriteByteBuffer_woAdd", "_ReadWriteByteBuffer_roAdd", "CrdtMessageType", "ProcessMessageResultType", "CrdtMessageProtocol", "DeleteComponent", "write", "read", "AppendValueOperation", "write", "read", "DeleteEntity", "write", "read", "PutComponentOperation", "write", "read", "engine", "parseChunkMessage", "message", "CrdtUtils", "SynchronizedEntityType", "engine", "Transform", "ComponentType", "removeEntityWithChildren", "CameraType", "InputAction", "PointerEventType", "LoadingState", "TextAlignMode", "Font", "engine", "EntityMappingMode", "engine", "import_minimal", "import_minimal", "NullValue", "tsProtoGlobalThis", "Struct", "_m0", "length", "isObject", "Struct_FieldsEntry", "isSet", "Value", "ListValue", "ComponentData", "_m0", "length", "isSet", "bytesFromBase64", "base64FromBytes", "CompositeComponent", "isObject", "CompositeComponent_DataEntry", "CompositeDefinition", "tsProtoGlobalThis", "Composite", "engine", "Transform", "Name", "engine", "GltfContainer", "Billboard", "MeshRenderer", "Transform", "TextShape", "Name", "engine", "stream", "engine", "Ajv", "engine", "Name", "Transform", "engine", "engine", "engine", "engine", "engine"]
}
