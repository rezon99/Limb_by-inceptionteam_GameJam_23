import { Entity } from '@dcl/ecs';
/**
 * Used to get a tree and the functions to work with it
 * @returns
 */
export declare const useTree: () => {
    tree: Map<Entity, Set<Entity>>;
    addChild: (parent: Entity, label: string) => Promise<void>;
    setParent: (entity: Entity, parent: Entity) => Promise<void>;
    rename: (entity: Entity, value: string) => Promise<void>;
    remove: (entity: Entity) => Promise<void>;
    select: (entity: Entity) => Promise<void>;
    duplicate: (entity: Entity) => Promise<void>;
    getId: (entity: Entity) => string;
    getChildren: (entity: Entity) => Entity[];
    getLabel: (entity: Entity) => string;
    setOpen: (entity: Entity, open: boolean) => Promise<void>;
    isOpen: (entity: Entity) => boolean;
    isHidden: (_: Entity) => false;
    canRename: (entity: Entity) => boolean;
    canRemove: (entity: Entity) => boolean;
    canDuplicate: (entity: Entity) => boolean;
    centerViewOnEntity: (entity: Entity) => void;
};
