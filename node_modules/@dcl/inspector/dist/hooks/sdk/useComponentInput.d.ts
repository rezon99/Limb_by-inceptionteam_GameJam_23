import { InputHTMLAttributes } from 'react';
import { Entity } from '@dcl/ecs';
import { NestedKey } from '../../lib/logic/get-set-value';
import { Component } from '../../lib/sdk/components';
type Input = {
    [key: string]: string | Record<string, string | Input>;
};
export declare function isValidNumericInput(input: Input | string): boolean;
export declare const useComponentInput: <ComponentValueType extends object, InputType extends Input>(entity: Entity, component: Component<ComponentValueType>, fromComponentValueToInput: (componentValue: ComponentValueType) => InputType, fromInputToComponentValue: (input: InputType) => ComponentValueType, validateInput?: (input: InputType) => boolean, deps?: unknown[]) => {
    getInputProps: (path: NestedKey<InputType>) => Pick<InputHTMLAttributes<HTMLElement>, 'value' | 'onChange' | 'onFocus' | 'onBlur'>;
    isValid: boolean;
};
export {};
