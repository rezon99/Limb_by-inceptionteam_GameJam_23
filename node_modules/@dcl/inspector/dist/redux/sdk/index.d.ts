import { IEngine } from '@dcl/ecs';
import { PayloadAction } from '@reduxjs/toolkit';
import { RootState } from '../store';
export interface EngineState {
    inspectorEngine: IEngine | undefined;
    rendererEngine: IEngine | undefined;
}
export declare const initialState: EngineState;
export declare const sdkEngines: import("@reduxjs/toolkit").Slice<EngineState, {
    addEngines: (state: import("immer/dist/internal").WritableDraft<EngineState>, { payload }: PayloadAction<{
        inspector: IEngine;
        babylon: IEngine;
    }>) => void;
}, "sdk-engines">;
export declare const addEngines: import("@reduxjs/toolkit").ActionCreatorWithPayload<{
    inspector: IEngine;
    babylon: IEngine;
}, "sdk-engines/addEngines">;
export declare const selectEngines: (state: RootState) => {
    inspector: IEngine | undefined;
    renderer: IEngine | undefined;
};
declare const _default: import("redux").Reducer<EngineState>;
export default _default;
