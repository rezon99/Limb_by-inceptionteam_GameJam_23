import { PayloadAction } from '@reduxjs/toolkit';
import { RootState } from '../store';
import { InspectorPreferences } from '../../lib/logic/preferences/types';
import { AssetCatalogResponse } from '../../lib/data-layer/remote-data-layer';
export interface AppState {
    canSave: boolean;
    preferences: InspectorPreferences | undefined;
    assetsCatalog: AssetCatalogResponse | undefined;
}
export declare const initialState: AppState;
export declare const appState: import("@reduxjs/toolkit").Slice<AppState, {
    updateCanSave: (state: import("immer/dist/internal").WritableDraft<AppState>, { payload }: PayloadAction<{
        dirty: boolean;
    }>) => void;
    updatePreferences: (state: import("immer/dist/internal").WritableDraft<AppState>, { payload }: PayloadAction<{
        preferences: InspectorPreferences;
    }>) => void;
    updateAssetCatalog: (state: import("immer/dist/internal").WritableDraft<AppState>, { payload }: PayloadAction<{
        assets: AssetCatalogResponse;
    }>) => void;
}, "app-state">;
export declare const updateCanSave: import("@reduxjs/toolkit").ActionCreatorWithPayload<{
    dirty: boolean;
}, "app-state/updateCanSave">, updatePreferences: import("@reduxjs/toolkit").ActionCreatorWithPayload<{
    preferences: InspectorPreferences;
}, "app-state/updatePreferences">, updateAssetCatalog: import("@reduxjs/toolkit").ActionCreatorWithPayload<{
    assets: AssetCatalogResponse;
}, "app-state/updateAssetCatalog">;
export declare const selectCanSave: (state: RootState) => boolean;
export declare const selectInspectorPreferences: (state: RootState) => InspectorPreferences | undefined;
export declare const selectAssetCatalog: (state: RootState) => AssetCatalogResponse | undefined;
declare const _default: import("redux").Reducer<AppState>;
export default _default;
