"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Name = exports.MeshCollider = exports.MeshRenderer = exports.Animator = exports.Material = exports.Transform = void 0;
const Animator_1 = require("./extended/Animator");
const Material_1 = require("./extended/Material");
const MeshCollider_1 = require("./extended/MeshCollider");
const MeshRenderer_1 = require("./extended/MeshRenderer");
const Name_1 = __importDefault(require("./manual/Name"));
const Transform_1 = require("./manual/Transform");
__exportStar(require("./generated/index.gen"), exports);
/* @__PURE__ */
const Transform = (engine) => (0, Transform_1.defineTransformComponent)(engine);
exports.Transform = Transform;
/* @__PURE__ */
const Material = (engine) => (0, Material_1.defineMaterialComponent)(engine);
exports.Material = Material;
/* @__PURE__ */
const Animator = (engine) => (0, Animator_1.defineAnimatorComponent)(engine);
exports.Animator = Animator;
/* @__PURE__ */
const MeshRenderer = (engine) => (0, MeshRenderer_1.defineMeshRendererComponent)(engine);
exports.MeshRenderer = MeshRenderer;
/* @__PURE__ */
const MeshCollider = (engine) => (0, MeshCollider_1.defineMeshColliderComponent)(engine);
exports.MeshCollider = MeshCollider;
/**
 * @alpha
 */
/* @__PURE__ */
const Name = (engine) => (0, Name_1.default)(engine);
exports.Name = Name;
