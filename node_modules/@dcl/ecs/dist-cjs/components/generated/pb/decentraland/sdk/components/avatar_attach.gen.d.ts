import _m0 from "protobufjs/minimal";
/** AvatarAnchorPointType determines the part of the avatar's body that anchors the Entity. */
/**
 * @public
 */
export declare const enum AvatarAnchorPointType {
    AAPT_POSITION = 0,
    AAPT_NAME_TAG = 1,
    AAPT_LEFT_HAND = 2,
    AAPT_RIGHT_HAND = 3
}
/**
 * The AvatarAttach component automatically repositions an Entity to maintain the same position and
 * rotation relative to some part of an avatar, called the "anchor point". The Entity
 * will follow this anchor as it moves.
 *
 * The Entity's own Transform is overridden by this component. To offset position and adjust scale,
 * add a child to the anchored Entity and set a Transform on it instead.
 *
 * AvatarAnchorPointType indicates which part of the avatar the Entity must follow.
 */
/**
 * @public
 */
export interface PBAvatarAttach {
    /** the user ID of the avatar (default: local user) */
    avatarId?: string | undefined;
    /** the anchor point. */
    anchorPointId: AvatarAnchorPointType;
}
/**
 * @public
 */
export declare namespace PBAvatarAttach {
    function encode(message: PBAvatarAttach, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarAttach;
}
