import { GrowOnlyValueSetComponentDefinition, LastWriteWinElementSetComponentDefinition } from '../engine/component';
import { IEngine } from '../engine/types';
import { AnimatorComponentDefinitionExtended } from './extended/Animator';
import { MaterialComponentDefinitionExtended } from './extended/Material';
import { MeshColliderComponentDefinitionExtended } from './extended/MeshCollider';
import { MeshRendererComponentDefinitionExtended } from './extended/MeshRenderer';
import { LwwComponentGetter, GSetComponentGetter } from './generated/index.gen';
import { NameType } from './manual/Name';
import { TransformComponentExtended } from './manual/Transform';
export * from './generated/index.gen';
export type { GrowOnlyValueSetComponentDefinition, LastWriteWinElementSetComponentDefinition, LwwComponentGetter, GSetComponentGetter };
export declare const Transform: LwwComponentGetter<TransformComponentExtended>;
export declare const Material: LwwComponentGetter<MaterialComponentDefinitionExtended>;
export declare const Animator: LwwComponentGetter<AnimatorComponentDefinitionExtended>;
export declare const MeshRenderer: LwwComponentGetter<MeshRendererComponentDefinitionExtended>;
export declare const MeshCollider: LwwComponentGetter<MeshColliderComponentDefinitionExtended>;
/**
 * @alpha
 */
export declare const Name: (engine: Pick<IEngine, 'defineComponent'>) => LastWriteWinElementSetComponentDefinition<NameType>;
