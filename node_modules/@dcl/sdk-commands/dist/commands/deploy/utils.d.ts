import { Scene } from '@dcl/schemas';
import { Lifecycle } from '@well-known-components/interfaces';
import { CatalystClient, ContentClient } from 'dcl-catalyst-client';
import { CliComponents } from '../../components';
import { IFile } from '../../logic/scene-validations';
import { LinkerResponse } from './linker-dapp/api';
export declare function getCatalyst(target?: string, targetContent?: string): Promise<CatalystClient | ContentClient>;
interface LinkOptions {
    openBrowser: boolean;
    linkerPort?: number;
    isHttps: boolean;
    skipValidations: boolean;
}
export declare function getAddressAndSignature(components: CliComponents, messageToSign: string, scene: Scene, files: IFile[], linkOptions: LinkOptions): Promise<{
    linkerResponse: Promise<LinkerResponse>;
    program?: Lifecycle.ComponentBasedProgram<unknown>;
}>;
export {};
