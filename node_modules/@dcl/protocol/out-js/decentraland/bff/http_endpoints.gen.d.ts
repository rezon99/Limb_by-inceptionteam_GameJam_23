import _m0 from "protobufjs/minimal";
import { Empty } from "../../google/protobuf/empty.gen";
export declare const protobufPackage = "decentraland.bff";
export interface AboutResponse {
    healthy: boolean;
    configurations: AboutResponse_AboutConfiguration | undefined;
    content: AboutResponse_ContentInfo | undefined;
    comms: AboutResponse_CommsInfo | undefined;
    lambdas: AboutResponse_LambdasInfo | undefined;
    bff?: AboutResponse_BffInfo | undefined;
    acceptingUsers: boolean;
}
export interface AboutResponse_MinimapConfiguration {
    enabled: boolean;
    dataImage?: string | undefined;
    estateImage?: string | undefined;
}
export interface AboutResponse_SkyboxConfiguration {
    /** only one value at a time */
    fixedHour?: number | undefined;
    textures: string[];
}
export interface AboutResponse_AboutConfiguration {
    realmName?: string | undefined;
    networkId: number;
    globalScenesUrn: string[];
    scenesUrn: string[];
    minimap?: AboutResponse_MinimapConfiguration | undefined;
    skybox?: AboutResponse_SkyboxConfiguration | undefined;
    /**
     * A content server to be used to load the parcels around the user. Uses the POST /entities/active endpoint
     * to continously fetch the parcels around the users. if null, then the default content server will be used
     * if == "" then the city_loader will be disabled and the scenes_urn will be used to load the world
     */
    cityLoaderContentServer?: string | undefined;
}
export interface AboutResponse_ContentInfo {
    /** common properties */
    healthy: boolean;
    version?: string | undefined;
    commitHash?: string | undefined;
    publicUrl: string;
}
export interface AboutResponse_LambdasInfo {
    /** common properties */
    healthy: boolean;
    version?: string | undefined;
    commitHash?: string | undefined;
    publicUrl: string;
}
export interface AboutResponse_CommsInfo {
    /** common properties */
    healthy: boolean;
    version?: string | undefined;
    commitHash?: string | undefined;
    publicUrl?: string | undefined;
    /** specific properties */
    protocol: string;
    usersCount?: number | undefined;
    fixedAdapter?: string | undefined;
}
export interface AboutResponse_BffInfo {
    /** common properties */
    healthy: boolean;
    version?: string | undefined;
    commitHash?: string | undefined;
    publicUrl: string;
    /** specific properties */
    userCount?: number | undefined;
    protocolVersion?: string | undefined;
}
export declare namespace AboutResponse {
    function encode(message: AboutResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse;
    function fromJSON(object: any): AboutResponse;
    function toJSON(message: AboutResponse): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse>, I>>(base?: I): AboutResponse;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse>, I>>(object: I): AboutResponse;
}
export declare namespace AboutResponse_MinimapConfiguration {
    function encode(message: AboutResponse_MinimapConfiguration, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_MinimapConfiguration;
    function fromJSON(object: any): AboutResponse_MinimapConfiguration;
    function toJSON(message: AboutResponse_MinimapConfiguration): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_MinimapConfiguration>, I>>(base?: I): AboutResponse_MinimapConfiguration;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_MinimapConfiguration>, I>>(object: I): AboutResponse_MinimapConfiguration;
}
export declare namespace AboutResponse_SkyboxConfiguration {
    function encode(message: AboutResponse_SkyboxConfiguration, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_SkyboxConfiguration;
    function fromJSON(object: any): AboutResponse_SkyboxConfiguration;
    function toJSON(message: AboutResponse_SkyboxConfiguration): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_SkyboxConfiguration>, I>>(base?: I): AboutResponse_SkyboxConfiguration;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_SkyboxConfiguration>, I>>(object: I): AboutResponse_SkyboxConfiguration;
}
export declare namespace AboutResponse_AboutConfiguration {
    function encode(message: AboutResponse_AboutConfiguration, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_AboutConfiguration;
    function fromJSON(object: any): AboutResponse_AboutConfiguration;
    function toJSON(message: AboutResponse_AboutConfiguration): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_AboutConfiguration>, I>>(base?: I): AboutResponse_AboutConfiguration;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_AboutConfiguration>, I>>(object: I): AboutResponse_AboutConfiguration;
}
export declare namespace AboutResponse_ContentInfo {
    function encode(message: AboutResponse_ContentInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_ContentInfo;
    function fromJSON(object: any): AboutResponse_ContentInfo;
    function toJSON(message: AboutResponse_ContentInfo): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_ContentInfo>, I>>(base?: I): AboutResponse_ContentInfo;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_ContentInfo>, I>>(object: I): AboutResponse_ContentInfo;
}
export declare namespace AboutResponse_LambdasInfo {
    function encode(message: AboutResponse_LambdasInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_LambdasInfo;
    function fromJSON(object: any): AboutResponse_LambdasInfo;
    function toJSON(message: AboutResponse_LambdasInfo): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_LambdasInfo>, I>>(base?: I): AboutResponse_LambdasInfo;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_LambdasInfo>, I>>(object: I): AboutResponse_LambdasInfo;
}
export declare namespace AboutResponse_CommsInfo {
    function encode(message: AboutResponse_CommsInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_CommsInfo;
    function fromJSON(object: any): AboutResponse_CommsInfo;
    function toJSON(message: AboutResponse_CommsInfo): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_CommsInfo>, I>>(base?: I): AboutResponse_CommsInfo;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_CommsInfo>, I>>(object: I): AboutResponse_CommsInfo;
}
export declare namespace AboutResponse_BffInfo {
    function encode(message: AboutResponse_BffInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AboutResponse_BffInfo;
    function fromJSON(object: any): AboutResponse_BffInfo;
    function toJSON(message: AboutResponse_BffInfo): unknown;
    function create<I extends Exact<DeepPartial<AboutResponse_BffInfo>, I>>(base?: I): AboutResponse_BffInfo;
    function fromPartial<I extends Exact<DeepPartial<AboutResponse_BffInfo>, I>>(object: I): AboutResponse_BffInfo;
}
export type HttpEndpointsDefinition = typeof HttpEndpointsDefinition;
export declare const HttpEndpointsDefinition: {
    readonly name: "HttpEndpoints";
    readonly fullName: "decentraland.bff.HttpEndpoints";
    readonly methods: {
        /** Returns the status and configuration of the bff microservice */
        readonly about: {
            readonly name: "About";
            readonly requestType: typeof Empty;
            readonly requestStream: false;
            readonly responseType: typeof AboutResponse;
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
