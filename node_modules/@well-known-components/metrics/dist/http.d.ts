import { IHttpServerComponent, IMetricsComponent } from "@well-known-components/interfaces";
import { Registry } from "prom-client";
export declare const httpLabels: readonly ["method", "handler", "code"];
declare const metrics: {
    http_request_duration_seconds: {
        type: "histogram";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
    http_requests_total: {
        type: "counter";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
    http_request_size_bytes: {
        type: "histogram";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
};
export declare type HttpMetrics = keyof typeof metrics;
/**
 * @public
 */
export declare function getDefaultHttpMetrics(): IMetricsComponent.MetricsRecordDefinition<HttpMetrics>;
export declare function instrumentHttpServerWithPromClientRegistry<K extends string>(options: {
    server: IHttpServerComponent<IHttpServerComponent.DefaultContext<any>>;
    metrics: IMetricsComponent<K | HttpMetrics> & {
        registry?: Registry;
    };
    metricsPath: string;
    bearerToken?: string;
    resetEveryNight?: boolean;
}): void;
export {};
